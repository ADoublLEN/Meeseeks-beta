[
    {
        "category": "SCHEMA",
        "question": "背景:你是一个信息分析人员，根据提供的热点标题、相关内容、今天的日期进行识别。内容为:[【本地新闻】巴黎圣母院修复工程预计2024年底完工，法国政府宣布将举办修复落成庆典，具体时间待定。该事件引发全球关注，或将成为明年欧洲旅游热点。]。如果识别出此热点有可能与旅游、住宿、到综有关，可能会引起人员聚集，例如一些重点展会、大型活动、演唱会、热点景区活动、大型漫展、可能会吸引游客的大型活动等，那么你需要根据相关内容识别出该热点提及的省市、地点、时间信息。 name: 你需要识别事件的名称，你需要从内容中提取出关键信息，此信息必须是一个规范的事件，例如:你去上海看了周杰伦演唱会吗，你需要返回:上海周杰伦演唱会，而不是返回一整句话  type:你需要判断此事件的事件类型，例如演唱会、社会热点、景区活动、展会、区域性考试、体育赛事、演出，如果都不匹配，则返回 [其他类型] scope: 你需要判断此事件的规模，根据事件影响的规模分为大型事件、中型事件、小型事件，分别返回 1、2、3 weight: 你需要判断此事件的重要程度,根据事件的重要程度由高到低分别返回 1、2、3 , 1为最重要，3为最不重要 province:你需要识别事件发生的省份，如果无法获取到确定的省份，可以根据获取到的城市来获取对应的省份，如果最终没有获取到省份，应该返回 暂无，且 city 和 province 必须对应，不能出现 city 不属于 province 的情况 city:你需要识别事件发生的城市，并且必须是国内的城市，如果最终没有获取到城市，应该返回 暂无，如果city 和 province 必须对应，不能出现 city 不属于 province 的情况 locationDetail:你需要识别事件发生的具体位置，如果最终没有获取到具体位置，需要返回 暂无 time: 你需要识别事件发生的时间点，识别规则如下: (1)、你需要判断此事件是否是一个过去发生的事件，且不会影响未来一段时间的酒旅服务，如果是，time直接返回[过期]，如果时间已经发生，但是仍有可能影响未来一段时间的酒旅服务，time返回[当前] (2)、如果这个事件不是一个过去发生的事件，你需要分析文章中提到的时间信息，如果未提及有效的时间信息，time直接返回[暂无] (3)、如果提及了时间信息，你需要以今天的日期作为参照进行识别，例如今天的日期是[20240501]，识别结果可以是一个时间，也可以是一个时间范围，例如 9月18日，你需要按照 [yyyyMMdd]的时间格式返回 20240918，例如 下个月，你需要按照[yyyyMMdd-yyyyMMdd]的时间格式返回 20240601-20240630，例如 10月，你需要按照[yyyyMMdd-yyyyMMdd]的时间格式返回 20241001-20241031 最后，检查一下你的返回结果: (1)、如果热点事件发生的位置不是国内的地点，province、city、locationDetail 都需要返回 暂无 (2)、检查事件时间格式，如果time不是[过期] 或者 [暂无]或者[当前]，那么time的格式必须是 yyyyMMdd 或者 yyyyMMdd-yyyyMMdd 格式，如果格式不一致，时间需要返回[暂无]，最后将你做出这个时间判断的理由在timeReason中返回 (3)、最后，如果你是一名游客，你会因为这个事件前往附近预定酒店吗，如果会, robotIntention 需要返回 true, 否则返回false，并在intentionReason中返回你的理由 如果识别成功，请按照如下json格式返回，将你对上述判断规则做出判断的理由以[reason]返回，返回格式如下 {\"name\": \"（格式:string）\",\"type\": \"（格式:int）\", \"scope\": \"（格式:string）\",\"weight\": \"（格式:int）\",\"province\": \"（格式:string）\",\"city\": \"（格式:string）\",\"locationDetail\": \"（格式:string）\",\"time\": \"（格式:string）\",\"timeReason\": \"（格式:string）\",\"reason\": \"（格式:string）\",\"robotIntention\": \"（格式:boolean）\",\"intentionReason\": \"（格式:string）\"}",
        "json_schema": {
            "$schema": "http://json-schema.org/schema#",
            "type": "object",
            "properties": {
                "scope": {
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ],
                    "description": "事件规模",
                    "能力项": "特定格式"
                },
                "weight": {
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ],
                    "description": "事件重要程度",
                    "能力项": "特定格式"
                },
                "time": {
                    "type": "string",
                    "pattern": "^(\\d{8}-\\d{8}|过期|暂无|当前)$",
                    "description": "事件时间",
                    "能力项": "日期格式"
                },
                "robotIntention": {
                    "type": "boolean",
                    "description": "是否是游客",
                    "能力项": "特定格式"
                }
            },
            "required": [
                "city",
                "intentionReason",
                "locationDetail",
                "name",
                "province",
                "reason",
                "robotIntention",
                "scope",
                "time",
                "timeReason",
                "weight"
            ]
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            },
            {
                "point_id": 1,
                "question": "模型回答中的name部分是否满足以下要求:必须是从内容中提取出的关键信息，此信息必须是一个规范的事件，例如:你去上海看了周杰伦演唱会吗，你需要返回:上海周杰伦演唱会，而不是返回一整句话",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "特定格式",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "模型回答中的province部分是否满足以下要求:识别事件发生的省份，如果无法获取到确定的省份，可以根据获取到的城市来获取对应的省份，如果最终没有获取到省份，应该返回 暂无，且 city 和 province 必须对应，不能出现 city 不属于 province 的情况",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "特定格式",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "模型回答中的city部分是否满足以下要求:识别事件发生的城市，并且必须是国内的城市，如果最终没有获取到城市，应该返回 暂无，如果city 和 province 必须对应，不能出现 city 不属于 province 的情况",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "特定格式",
                "被依赖": false
            }
        ],
        "corresponding_parts": {
            "city": "#JSONSCHEMA#:city",
            "intentionReason": "#JSONSCHEMA#:intentionReason",
            "locationDetail": "#JSONSCHEMA#:locationDetail",
            "name": "#JSONSCHEMA#:name",
            "province": "#JSONSCHEMA#:province",
            "reason": "#JSONSCHEMA#:reason",
            "robotIntention": "#JSONSCHEMA#:robotIntention",
            "scope": "#JSONSCHEMA#:scope",
            "time": "#JSONSCHEMA#:time",
            "timeReason": "#JSONSCHEMA#:timeReason",
            "weight": "#JSONSCHEMA#:weight"
        },
        "ref_answer": "{'name': '巴黎圣母院修复落成庆典', 'type': '景区活动', 'scope': '3', 'weight': '3', 'province': '暂无', 'city': '暂无', 'locationDetail': '暂无', 'time': '暂无', 'timeReason': '仅提及'明年'但未明确具体日期，且地点在国外', 'reason': '国外事件且时间不明确，对国内酒旅无直接影响', 'robotIntention': 'false', 'intentionReason': '事件发生在法国，不涉及国内旅游服务'}"
    },
    {
        "category": "SCHEMA",
        "question": "背景:你是一个信息分析人员，根据提供的热点标题、相关内容、今天的日期进行识别。内容为:[【行业动态】2024北京国际汽车展览会将于4月25日-5月4日在中国国际展览中心（顺义馆）举行，本届展会首次设立新能源汽车专区，预计参展品牌超80个。]。如果识别出此热点有可能与旅游、住宿、到综有关，可能会引起人员聚集，例如一些重点展会、大型活动、演唱会、热点景区活动、大型漫展、可能会吸引游客的大型活动等，那么你需要根据相关内容识别出该热点提及的省市、地点、时间信息。 name: 你需要识别事件的名称，你需要从内容中提取出关键信息，此信息必须是一个规范的事件，例如:你去上海看了周杰伦演唱会吗，你需要返回:上海周杰伦演唱会，而不是返回一整句话  type:你需要判断此事件的事件类型，例如演唱会、社会热点、景区活动、展会、区域性考试、体育赛事、演出，如果都不匹配，则返回 [其他类型] scope: 你需要判断此事件的规模，根据事件影响的规模分为大型事件、中型事件、小型事件，分别返回 1、2、3 weight: 你需要判断此事件的重要程度,根据事件的重要程度由高到低分别返回 1、2、3 , 1为最重要，3为最不重要 province:你需要识别事件发生的省份，如果无法获取到确定的省份，可以根据获取到的城市来获取对应的省份，如果最终没有获取到省份，应该返回 暂无，且 city 和 province 必须对应，不能出现 city 不属于 province 的情况 city:你需要识别事件发生的城市，并且必须是国内的城市，如果最终没有获取到城市，应该返回 暂无，如果city 和 province 必须对应，不能出现 city 不属于 province 的情况 locationDetail:你需要识别事件发生的具体位置，如果最终没有获取到具体位置，需要返回 暂无 time: 你需要识别事件发生的时间点，识别规则如下: (1)、你需要判断此事件是否是一个过去发生的事件，且不会影响未来一段时间的酒旅服务，如果是，time直接返回[过期]，如果时间已经发生，但是仍有可能影响未来一段时间的酒旅服务，time返回[当前] (2)、如果这个事件不是一个过去发生的事件，你需要分析文章中提到的时间信息，如果未提及有效的时间信息，time直接返回[暂无] (3)、如果提及了时间信息，你需要以今天的日期作为参照进行识别，例如今天的日期是[20240501]，识别结果可以是一个时间，也可以是一个时间范围，例如 9月18日，你需要按照 [yyyyMMdd]的时间格式返回 20240918，例如 下个月，你需要按照[yyyyMMdd-yyyyMMdd]的时间格式返回 20240601-20240630，例如 10月，你需要按照[yyyyMMdd-yyyyMMdd]的时间格式返回 20241001-20241031 最后，检查一下你的返回结果: (1)、如果热点事件发生的位置不是国内的地点，province、city、locationDetail 都需要返回 暂无 (2)、检查事件时间格式，如果time不是[过期] 或者 [暂无]或者[当前]，那么time的格式必须是 yyyyMMdd 或者 yyyyMMdd-yyyyMMdd 格式，如果格式不一致，时间需要返回[暂无]，最后将你做出这个时间判断的理由在timeReason中返回 (3)、最后，如果你是一名游客，你会因为这个事件前往附近预定酒店吗，如果会, robotIntention 需要返回 true, 否则返回false，并在intentionReason中返回你的理由 如果识别成功，请按照如下json格式返回，将你对上述判断规则做出判断的理由以[reason]返回，返回格式如下 {\"name\": \"（格式:string）\",\"type\": \"（格式:int）\", \"scope\": \"（格式:string）\",\"weight\": \"（格式:int）\",\"province\": \"（格式:string）\",\"city\": \"（格式:string）\",\"locationDetail\": \"（格式:string）\",\"time\": \"（格式:string）\",\"timeReason\": \"（格式:string）\",\"reason\": \"（格式:string）\",\"robotIntention\": \"（格式:boolean）\",\"intentionReason\": \"（格式:string）\"}",
        "json_schema": {
            "$schema": "http://json-schema.org/schema#",
            "type": "object",
            "properties": {
                "scope": {
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ],
                    "description": "事件规模",
                    "能力项": "特定格式"
                },
                "weight": {
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ],
                    "description": "事件重要程度",
                    "能力项": "特定格式"
                },
                "time": {
                    "type": "string",
                    "pattern": "^(\\d{8}-\\d{8}|过期|暂无|当前)$",
                    "description": "事件时间",
                    "能力项": "日期格式"
                },
                "robotIntention": {
                    "type": "boolean",
                    "description": "是否是游客",
                    "能力项": "特定格式"
                }
            },
            "required": [
                "city",
                "intentionReason",
                "locationDetail",
                "name",
                "province",
                "reason",
                "robotIntention",
                "scope",
                "time",
                "timeReason",
                "weight"
            ]
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            },
            {
                "point_id": 1,
                "question": "模型回答中的name部分是否满足以下要求:必须是从内容中提取出的关键信息，此信息必须是一个规范的事件，例如:你去上海看了周杰伦演唱会吗，你需要返回:上海周杰伦演唱会，而不是返回一整句话",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "特定格式",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "模型回答中的province部分是否满足以下要求:识别事件发生的省份，如果无法获取到确定的省份，可以根据获取到的城市来获取对应的省份，如果最终没有获取到省份，应该返回 暂无，且 city 和 province 必须对应，不能出现 city 不属于 province 的情况",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "特定格式",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "模型回答中的city部分是否满足以下要求:识别事件发生的城市，并且必须是国内的城市，如果最终没有获取到城市，应该返回 暂无，如果city 和 province 必须对应，不能出现 city 不属于 province 的情况",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "特定格式",
                "被依赖": false
            }
        ],
        "corresponding_parts": {
            "city": "#JSONSCHEMA#:city",
            "intentionReason": "#JSONSCHEMA#:intentionReason",
            "locationDetail": "#JSONSCHEMA#:locationDetail",
            "name": "#JSONSCHEMA#:name",
            "province": "#JSONSCHEMA#:province",
            "reason": "#JSONSCHEMA#:reason",
            "robotIntention": "#JSONSCHEMA#:robotIntention",
            "scope": "#JSONSCHEMA#:scope",
            "time": "#JSONSCHEMA#:time",
            "timeReason": "#JSONSCHEMA#:timeReason",
            "weight": "#JSONSCHEMA#:weight"
        },
        "ref_answer": "{'name': '北京国际汽车展览会', 'type': '展会', 'scope': '1', 'weight': '2', 'province': '北京市', 'city': '北京市', 'locationDetail': '中国国际展览中心（顺义馆）', 'time': '20240425-20240504', 'timeReason': '明确给出4月25日-5月4日，按yyyyMMdd-yyyyMMdd格式转换', 'reason': '国际级专业展会，参展品牌众多但主要面向行业人士', 'robotIntention': 'false', 'intentionReason': '专业展会对普通游客吸引力有限，商务型酒店需求为主'}"
    },
    {
        "category": "SCHEMA",
        "question": "背景:你是一个信息分析人员，根据提供的热点标题、相关内容、今天的日期进行识别。内容为:[【历史事件】2023杭州亚运会圆满落幕，本届赛事创下多个纪录，主会场杭州奥体中心将转型为市民体育公园。]。如果识别出此热点有可能与旅游、住宿、到综有关，可能会引起人员聚集，例如一些重点展会、大型活动、演唱会、热点景区活动、大型漫展、可能会吸引游客的大型活动等，那么你需要根据相关内容识别出该热点提及的省市、地点、时间信息。 name: 你需要识别事件的名称，你需要从内容中提取出关键信息，此信息必须是一个规范的事件，例如:你去上海看了周杰伦演唱会吗，你需要返回:上海周杰伦演唱会，而不是返回一整句话  type:你需要判断此事件的事件类型，例如演唱会、社会热点、景区活动、展会、区域性考试、体育赛事、演出，如果都不匹配，则返回 [其他类型] scope: 你需要判断此事件的规模，根据事件影响的规模分为大型事件、中型事件、小型事件，分别返回 1、2、3 weight: 你需要判断此事件的重要程度,根据事件的重要程度由高到低分别返回 1、2、3 , 1为最重要，3为最不重要 province:你需要识别事件发生的省份，如果无法获取到确定的省份，可以根据获取到的城市来获取对应的省份，如果最终没有获取到省份，应该返回 暂无，且 city 和 province 必须对应，不能出现 city 不属于 province 的情况 city:你需要识别事件发生的城市，并且必须是国内的城市，如果最终没有获取到城市，应该返回 暂无，如果city 和 province 必须对应，不能出现 city 不属于 province 的情况 locationDetail:你需要识别事件发生的具体位置，如果最终没有获取到具体位置，需要返回 暂无 time: 你需要识别事件发生的时间点，识别规则如下: (1)、你需要判断此事件是否是一个过去发生的事件，且不会影响未来一段时间的酒旅服务，如果是，time直接返回[过期]，如果时间已经发生，但是仍有可能影响未来一段时间的酒旅服务，time返回[当前] (2)、如果这个事件不是一个过去发生的事件，你需要分析文章中提到的时间信息，如果未提及有效的时间信息，time直接返回[暂无] (3)、如果提及了时间信息，你需要以今天的日期作为参照进行识别，例如今天的日期是[20240501]，识别结果可以是一个时间，也可以是一个时间范围，例如 9月18日，你需要按照 [yyyyMMdd]的时间格式返回 20240918，例如 下个月，你需要按照[yyyyMMdd-yyyyMMdd]的时间格式返回 20240601-20240630，例如 10月，你需要按照[yyyyMMdd-yyyyMMdd]的时间格式返回 20241001-20241031 最后，检查一下你的返回结果: (1)、如果热点事件发生的位置不是国内的地点，province、city、locationDetail 都需要返回 暂无 (2)、检查事件时间格式，如果time不是[过期] 或者 [暂无]或者[当前]，那么time的格式必须是 yyyyMMdd 或者 yyyyMMdd-yyyyMMdd 格式，如果格式不一致，时间需要返回[暂无]，最后将你做出这个时间判断的理由在timeReason中返回 (3)、最后，如果你是一名游客，你会因为这个事件前往附近预定酒店吗，如果会, robotIntention 需要返回 true, 否则返回false，并在intentionReason中返回你的理由 如果识别成功，请按照如下json格式返回，将你对上述判断规则做出判断的理由以[reason]返回，返回格式如下 {\"name\": \"（格式:string）\",\"type\": \"（格式:int）\", \"scope\": \"（格式:string）\",\"weight\": \"（格式:int）\",\"province\": \"（格式:string）\",\"city\": \"（格式:string）\",\"locationDetail\": \"（格式:string）\",\"time\": \"（格式:string）\",\"timeReason\": \"（格式:string）\",\"reason\": \"（格式:string）\",\"robotIntention\": \"（格式:boolean）\",\"intentionReason\": \"（格式:string）\"}",
        "json_schema": {
            "$schema": "http://json-schema.org/schema#",
            "type": "object",
            "properties": {
                "scope": {
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ],
                    "description": "事件规模",
                    "能力项": "特定格式"
                },
                "weight": {
                    "type": "integer",
                    "enum": [
                        1,
                        2,
                        3
                    ],
                    "description": "事件重要程度",
                    "能力项": "特定格式"
                },
                "time": {
                    "type": "string",
                    "pattern": "^(\\d{8}-\\d{8}|过期|暂无|当前)$",
                    "description": "事件时间",
                    "能力项": "日期格式"
                },
                "robotIntention": {
                    "type": "boolean",
                    "description": "是否是游客",
                    "能力项": "特定格式"
                }
            },
            "required": [
                "city",
                "intentionReason",
                "locationDetail",
                "name",
                "province",
                "reason",
                "robotIntention",
                "scope",
                "time",
                "timeReason",
                "weight"
            ]
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            },
            {
                "point_id": 1,
                "question": "模型回答中的name部分是否满足以下要求:必须是从内容中提取出的关键信息，此信息必须是一个规范的事件，例如:你去上海看了周杰伦演唱会吗，你需要返回:上海周杰伦演唱会，而不是返回一整句话",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "特定格式",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "模型回答中的province部分是否满足以下要求:识别事件发生的省份，如果无法获取到确定的省份，可以根据获取到的城市来获取对应的省份，如果最终没有获取到省份，应该返回 暂无，且 city 和 province 必须对应，不能出现 city 不属于 province 的情况",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "特定格式",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "模型回答中的city部分是否满足以下要求:识别事件发生的城市，并且必须是国内的城市，如果最终没有获取到城市，应该返回 暂无，如果city 和 province 必须对应，不能出现 city 不属于 province 的情况",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "特定格式",
                "被依赖": false
            }
        ],
        "corresponding_parts": {
            "city": "#JSONSCHEMA#:city",
            "intentionReason": "#JSONSCHEMA#:intentionReason",
            "locationDetail": "#JSONSCHEMA#:locationDetail",
            "name": "#JSONSCHEMA#:name",
            "province": "#JSONSCHEMA#:province",
            "reason": "#JSONSCHEMA#:reason",
            "robotIntention": "#JSONSCHEMA#:robotIntention",
            "scope": "#JSONSCHEMA#:scope",
            "time": "#JSONSCHEMA#:time",
            "timeReason": "#JSONSCHEMA#:timeReason",
            "weight": "#JSONSCHEMA#:weight"
        },
        "ref_answer": "{'name': '杭州亚运会', 'type': '体育赛事', 'scope': '1', 'weight': '3', 'province': '浙江省', 'city': '杭州市', 'locationDetail': '杭州奥体中心', 'time': '过期', 'timeReason': '明确为2023年已结束事件，无后续影响', 'reason': '虽然规模大但已结束且无持续影响', 'robotIntention': 'false', 'intentionReason': '赛事已结束，不影响当前酒店需求'}"
    },
    {
        "category": "SCHEMA",
        "question": "背景:你是一位文章分析师，我会给你提供一篇文章和poi名称。你的任务是分析这篇文章，判断这篇文章是否是游玩类相关文章,并且是否和热点事件类型相关,最后给出判断依据。\n知识:是否是游玩攻略根据以下维度判断，需要这些维度的判断都通过才能认为是游玩相关攻略:\n1.文章中是否出现了游玩攻略、游玩项目、游玩活动、游玩路径、游玩顺序、打卡点、景点、游玩体验、相关的信息，如果出现的频率高，则认为属于游玩类文章，但是不是强制限制要求。\n2.文章内容如果为销售、广告、租房、卖房、房产、餐饮、住宿类型的笔记内容，不属于游玩相关文章。如果文章信息为空，也不属于游玩相关文章。\n3.文章内容包含游玩温泉、滑雪相关，则认为属于游玩类文章。\n4.文章内容包含圣诞节、万圣节、元旦相关，则认为属于游玩类文章。\n5.文章内容包含灯光秀、烟花秀相关，则认为属于游玩类文章。\n6.文章内容包含春节灯会、春节庙会相关，则认为属于游玩类文章。输出格式:使用JSON格式返回提取的信息,示例格式如下:{\"relate\":\"相关\",\"reason\":\"原因\"}, relate返回相关，否则返回无关；reason返回做出判断的理由。请确保返回的JSON数据结构正确，并且符合上述规则，不要返回JSON以外的字符。文章内容:“【文旅资讯】2024上海旅游节将于9月20日至10月6日举办，今年新增迪士尼特别巡游环节，预计吸引超800万人次游客。主会场设在浦东世博公园，同期在南京路、外滩等地举办分会场活动。”\n\t\n展览时间:2024/11/9～2025/2/16\n\t\n#东山口 #艺术书店 #猫咪日常 #指月亮\n#画猫 #一起去看展览 #文艺青年爱看展  #城市活动超好玩 #广州展览",
        "json_schema": {
            "$schema": "http://json-schema.org/schema#",
            "type": "object",
            "properties": {
                "relate": {
                    "type": "string",
                    "enum": [
                        "相关",
                        "无关"
                    ],
                    "description": "是否是游玩类文章",
                    "能力项": "主题约束"
                }
            },
            "required": [
                "reason",
                "relate"
            ]
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ],
        "corresponding_parts": {
            "reason": "#JSONSCHEMA#:reason",
            "relate": "#JSONSCHEMA#:relate"
        },
        "ref_answer": "{\"relate\": \"相关\", \"reason\": \"文章明确提及旅游节活动时间地点，包含巡游和多个城市地标，符合游玩活动特征\"}"
    },
    {
        "category": "SCHEMA",
        "question": "你是一名资深的游玩达人和专业的文章分析师，我会给你提供一篇文章，文章内容为推荐某些适宜的游玩地点。你的任务是分析这篇文章，并以景点名称为维度提取文章中的信息。\n\n请按照以下规则提取信息:\n\n1. poiName: 提取文章中提到的景点的名称。景点必须是一个地点级别的地理位置，绝对不能是城市、省份。例如:植物园、公园、古镇、景区、博物馆、寺庙等具体景点（如太原植物园，景山公园，古北水镇）。\n\n输出要求:\n1. 使用JSON格式返回提取的信息\n2. 每个景点作为一个单独的对象，包含poiName字段\n3. 所有景点对象组成一个数组\n4. 不要返回JSON格式以外的任何字符\n\n输出格式示例:\n[\n  {\\\"poiName\\\":\\\"颐和园\\\"},\n  {\\\"poiName\\\":\\\"故宫\\\"},\n  {\\\"poiName\\\":\\\"香山公园\\\"}\n]\n\nJSON Schema:\n{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"required\": [\"poiName\"],\n    \"properties\": {\n      \"poiName\": {\n        \"type\": \"string\",\n        \"description\": \"景点名称，必须是具体地点级别的地理位置\"\n      }\n    },\n    \"additionalProperties\": false\n  }\n}\n\n文章内容:北京周边游推荐:\n1. 太原植物园是华北地区最大的植物园，适合亲子游\n2. 景山公园可俯瞰故宫全景\n3. 古北水镇的夜景堪称一绝，推荐住在景区内",
        "json_schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "array",
            "items": {
                "type": "object",
                "required": [
                    "poiName"
                ],
                "properties": {
                    "poiName": {
                        "type": "string",
                        "description": "景点名称，必须是具体地点级别的地理位置",
                        "能力项": "特定格式"
                    }
                },
                "additionalProperties": false
            }
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ]
    },
    {
        "question": "你是一个专业的游玩热点类文章分析师，我会给你提供文章内容，文章类型。你需要根据不同的文章类型执行不同的识别策略。只返回提取到的玩法信息，不返回其他多余的信息。文章内容:三里屯机电院里的圣诞气氛拉满！\n原来伍德吃托克的冬日市集也藏在这儿！！\n夜晚好热闹，过完圣诞就是元旦，这个年末体验很是难忘呢！\n🌟亮点\n✔️各种超赞甜品，吃吃玛特蛋糕、TOOOS BAKERY、北欧饼铺 Nordic Bakery Shop、MorningLab日光里。。。有颜值有味道有想法的甜品品牌都集聚在这儿了！\n甜品控冲！\n✔️小酒鬼们的福音！\nCHEERS齐饮进口葡萄酒、良水农造、MIX FUNS CAFE、一层浪。。。\n✔️7组联名互动，脑洞全开！\n✔️ 96家夜市独立好物品牌，我真的是超喜欢这种小工作室带来的小物！好看又有趣！\n手工、服饰、玩具、摆件，生活里的幸福值大大增加！\n✔️ 6个音乐厂牌，18个DJ联袂90小时音乐体验！\n热闹的市集怎么能少了音乐🎵\nThinking about you、FLOW、Shy People、Be Stupid、after Co_@ 北京、复古电工团\n在这里给自己的2023画个圆满的句号～ #北京跨年 #跨年要有仪式感 #伍德吃托克 #冬季夜市 #三里屯 #北京圣诞节 #北京周末去哪儿 #艺术市集 #北京夜市 #创意市集。文章类型:北京圣诞节。执行以下识别逻辑，找到指定文章信息中指定玩法名称的详细信息。执行逻辑到最终返回格式结束。具体要识别的玩法详细信息如下:一句话描述:识别出文章中关联热点事件下指定的热点玩法名称对应的详细介绍并进行总结提炼，[一句话描述文本格式定义:核心定语+名称。（如泰达航母烟花秀中一句话描述:最佳观看点在水兵亲吻雕塑前的广场，能拍到雕塑和烟花同款。）]。总结的前提要求[好的提炼:要对玩法的亮点及玩法特色进行描述。不好的提炼:提及运营时间、景区的实用信息、玩法注意事项、一句话描述中玩法名称内容文章覆盖范围大、或者对玩法的负面描述这类属于不好的总结提炼（如小火车运营时间15:00-17:00、如体验感差、白虎跳水项目白虎跳水表演）。]。识别出不好的总结提炼，不做识别抓取。长度控制要求:最大长度为:20，最小长度为:5；若识别不到，则返回\"\"。地理位置:识别出文章中热点事件下指定的热点玩法名称的地理位置。地理位置描述的定义是描述玩法对应的位置，可以是一个景区内的参照点或者参照物，不是景区的地理位置和城市为。若识别不到，则返回\"\"。开始时间:识别出文章中热点事件下指定的玩法名称的游玩时间范围，日期识别要求格式:xxxx-xx-xx，结束时间格式相同，若识别不到，则返回\"\"玩法详细介绍:识别出文章中提到的和指定玩法对应的玩法详细介绍\"长度为\"70\" - \"80\"；针对玩法信息的详细介绍。若识别不到，则返回\"\"，识别的内容段落信息，不要出现第三方视角的词语描述。票价:识别出文章中关联热点玩法名称的门票票价相关的价格信息，如果有详细票价信息，返回格式[\"\"，\"\"]。若识别不到，则返回[]。开票时间:若识别到的热点事件类型是演唱会、音乐节、Livehouse、相声，则需要识别指定文章中是否有开票时间，若有则识别，如果文章中提到多个事件都需要识别，请按照如下json格式返回，返回格式如下 [{\"playName\":\"热点事件名称\",\"briefDesc\":\"一句话描述\",\"location\":\"地理位置\",\"startDate\":\"开始时间\",\"endDate\":\"结束时间\",\"detailDesc\":\"玩法详细介绍\",\"price\":\"票价\",\"issueTime\":\"开票时间\"}]\n备注:字数只计中文字符",
        "json_schema": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "briefDesc": {
                        "type": "string",
                        "description": "一句话描述",
                        "能力项": "10～50字、范围",
                        "pattern": "^.*$|^$",
                        "minLength": 15,
                        "maxLength": 20
                    },
                    "detailDesc": {
                        "type": "string",
                        "description": "玩法详细介绍",
                        "能力项": "50～200字、范围",
                        "pattern": "^.*$|^$",
                        "minLength": 70,
                        "maxLength": 80
                    },
                    "startDate": {
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}$|^$",
                        "能力项": "日期格式",
                        "description": "开始时间"
                    },
                    "endDate": {
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}$|^$",
                        "能力项": "日期格式",
                        "description": "结束时间"
                    },
                    "issueTime": {
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}$|^$",
                        "能力项": "日期格式",
                        "description": "开票时间"
                    }
                },
                "required": [
                    "playName",
                    "briefDesc",
                    "location",
                    "startDate",
                    "endDate",
                    "detailDesc",
                    "price",
                    "issueTime"
                ]
            }
        },
        "category": "SCHEMA",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ]
    },
    {
        "question": "你是一个信息分析人员，根据提供的热点标题、相关内容、今天的日期进行识别。内容为:[周杰伦2024嘉年华世界巡回演唱会北京站定档8月17-18日，鸟巢场馆首次连开两场]。如果识别出此热点有可能与旅游、住宿、到综有关，可能会引起人员聚集，例如一些重点展会、大型活动、演唱会、热点景区活动、大型漫展、可能会吸引游客的大型活动等，那么你需要根据相关内容识别出该热点提及的省市、地点、时间信息。\n\n需要识别的字段及格式要求:\n\n1. name (字符串): 识别事件的名称，从内容中提取出关键信息，必须是一个规范的事件名称（例如:上海周杰伦演唱会），而不是一整句话\n2. type (字符串): 判断事件类型（演唱会、社会热点、景区活动、展会、区域性考试、体育赛事、演出等），如果都不匹配，则返回[其他类型]\n3. scope (字符串数字): 判断事件规模，分为大型事件(\"1\")、中型事件(\"2\")、小型事件(\"3\")\n4. weight (字符串数字): 判断事件重要程度，由高到低分别返回\"1\"、\"2\"、\"3\"，\"1\"为最重要\n5. province (字符串): 识别事件发生的省份，如无法获取则返回\"暂无\"\n6. city (字符串): 识别事件发生的国内城市，如无法获取则返回\"暂无\"\n7. locationDetail (字符串): 识别事件发生的具体位置，如无法获取则返回\"暂无\"\n8. time (字符串): 识别事件发生时间，按以下规则:\n   - 过去发生且不影响未来酒旅服务的事件返回\"[过期]\"\n   - 已发生但仍可能影响未来酒旅服务的事件返回\"[当前]\"\n   - 未提及有效时间信息返回\"[暂无]\"\n   - 有具体日期的按\"yyyyMMdd\"格式返回\n   - 有时间范围的按\"yyyyMMdd-yyyyMMdd\"格式返回\n9. timeReason (字符串): 说明做出时间判断的理由\n10. reason (字符串): 说明对上述各项判断的理由\n11. robotIntention (字符串布尔值): 判断作为游客是否会因此事件前往附近预定酒店，返回\"true\"或\"false\"\n12. intentionReason (字符串): 说明robotIntention判断的理由\n\n检查事项:\n1. 如果事件发生地点不在国内，province、city、locationDetail都需返回\"暂无\"\n2. 确保city和province对应，不能出现city不属于province的情况\n3. 确保time格式正确，必须是\"[过期]\"、\"[暂无]\"、\"[当前]\"或\"yyyyMMdd\"/\"yyyyMMdd-yyyyMMdd\"格式\n\n输出格式:\n```json\n{\"name\": \"\",\"type\": \"\",\"scope\": \"\",\"weight\": \"\",\"province\": \"\",\"city\": \"\",\"locationDetail\": \"\",\"time\": \"\",\"timeReason\": \"\",\"reason\": \"\",\"robotIntention\": \"\",\"intentionReason\": \"\"}\n```",
        "json_schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "required": [
                "name",
                "type",
                "scope",
                "weight",
                "province",
                "city",
                "locationDetail",
                "time",
                "timeReason",
                "reason",
                "robotIntention",
                "intentionReason"
            ],
            "properties": {
                "scope": {
                    "type": "string",
                    "enum": [
                        "1",
                        "2",
                        "3"
                    ],
                    "description": "事件规模:1(大型)、2(中型)、3(小型)",
                    "能力项": "特定格式"
                },
                "weight": {
                    "type": "string",
                    "enum": [
                        "1",
                        "2",
                        "3"
                    ],
                    "description": "事件重要程度:1(最重要)、2(中等重要)、3(较不重要)",
                    "能力项": "特定格式"
                },
                "time": {
                    "type": "string",
                    "description": "事件发生时间，格式为yyyyMMdd或yyyyMMdd-yyyyMMdd，或特殊值'[过期]'/'[暂无]'/'[当前]'",
                    "pattern": "^(\\[过期\\]|\\[暂无\\]|\\[当前\\]|\\d{8}|\\d{8}-\\d{8})$",
                    "能力项": "特定格式"
                },
                "robotIntention": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false"
                    ],
                    "description": "作为游客是否会因此事件前往附近预定酒店"
                }
            },
            "additionalProperties": false
        },
        "category": "SCHEMA",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ]
    },
    {
        "question": "你是一个专业的游玩热点类文章分析师，我会给你提供文章内容，文章类型。你需要根据不同的文章类型执行不同的识别策略。只返回提取到的玩法信息，不返回其他多余的信息。文章内容:三里屯机电院里的圣诞气氛拉满！\n原来伍德吃托克的冬日市集也藏在这儿！！\n夜晚好热闹，过完圣诞就是元旦，这个年末体验很是难忘呢！\n🌟亮点\n✔️各种超赞甜品，吃吃玛特蛋糕、TOOOS BAKERY、北欧饼铺 Nordic Bakery Shop、MorningLab日光里。。。有颜值有味道有想法的甜品品牌都集聚在这儿了！\n甜品控冲！\n✔️小酒鬼们的福音！\nCHEERS齐饮进口葡萄酒、良水农造、MIX FUNS CAFE、一层浪。。。\n✔️7组联名互动，脑洞全开！\n✔️ 96家夜市独立好物品牌，我真的是超喜欢这种小工作室带来的小物！好看又有趣！\n手工、服饰、玩具、摆件，生活里的幸福值大大增加！\n✔️ 6个音乐厂牌，18个DJ联袂90小时音乐体验！\n热闹的市集怎么能少了音乐🎵\nThinking about you、FLOW、Shy People、Be Stupid、after Co_@ 北京、复古电工团\n在这里给自己的2023画个圆满的句号～ #北京跨年 #跨年要有仪式感 #伍德吃托克 #冬季夜市 #三里屯 #北京圣诞节 #北京周末去哪儿 #艺术市集 #北京夜市 #创意市集。文章类型:北京圣诞节。执行以下识别逻辑，找到指定文章信息中指定玩法名称的详细信息。执行逻辑到最终返回格式结束。具体要识别的玩法详细信息如下:一句话描述:识别出文章中关联热点事件下指定的热点玩法名称对应的详细介绍并进行总结提炼，[一句话描述文本格式定义:核心定语+名称。（如泰达航母烟花秀中一句话描述:最佳观看点在水兵亲吻雕塑前的广场，能拍到雕塑和烟花同款。）]。总结的前提要求[好的提炼:要对玩法的亮点及玩法特色进行描述。不好的提炼:提及运营时间、景区的实用信息、玩法注意事项、一句话描述中玩法名称内容文章覆盖范围大、或者对玩法的负面描述这类属于不好的总结提炼（如小火车运营时间15:00-17:00、如体验感差、白虎跳水项目白虎跳水表演）。]。识别出不好的总结提炼，不做识别抓取。长度控制要求:最大长度为:20，最小长度为:5；若识别不到，则返回\"\"。地理位置:识别出文章中热点事件下指定的热点玩法名称的地理位置。地理位置描述的定义是描述玩法对应的位置，可以是一个景区内的参照点或者参照物，不是景区的地理位置和城市为。若识别不到，则返回\"\"。开始时间:识别出文章中热点事件下指定的玩法名称的游玩时间范围，日期识别要求格式:xxxx-xx-xx，结束时间格式相同，若识别不到，则返回\"\"玩法详细介绍:识别出文章中提到的和指定玩法对应的玩法详细介绍\"长度为\"60\" - \"70\"；针对玩法信息的详细介绍。若识别不到，则返回\"\"，识别的内容段落信息，不要出现第三方视角的词语描述。票价:识别出文章中关联热点玩法名称的门票票价相关的价格信息，如果有详细票价信息，返回格式[\"\"，\"\"]。若识别不到，则返回[]。开票时间:若识别到的热点事件类型是演唱会、音乐节、Livehouse、相声，则需要识别指定文章中是否有开票时间，若有则识别，如果文章中提到多个事件都需要识别，请按照如下json格式返回，返回格式如下 [{\"playName\":\"热点事件名称\",\"briefDesc\":\"一句话描述\",\"location\":\"地理位置\",\"startDate\":\"开始时间\",\"endDate\":\"结束时间\",\"detailDesc\":\"玩法详细介绍\",\"price\":\"票价\",\"issueTime\":\"开票时间\"}]\n备注:字数只计中文字符",
        "json_schema": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "briefDesc": {
                        "type": "string",
                        "description": "一句话描述",
                        "能力项": "10～50字、范围",
                        "pattern": "^.*$|^$",
                        "minLength": 10,
                        "maxLength": 15
                    },
                    "detailDesc": {
                        "type": "string",
                        "description": "玩法详细介绍",
                        "能力项": "50～200字、范围",
                        "pattern": "^.*$|^$",
                        "minLength": 60,
                        "maxLength": 70
                    },
                    "startDate": {
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}$|^$",
                        "能力项": "日期格式",
                        "description": "开始时间"
                    },
                    "endDate": {
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}$|^$",
                        "能力项": "日期格式",
                        "description": "结束时间"
                    },
                    "issueTime": {
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}$|^$",
                        "能力项": "日期格式",
                        "description": "开票时间"
                    }
                },
                "required": [
                    "playName",
                    "briefDesc",
                    "location",
                    "startDate",
                    "endDate",
                    "detailDesc",
                    "price",
                    "issueTime"
                ]
            }
        },
        "category": "SCHEMA",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ]
    },
    {
        "question": "你是一个专业的游玩热点类文章分析师，我会给你提供文章内容，文章类型。你需要根据不同的文章类型执行不同的识别策略。只返回提取到的玩法信息，不返回其他多余的信息。文章内容:三里屯机电院里的圣诞气氛拉满！\n原来伍德吃托克的冬日市集也藏在这儿！！\n夜晚好热闹，过完圣诞就是元旦，这个年末体验很是难忘呢！\n🌟亮点\n✔️各种超赞甜品，吃吃玛特蛋糕、TOOOS BAKERY、北欧饼铺 Nordic Bakery Shop、MorningLab日光里。。。有颜值有味道有想法的甜品品牌都集聚在这儿了！\n甜品控冲！\n✔️小酒鬼们的福音！\nCHEERS齐饮进口葡萄酒、良水农造、MIX FUNS CAFE、一层浪。。。\n✔️7组联名互动，脑洞全开！\n✔️ 96家夜市独立好物品牌，我真的是超喜欢这种小工作室带来的小物！好看又有趣！\n手工、服饰、玩具、摆件，生活里的幸福值大大增加！\n✔️ 6个音乐厂牌，18个DJ联袂90小时音乐体验！\n热闹的市集怎么能少了音乐🎵\nThinking about you、FLOW、Shy People、Be Stupid、after Co_@ 北京、复古电工团\n在这里给自己的2023画个圆满的句号～ #北京跨年 #跨年要有仪式感 #伍德吃托克 #冬季夜市 #三里屯 #北京圣诞节 #北京周末去哪儿 #艺术市集 #北京夜市 #创意市集。文章类型:北京圣诞节。执行以下识别逻辑，找到指定文章信息中指定玩法名称的详细信息。执行逻辑到最终返回格式结束。具体要识别的玩法详细信息如下:一句话描述:识别出文章中关联热点事件下指定的热点玩法名称对应的详细介绍并进行总结提炼，[一句话描述文本格式定义:核心定语+名称。（如泰达航母烟花秀中一句话描述:最佳观看点在水兵亲吻雕塑前的广场，能拍到雕塑和烟花同款。）]。总结的前提要求[好的提炼:要对玩法的亮点及玩法特色进行描述。不好的提炼:提及运营时间、景区的实用信息、玩法注意事项、一句话描述中玩法名称内容文章覆盖范围大、或者对玩法的负面描述这类属于不好的总结提炼（如小火车运营时间15:00-17:00、如体验感差、白虎跳水项目白虎跳水表演）。]。识别出不好的总结提炼，不做识别抓取。长度控制要求:最大长度为:20，最小长度为:5；若识别不到，则返回\"\"。地理位置:识别出文章中热点事件下指定的热点玩法名称的地理位置。地理位置描述的定义是描述玩法对应的位置，可以是一个景区内的参照点或者参照物，不是景区的地理位置和城市为。若识别不到，则返回\"\"。开始时间:识别出文章中热点事件下指定的玩法名称的游玩时间范围，日期识别要求格式:xxxx-xx-xx，结束时间格式相同，若识别不到，则返回\"\"玩法详细介绍:识别出文章中提到的和指定玩法对应的玩法详细介绍\"长度为\"50\" - \"60\"；针对玩法信息的详细介绍。若识别不到，则返回\"\"，识别的内容段落信息，不要出现第三方视角的词语描述。票价:识别出文章中关联热点玩法名称的门票票价相关的价格信息，如果有详细票价信息，返回格式[\"\"，\"\"]。若识别不到，则返回[]。开票时间:若识别到的热点事件类型是演唱会、音乐节、Livehouse、相声，则需要识别指定文章中是否有开票时间，若有则识别，如果文章中提到多个事件都需要识别，请按照如下json格式返回，返回格式如下 [{\"playName\":\"热点事件名称\",\"briefDesc\":\"一句话描述\",\"location\":\"地理位置\",\"startDate\":\"开始时间\",\"endDate\":\"结束时间\",\"detailDesc\":\"玩法详细介绍\",\"price\":\"票价\",\"issueTime\":\"开票时间\"}]\n备注:字数只计中文字符",
        "json_schema": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "briefDesc": {
                        "type": "string",
                        "description": "一句话描述",
                        "能力项": "0～10字、范围",
                        "pattern": "^.*$|^$",
                        "minLength": 5,
                        "maxLength": 10
                    },
                    "detailDesc": {
                        "type": "string",
                        "description": "玩法详细介绍",
                        "能力项": "10～50字、范围",
                        "pattern": "^.*$|^$",
                        "minLength": 50,
                        "maxLength": 60
                    },
                    "startDate": {
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}$|^$",
                        "能力项": "日期格式",
                        "description": "开始时间"
                    },
                    "endDate": {
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}$|^$",
                        "能力项": "日期格式",
                        "description": "结束时间"
                    },
                    "issueTime": {
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}$|^$",
                        "能力项": "日期格式",
                        "description": "开票时间"
                    }
                },
                "required": [
                    "playName",
                    "briefDesc",
                    "location",
                    "startDate",
                    "endDate",
                    "detailDesc",
                    "price",
                    "issueTime"
                ]
            }
        },
        "category": "SCHEMA",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ]
    },
    {
        "category": "SCHEMA",
        "question": "背景:你是一位文章分析师，我会给你提供一篇文章和poi名称。你的任务是分析这篇文章，判断这篇文章是否是游玩类相关文章,并且是否和热点事件类型相关,最后给出判断依据。\n知识:是否是游玩攻略根据以下维度判断，需要这些维度的判断都通过才能认为是游玩相关攻略:\n1.文章中是否出现了游玩攻略、游玩项目、游玩活动、游玩路径、游玩顺序、打卡点、景点、游玩体验、相关的信息，如果出现的频率高，则认为属于游玩类文章，但是不是强制限制要求。\n2.文章内容如果为销售、广告、租房、卖房、房产、餐饮、住宿类型的笔记内容，不属于游玩相关文章。如果文章信息为空，也不属于游玩相关文章。\n3.文章内容包含游玩温泉、滑雪相关，则认为属于游玩类文章。\n4.文章内容包含圣诞节、万圣节、元旦相关，则认为属于游玩类文章。\n5.文章内容包含灯光秀、烟花秀相关，则认为属于游玩类文章。\n6.文章内容包含春节灯会、春节庙会相关，则认为属于游玩类文章。输出格式:使用JSON格式返回提取的信息,示例格式如下:{\"relate\":\"相关\",\"reason\":\"原因\"}, relate返回相关，否则返回无关；reason返回做出判断的理由。请确保返回的JSON数据结构正确，并且符合上述规则，不要返回JSON以外的字符。文章内容:“【城市活动】2024广州国际灯光节定档11月22日-12月1日，主会场设在花城广场，将展出12组大型灯光装置艺术作品。”\n\t\n展览时间:2024/11/9～2025/2/16\n\t\n#东山口 #艺术书店 #猫咪日常 #指月亮\n#画猫 #一起去看展览 #文艺青年爱看展  #城市活动超好玩 #广州展览",
        "json_schema": {
            "$schema": "http://json-schema.org/schema#",
            "type": "object",
            "properties": {
                "relate": {
                    "type": "string",
                    "enum": [
                        "相关",
                        "无关"
                    ],
                    "description": "是否是游玩类文章",
                    "能力项": "主题约束"
                }
            },
            "required": [
                "reason",
                "relate"
            ]
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ],
        "corresponding_parts": {
            "reason": "#JSONSCHEMA#:reason",
            "relate": "#JSONSCHEMA#:relate"
        },
        "ref_answer": "{\"relate\": \"相关\", \"reason\": \"包含灯光秀元素且有明确举办时间地点，符合规则第五条\"}"
    },
    {
        "category": "SCHEMA",
        "question": "你是一个旅游达人，我会给你提供一篇旅游攻略文章，包含文章标题和文章内容。请分析文章，判断其中是否包含游玩路线（containRoute）、包含了几条游玩路线（routeCount）以及游玩路线中是否包含时效性项目（containTimelinessProject），最后将结果按照指定的JSON格式输出。\n名词解释:\n游玩路线:按照时间顺序规划多个游玩点，得到的一条耗时在1～3天左右的游玩路线。通常游玩路线的多个游玩点，会使用时间顺序（如上午11点去地点A，下午2点去地点B）或者位置顺序（如当前在地点A，下一站去地点B）构成关联关系。注意如果只是在介绍多个独立的游玩点，并不能构成游玩路线。\n是否包含游玩路线:如果文章中包含至少一条完整的游玩路线，返回1，否则返回0。\n游玩路线数量:文章中包含的完整游玩路线的数量，如果没有则为0。\n是否包含时效性项目:时效性项目是指在特定时间举行的项目，比如演唱会、展览、集会、脱口秀、音乐节等限时活动。如果游玩路线中包含任何时效性项目，返回1，否则返回0。\n输出格式要求: 请严格按照以下JSON格式输出分析结果，不要添加任何额外的文字说明:{\"containRoute\": 0或1,\"routeCount\": 数字(0,1,2...),\"containTimelinessProject\": 0或1}\n文章内容:\n    **一日精华游**\n    上午9点从中央车站出发→10点参观大教堂→12点步行至美食街午餐→下午2点乘船游览运河→4点登上市政厅观景台\n    ",
        "json_schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "required": [
                "containRoute",
                "routeCount",
                "containTimelinessProject"
            ],
            "properties": {
                "containRoute": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ],
                    "description": "文章是否包含游玩路线，1表示包含，0表示不包含",
                    "能力项": "特定格式"
                },
                "routeCount": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "文章中包含的游玩路线数量",
                    "能力项": "特定格式"
                },
                "containTimelinessProject": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ],
                    "description": "游玩路线中是否包含时效性项目，1表示包含，0表示不包含",
                    "能力项": "特定格式"
                }
            },
            "additionalProperties": false
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ]
    },
    {
        "category": "SCHEMA",
        "question": "你是一个旅游达人，我会给你提供一篇旅游攻略文章，包含文章标题和文章内容。请分析文章，判断其中是否包含游玩路线（containRoute）、包含了几条游玩路线（routeCount）以及游玩路线中是否包含时效性项目（containTimelinessProject），最后将结果按照指定的JSON格式输出。\n名词解释:\n游玩路线:按照时间顺序规划多个游玩点，得到的一条耗时在1～3天左右的游玩路线。通常游玩路线的多个游玩点，会使用时间顺序（如上午11点去地点A，下午2点去地点B）或者位置顺序（如当前在地点A，下一站去地点B）构成关联关系。注意如果只是在介绍多个独立的游玩点，并不能构成游玩路线。\n是否包含游玩路线:如果文章中包含至少一条完整的游玩路线，返回1，否则返回0。\n游玩路线数量:文章中包含的完整游玩路线的数量，如果没有则为0。\n是否包含时效性项目:时效性项目是指在特定时间举行的项目，比如演唱会、展览、集会、脱口秀、音乐节等限时活动。如果游玩路线中包含任何时效性项目，返回1，否则返回0。\n输出格式要求: 请严格按照以下JSON格式输出分析结果，不要添加任何额外的文字说明:{\"containRoute\": 0或1,\"routeCount\": 数字(0,1,2...),\"containTimelinessProject\": 0或1}\n文章内容:\n    **必去景点推荐**\n    1. 世纪公园（建议清晨参观）\n    2. 科技馆（需提前预约）\n    3. 滨江夜市（营业至凌晨2点）\n    ",
        "json_schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "required": [
                "containRoute",
                "routeCount",
                "containTimelinessProject"
            ],
            "properties": {
                "containRoute": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ],
                    "description": "文章是否包含游玩路线，1表示包含，0表示不包含",
                    "能力项": "特定格式"
                },
                "routeCount": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "文章中包含的游玩路线数量",
                    "能力项": "特定格式"
                },
                "containTimelinessProject": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ],
                    "description": "游玩路线中是否包含时效性项目，1表示包含，0表示不包含",
                    "能力项": "特定格式"
                }
            },
            "additionalProperties": false
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ]
    },
    {
        "category": "SCHEMA",
        "question": "你是一个文章分析师，我会给你提供一篇关于演唱会或音乐节内容的文章及标题，你需要帮我筛选这篇文章是否符合我的要求，我的要求如下: 1、文章内容是否提到要进行表演的歌手、艺人、团队，如果要求满足，result返回true，并且返回歌手名称或艺人名称或团队名称，如果有多个，请已英文逗号进行分隔，要求不符合则返回false，actors返回null，以json格式返回，返回示例:{\"result\":\"（格式:boolean）\",\"actors\":\"（格式:string/null）\"}, 以下是我提供给你的文章:【音乐节资讯】2024太湖迷笛音乐节将于10月1日-3日在湖州长兴举办，已确认参演艺人包括崔健、新裤子乐队、痛仰乐队、陈粒等，早鸟票今日开售。",
        "json_schema": {
            "$schema": "http://json-schema.org/schema#",
            "type": "object",
            "properties": {
                "result": {
                    "type": "boolean",
                    "description": "表示文章是否提到了要进行表演的歌手、艺人或团队",
                    "能力项": "特殊格式"
                },
                "actors": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "提到的歌手、艺人或团队名称，多个名称用英文逗号分隔；若没有则为null",
                    "能力项": "特殊格式"
                }
            },
            "required": [
                "result",
                "actors"
            ]
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ],
        "corresponding_parts": {
            "actors": "#JSONSCHEMA#:actors",
            "result": "#JSONSCHEMA#:result"
        },
        "ref_answer": "{\"result\":\"true\",\"actors\":\"崔健,新裤子乐队,痛仰乐队,陈粒\"}"
    },
    {
        "question": "你是一个信息分析人员，根据提供的热点标题、相关内容、今天的日期进行识别。内容为:[成都大熊猫繁育研究基地宣布五一假期每日限流3万人次，需提前3天预约]。如果识别出此热点有可能与旅游、住宿、到综有关，可能会引起人员聚集，例如一些重点展会、大型活动、演唱会、热点景区活动、大型漫展、可能会吸引游客的大型活动等，那么你需要根据相关内容识别出该热点提及的省市、地点、时间信息。\n\n需要识别的字段及格式要求:\n\n1. name (字符串): 识别事件的名称，从内容中提取出关键信息，必须是一个规范的事件名称（例如:上海周杰伦演唱会），而不是一整句话\n2. type (字符串): 判断事件类型（演唱会、社会热点、景区活动、展会、区域性考试、体育赛事、演出等），如果都不匹配，则返回[其他类型]\n3. scope (字符串数字): 判断事件规模，分为大型事件(\"1\")、中型事件(\"2\")、小型事件(\"3\")\n4. weight (字符串数字): 判断事件重要程度，由高到低分别返回\"1\"、\"2\"、\"3\"，\"1\"为最重要\n5. province (字符串): 识别事件发生的省份，如无法获取则返回\"暂无\"\n6. city (字符串): 识别事件发生的国内城市，如无法获取则返回\"暂无\"\n7. locationDetail (字符串): 识别事件发生的具体位置，如无法获取则返回\"暂无\"\n8. time (字符串): 识别事件发生时间，按以下规则:\n   - 过去发生且不影响未来酒旅服务的事件返回\"[过期]\"\n   - 已发生但仍可能影响未来酒旅服务的事件返回\"[当前]\"\n   - 未提及有效时间信息返回\"[暂无]\"\n   - 有具体日期的按\"yyyyMMdd\"格式返回\n   - 有时间范围的按\"yyyyMMdd-yyyyMMdd\"格式返回\n9. timeReason (字符串): 说明做出时间判断的理由\n10. reason (字符串): 说明对上述各项判断的理由\n11. robotIntention (字符串布尔值): 判断作为游客是否会因此事件前往附近预定酒店，返回\"true\"或\"false\"\n12. intentionReason (字符串): 说明robotIntention判断的理由\n\n检查事项:\n1. 如果事件发生地点不在国内，province、city、locationDetail都需返回\"暂无\"\n2. 确保city和province对应，不能出现city不属于province的情况\n3. 确保time格式正确，必须是\"[过期]\"、\"[暂无]\"、\"[当前]\"或\"yyyyMMdd\"/\"yyyyMMdd-yyyyMMdd\"格式\n\n输出格式:\n```json\n{\"name\": \"\",\"type\": \"\",\"scope\": \"\",\"weight\": \"\",\"province\": \"\",\"city\": \"\",\"locationDetail\": \"\",\"time\": \"\",\"timeReason\": \"\",\"reason\": \"\",\"robotIntention\": \"\",\"intentionReason\": \"\"}\n```",
        "json_schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "required": [
                "name",
                "type",
                "scope",
                "weight",
                "province",
                "city",
                "locationDetail",
                "time",
                "timeReason",
                "reason",
                "robotIntention",
                "intentionReason"
            ],
            "properties": {
                "scope": {
                    "type": "string",
                    "enum": [
                        "1",
                        "2",
                        "3"
                    ],
                    "description": "事件规模:1(大型)、2(中型)、3(小型)",
                    "能力项": "特定格式"
                },
                "weight": {
                    "type": "string",
                    "enum": [
                        "1",
                        "2",
                        "3"
                    ],
                    "description": "事件重要程度:1(最重要)、2(中等重要)、3(较不重要)",
                    "能力项": "特定格式"
                },
                "time": {
                    "type": "string",
                    "description": "事件发生时间，格式为yyyyMMdd或yyyyMMdd-yyyyMMdd，或特殊值'[过期]'/'[暂无]'/'[当前]'",
                    "pattern": "^(\\[过期\\]|\\[暂无\\]|\\[当前\\]|\\d{8}|\\d{8}-\\d{8})$",
                    "能力项": "特定格式"
                },
                "robotIntention": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false"
                    ],
                    "description": "作为游客是否会因此事件前往附近预定酒店"
                }
            },
            "additionalProperties": false
        },
        "category": "SCHEMA",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ]
    },
    {
        "category": "SCHEMA",
        "question": "你是一个旅游达人，我会给你提供一篇旅游攻略文章，包含文章标题和文章内容。请分析文章，判断其中是否包含游玩路线（containRoute）、包含了几条游玩路线（routeCount）以及游玩路线中是否包含时效性项目（containTimelinessProject），最后将结果按照指定的JSON格式输出。\n名词解释:\n游玩路线:按照时间顺序规划多个游玩点，得到的一条耗时在1～3天左右的游玩路线。通常游玩路线的多个游玩点，会使用时间顺序（如上午11点去地点A，下午2点去地点B）或者位置顺序（如当前在地点A，下一站去地点B）构成关联关系。注意如果只是在介绍多个独立的游玩点，并不能构成游玩路线。\n是否包含游玩路线:如果文章中包含至少一条完整的游玩路线，返回1，否则返回0。\n游玩路线数量:文章中包含的完整游玩路线的数量，如果没有则为0。\n是否包含时效性项目:时效性项目是指在特定时间举行的项目，比如演唱会、展览、集会、脱口秀、音乐节等限时活动。如果游玩路线中包含任何时效性项目，返回1，否则返回0。\n输出格式要求: 请严格按照以下JSON格式输出分析结果，不要添加任何额外的文字说明:{\"containRoute\": 0或1,\"routeCount\": 数字(0,1,2...),\"containTimelinessProject\": 0或1}\n文章内容:\n    **半日游安排**\n    14:00 集合参观百年工厂（需预约）\n    15:30 转场至隔壁文创商店\n    16:00 参加手工体验课（每日16:00-17:00）\n    ",
        "json_schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "required": [
                "containRoute",
                "routeCount",
                "containTimelinessProject"
            ],
            "properties": {
                "containRoute": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ],
                    "description": "文章是否包含游玩路线，1表示包含，0表示不包含",
                    "能力项": "特定格式"
                },
                "routeCount": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "文章中包含的游玩路线数量",
                    "能力项": "特定格式"
                },
                "containTimelinessProject": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ],
                    "description": "游玩路线中是否包含时效性项目，1表示包含，0表示不包含",
                    "能力项": "特定格式"
                }
            },
            "additionalProperties": false
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ]
    },
    {
        "category": "SCHEMA",
        "question": "背景:你是一位文章分析师，我会给你提供一篇文章和poi名称。你的任务是分析这篇文章，判断这篇文章是否是游玩类相关文章,并且是否和热点事件类型相关,最后给出判断依据。\n知识:是否是游玩攻略根据以下维度判断，需要这些维度的判断都通过才能认为是游玩相关攻略:\n1.文章中是否出现了游玩攻略、游玩项目、游玩活动、游玩路径、游玩顺序、打卡点、景点、游玩体验、相关的信息，如果出现的频率高，则认为属于游玩类文章，但是不是强制限制要求。\n2.文章内容如果为销售、广告、租房、卖房、房产、餐饮、住宿类型的笔记内容，不属于游玩相关文章。如果文章信息为空，也不属于游玩相关文章。\n3.文章内容包含游玩温泉、滑雪相关，则认为属于游玩类文章。\n4.文章内容包含圣诞节、万圣节、元旦相关，则认为属于游玩类文章。\n5.文章内容包含灯光秀、烟花秀相关，则认为属于游玩类文章。\n6.文章内容包含春节灯会、春节庙会相关，则认为属于游玩类文章。输出格式:使用JSON格式返回提取的信息,示例格式如下:{\"relate\":\"相关\",\"reason\":\"原因\"}, relate返回相关，否则返回无关；reason返回做出判断的理由。请确保返回的JSON数据结构正确，并且符合上述规则，不要返回JSON以外的字符。文章内容:“冬季限定！从化温泉度假区推出雪景温泉体验套餐，含日式露天风吕和特色料理，即日起至2024年2月28日开放预约。”\n\t\n展览时间:2024/11/9～2025/2/16\n\t\n#东山口 #艺术书店 #猫咪日常 #指月亮\n#画猫 #一起去看展览 #文艺青年爱看展  #城市活动超好玩 #广州展览",
        "json_schema": {
            "$schema": "http://json-schema.org/schema#",
            "type": "object",
            "properties": {
                "relate": {
                    "type": "string",
                    "enum": [
                        "相关",
                        "无关"
                    ],
                    "description": "是否是游玩类文章",
                    "能力项": "主题约束"
                }
            },
            "required": [
                "reason",
                "relate"
            ]
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ],
        "corresponding_parts": {
            "reason": "#JSONSCHEMA#:reason",
            "relate": "#JSONSCHEMA#:relate"
        },
        "ref_answer": "{\"relate\": \"相关\", \"reason\": \"文章涉及温泉体验且有明确时间范围，符合规则第三条\"}"
    },
    {
        "category": "SCHEMA",
        "question": "你是一个旅游达人，我会给你提供一篇旅游攻略文章，包含文章标题和文章内容。请分析文章，判断其中是否包含游玩路线（containRoute）、包含了几条游玩路线（routeCount）以及游玩路线中是否包含时效性项目（containTimelinessProject），最后将结果按照指定的JSON格式输出。\n名词解释:\n游玩路线:按照时间顺序规划多个游玩点，得到的一条耗时在1～3天左右的游玩路线。通常游玩路线的多个游玩点，会使用时间顺序（如上午11点去地点A，下午2点去地点B）或者位置顺序（如当前在地点A，下一站去地点B）构成关联关系。注意如果只是在介绍多个独立的游玩点，并不能构成游玩路线。\n是否包含游玩路线:如果文章中包含至少一条完整的游玩路线，返回1，否则返回0。\n游玩路线数量:文章中包含的完整游玩路线的数量，如果没有则为0。\n是否包含时效性项目:时效性项目是指在特定时间举行的项目，比如演唱会、展览、集会、脱口秀、音乐节等限时活动。如果游玩路线中包含任何时效性项目，返回1，否则返回0。\n输出格式要求: 请严格按照以下JSON格式输出分析结果，不要添加任何额外的文字说明:{\"containRoute\": 0或1,\"routeCount\": 数字(0,1,2...),\"containTimelinessProject\": 0或1}\n文章内容:\n    **三日经典行程推荐**\n    第一天:上午参观城市博物馆，下午前往老城区步行街，晚上参加星光音乐节（仅限周末）\n    第二天:清晨登临观景台看日出，随后游览东湖公园，傍晚前往艺术区看沉浸式展览（展期至10月）\n    ",
        "json_schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "required": [
                "containRoute",
                "routeCount",
                "containTimelinessProject"
            ],
            "properties": {
                "containRoute": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ],
                    "description": "文章是否包含游玩路线，1表示包含，0表示不包含",
                    "能力项": "特定格式"
                },
                "routeCount": {
                    "type": "integer",
                    "minimum": 0,
                    "description": "文章中包含的游玩路线数量",
                    "能力项": "特定格式"
                },
                "containTimelinessProject": {
                    "type": "integer",
                    "enum": [
                        0,
                        1
                    ],
                    "description": "游玩路线中是否包含时效性项目，1表示包含，0表示不包含",
                    "能力项": "特定格式"
                }
            },
            "additionalProperties": false
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ]
    },
    {
        "category": "SCHEMA",
        "question": "你是一名资深的游玩达人和专业的文章分析师，我会给你提供一篇文章，文章内容为推荐某些适宜的游玩地点。你的任务是分析这篇文章，并以景点名称为维度提取文章中的信息。\n\n请按照以下规则提取信息:\n\n1. poiName: 提取文章中提到的景点的名称。景点必须是一个地点级别的地理位置，绝对不能是城市、省份。例如:植物园、公园、古镇、景区、博物馆、寺庙等具体景点（如太原植物园，景山公园，古北水镇）。\n\n输出要求:\n1. 使用JSON格式返回提取的信息\n2. 每个景点作为一个单独的对象，包含poiName字段\n3. 所有景点对象组成一个数组\n4. 不要返回JSON格式以外的任何字符\n\n输出格式示例:\n[\n  {\\\"poiName\\\":\\\"颐和园\\\"},\n  {\\\"poiName\\\":\\\"故宫\\\"},\n  {\\\"poiName\\\":\\\"香山公园\\\"}\n]\n\nJSON Schema:\n{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"array\",\n  \"items\": {\n    \"type\": \"object\",\n    \"required\": [\"poiName\"],\n    \"properties\": {\n      \"poiName\": {\n        \"type\": \"string\",\n        \"description\": \"景点名称，必须是具体地点级别的地理位置\"\n      }\n    },\n    \"additionalProperties\": false\n  }\n}\n\n文章内容:杭州三日游攻略:\n- 西湖景区必游，建议骑行环湖\n- 灵隐寺祈福后可顺路游览飞来峰\n- 西溪湿地坐摇橹船体验水乡风情",
        "json_schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "array",
            "items": {
                "type": "object",
                "required": [
                    "poiName"
                ],
                "properties": {
                    "poiName": {
                        "type": "string",
                        "description": "景点名称，必须是具体地点级别的地理位置",
                        "能力项": "特定格式"
                    }
                },
                "additionalProperties": false
            }
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ]
    },
    {
        "question": "你是一个信息分析人员，根据提供的热点标题、相关内容、今天的日期进行识别。内容为:[敦煌鸣沙山月牙泉景区推出五一特别活动:千架无人机光影秀+沙漠露营节]。如果识别出此热点有可能与旅游、住宿、到综有关，可能会引起人员聚集，例如一些重点展会、大型活动、演唱会、热点景区活动、大型漫展、可能会吸引游客的大型活动等，那么你需要根据相关内容识别出该热点提及的省市、地点、时间信息。\n\n需要识别的字段及格式要求:\n\n1. name (字符串): 识别事件的名称，从内容中提取出关键信息，必须是一个规范的事件名称（例如:上海周杰伦演唱会），而不是一整句话\n2. type (字符串): 判断事件类型（演唱会、社会热点、景区活动、展会、区域性考试、体育赛事、演出等），如果都不匹配，则返回[其他类型]\n3. scope (字符串数字): 判断事件规模，分为大型事件(\"1\")、中型事件(\"2\")、小型事件(\"3\")\n4. weight (字符串数字): 判断事件重要程度，由高到低分别返回\"1\"、\"2\"、\"3\"，\"1\"为最重要\n5. province (字符串): 识别事件发生的省份，如无法获取则返回\"暂无\"\n6. city (字符串): 识别事件发生的国内城市，如无法获取则返回\"暂无\"\n7. locationDetail (字符串): 识别事件发生的具体位置，如无法获取则返回\"暂无\"\n8. time (字符串): 识别事件发生时间，按以下规则:\n   - 过去发生且不影响未来酒旅服务的事件返回\"[过期]\"\n   - 已发生但仍可能影响未来酒旅服务的事件返回\"[当前]\"\n   - 未提及有效时间信息返回\"[暂无]\"\n   - 有具体日期的按\"yyyyMMdd\"格式返回\n   - 有时间范围的按\"yyyyMMdd-yyyyMMdd\"格式返回\n9. timeReason (字符串): 说明做出时间判断的理由\n10. reason (字符串): 说明对上述各项判断的理由\n11. robotIntention (字符串布尔值): 判断作为游客是否会因此事件前往附近预定酒店，返回\"true\"或\"false\"\n12. intentionReason (字符串): 说明robotIntention判断的理由\n\n检查事项:\n1. 如果事件发生地点不在国内，province、city、locationDetail都需返回\"暂无\"\n2. 确保city和province对应，不能出现city不属于province的情况\n3. 确保time格式正确，必须是\"[过期]\"、\"[暂无]\"、\"[当前]\"或\"yyyyMMdd\"/\"yyyyMMdd-yyyyMMdd\"格式\n\n输出格式:\n```json\n{\"name\": \"\",\"type\": \"\",\"scope\": \"\",\"weight\": \"\",\"province\": \"\",\"city\": \"\",\"locationDetail\": \"\",\"time\": \"\",\"timeReason\": \"\",\"reason\": \"\",\"robotIntention\": \"\",\"intentionReason\": \"\"}\n```",
        "json_schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "required": [
                "name",
                "type",
                "scope",
                "weight",
                "province",
                "city",
                "locationDetail",
                "time",
                "timeReason",
                "reason",
                "robotIntention",
                "intentionReason"
            ],
            "properties": {
                "scope": {
                    "type": "string",
                    "enum": [
                        "1",
                        "2",
                        "3"
                    ],
                    "description": "事件规模:1(大型)、2(中型)、3(小型)",
                    "能力项": "特定格式"
                },
                "weight": {
                    "type": "string",
                    "enum": [
                        "1",
                        "2",
                        "3"
                    ],
                    "description": "事件重要程度:1(最重要)、2(中等重要)、3(较不重要)",
                    "能力项": "特定格式"
                },
                "time": {
                    "type": "string",
                    "description": "事件发生时间，格式为yyyyMMdd或yyyyMMdd-yyyyMMdd，或特殊值'[过期]'/'[暂无]'/'[当前]'",
                    "pattern": "^(\\[过期\\]|\\[暂无\\]|\\[当前\\]|\\d{8}|\\d{8}-\\d{8})$",
                    "能力项": "特定格式"
                },
                "robotIntention": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false"
                    ],
                    "description": "作为游客是否会因此事件前往附近预定酒店"
                }
            },
            "additionalProperties": false
        },
        "category": "SCHEMA",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ]
    },
    {
        "category": "SCHEMA",
        "question": "你是一个文章分析师，我会给你提供一篇关于演唱会或音乐节内容的文章及标题，你需要帮我筛选这篇文章是否符合我的要求，我的要求如下: 1、文章内容是否提到要进行表演的歌手、艺人、团队，如果要求满足，result返回true，并且返回歌手名称或艺人名称或团队名称，如果有多个，请已英文逗号进行分隔，要求不符合则返回false，actors返回null，以json格式返回，返回示例:{\"result\":\"（格式:boolean）\",\"actors\":\"（格式:string/null）\"}, 以下是我提供给你的文章:【文旅活动】2024杭州西湖国际博览会将于9月28日开幕，主会场设置非遗文化体验区，分会场延伸至西溪湿地和良渚古城遗址。",
        "json_schema": {
            "$schema": "http://json-schema.org/schema#",
            "type": "object",
            "properties": {
                "result": {
                    "type": "boolean",
                    "description": "表示文章是否提到了要进行表演的歌手、艺人或团队",
                    "能力项": "特殊格式"
                },
                "actors": {
                    "type": [
                        "string",
                        "null"
                    ],
                    "description": "提到的歌手、艺人或团队名称，多个名称用英文逗号分隔；若没有则为null",
                    "能力项": "特殊格式"
                }
            },
            "required": [
                "result",
                "actors"
            ]
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ],
        "corresponding_parts": {
            "actors": "#JSONSCHEMA#:actors",
            "result": "#JSONSCHEMA#:result"
        },
        "ref_answer": "{\"result\":\"false\",\"actors\":\"\"}"
    },
    {
        "question": "你是一个信息分析人员，根据提供的热点标题、相关内容、今天的日期进行识别。内容为:[2024杭州亚运会电竞项目测试赛将于9月在杭州电竞中心展开，开放观众预约]。如果识别出此热点有可能与旅游、住宿、到综有关，可能会引起人员聚集，例如一些重点展会、大型活动、演唱会、热点景区活动、大型漫展、可能会吸引游客的大型活动等，那么你需要根据相关内容识别出该热点提及的省市、地点、时间信息。\n\n需要识别的字段及格式要求:\n\n1. name (字符串): 识别事件的名称，从内容中提取出关键信息，必须是一个规范的事件名称（例如:上海周杰伦演唱会），而不是一整句话\n2. type (字符串): 判断事件类型（演唱会、社会热点、景区活动、展会、区域性考试、体育赛事、演出等），如果都不匹配，则返回[其他类型]\n3. scope (字符串数字): 判断事件规模，分为大型事件(\"1\")、中型事件(\"2\")、小型事件(\"3\")\n4. weight (字符串数字): 判断事件重要程度，由高到低分别返回\"1\"、\"2\"、\"3\"，\"1\"为最重要\n5. province (字符串): 识别事件发生的省份，如无法获取则返回\"暂无\"\n6. city (字符串): 识别事件发生的国内城市，如无法获取则返回\"暂无\"\n7. locationDetail (字符串): 识别事件发生的具体位置，如无法获取则返回\"暂无\"\n8. time (字符串): 识别事件发生时间，按以下规则:\n   - 过去发生且不影响未来酒旅服务的事件返回\"[过期]\"\n   - 已发生但仍可能影响未来酒旅服务的事件返回\"[当前]\"\n   - 未提及有效时间信息返回\"[暂无]\"\n   - 有具体日期的按\"yyyyMMdd\"格式返回\n   - 有时间范围的按\"yyyyMMdd-yyyyMMdd\"格式返回\n9. timeReason (字符串): 说明做出时间判断的理由\n10. reason (字符串): 说明对上述各项判断的理由\n11. robotIntention (字符串布尔值): 判断作为游客是否会因此事件前往附近预定酒店，返回\"true\"或\"false\"\n12. intentionReason (字符串): 说明robotIntention判断的理由\n\n检查事项:\n1. 如果事件发生地点不在国内，province、city、locationDetail都需返回\"暂无\"\n2. 确保city和province对应，不能出现city不属于province的情况\n3. 确保time格式正确，必须是\"[过期]\"、\"[暂无]\"、\"[当前]\"或\"yyyyMMdd\"/\"yyyyMMdd-yyyyMMdd\"格式\n\n输出格式:\n```json\n{\"name\": \"\",\"type\": \"\",\"scope\": \"\",\"weight\": \"\",\"province\": \"\",\"city\": \"\",\"locationDetail\": \"\",\"time\": \"\",\"timeReason\": \"\",\"reason\": \"\",\"robotIntention\": \"\",\"intentionReason\": \"\"}\n```",
        "json_schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "required": [
                "name",
                "type",
                "scope",
                "weight",
                "province",
                "city",
                "locationDetail",
                "time",
                "timeReason",
                "reason",
                "robotIntention",
                "intentionReason"
            ],
            "properties": {
                "scope": {
                    "type": "string",
                    "enum": [
                        "1",
                        "2",
                        "3"
                    ],
                    "description": "事件规模:1(大型)、2(中型)、3(小型)",
                    "能力项": "特定格式"
                },
                "weight": {
                    "type": "string",
                    "enum": [
                        "1",
                        "2",
                        "3"
                    ],
                    "description": "事件重要程度:1(最重要)、2(中等重要)、3(较不重要)",
                    "能力项": "特定格式"
                },
                "time": {
                    "type": "string",
                    "description": "事件发生时间，格式为yyyyMMdd或yyyyMMdd-yyyyMMdd，或特殊值'[过期]'/'[暂无]'/'[当前]'",
                    "pattern": "^(\\[过期\\]|\\[暂无\\]|\\[当前\\]|\\d{8}|\\d{8}-\\d{8})$",
                    "能力项": "特定格式"
                },
                "robotIntention": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false"
                    ],
                    "description": "作为游客是否会因此事件前往附近预定酒店"
                }
            },
            "additionalProperties": false
        },
        "category": "SCHEMA",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ]
    },
    {
        "question": "你是一个信息分析人员，根据提供的热点标题、相关内容、今天的日期进行识别。内容为:[2024中国国际数码互动娱乐展览会（ChinaJoy）7月26-29日在上海新国际博览中心举行]。如果识别出此热点有可能与旅游、住宿、到综有关，可能会引起人员聚集，例如一些重点展会、大型活动、演唱会、热点景区活动、大型漫展、可能会吸引游客的大型活动等，那么你需要根据相关内容识别出该热点提及的省市、地点、时间信息。\n\n需要识别的字段及格式要求:\n\n1. name (字符串): 识别事件的名称，从内容中提取出关键信息，必须是一个规范的事件名称（例如:上海周杰伦演唱会），而不是一整句话\n2. type (字符串): 判断事件类型（演唱会、社会热点、景区活动、展会、区域性考试、体育赛事、演出等），如果都不匹配，则返回[其他类型]\n3. scope (字符串数字): 判断事件规模，分为大型事件(\"1\")、中型事件(\"2\")、小型事件(\"3\")\n4. weight (字符串数字): 判断事件重要程度，由高到低分别返回\"1\"、\"2\"、\"3\"，\"1\"为最重要\n5. province (字符串): 识别事件发生的省份，如无法获取则返回\"暂无\"\n6. city (字符串): 识别事件发生的国内城市，如无法获取则返回\"暂无\"\n7. locationDetail (字符串): 识别事件发生的具体位置，如无法获取则返回\"暂无\"\n8. time (字符串): 识别事件发生时间，按以下规则:\n   - 过去发生且不影响未来酒旅服务的事件返回\"[过期]\"\n   - 已发生但仍可能影响未来酒旅服务的事件返回\"[当前]\"\n   - 未提及有效时间信息返回\"[暂无]\"\n   - 有具体日期的按\"yyyyMMdd\"格式返回\n   - 有时间范围的按\"yyyyMMdd-yyyyMMdd\"格式返回\n9. timeReason (字符串): 说明做出时间判断的理由\n10. reason (字符串): 说明对上述各项判断的理由\n11. robotIntention (字符串布尔值): 判断作为游客是否会因此事件前往附近预定酒店，返回\"true\"或\"false\"\n12. intentionReason (字符串): 说明robotIntention判断的理由\n\n检查事项:\n1. 如果事件发生地点不在国内，province、city、locationDetail都需返回\"暂无\"\n2. 确保city和province对应，不能出现city不属于province的情况\n3. 确保time格式正确，必须是\"[过期]\"、\"[暂无]\"、\"[当前]\"或\"yyyyMMdd\"/\"yyyyMMdd-yyyyMMdd\"格式\n\n输出格式:\n```json\n{\"name\": \"\",\"type\": \"\",\"scope\": \"\",\"weight\": \"\",\"province\": \"\",\"city\": \"\",\"locationDetail\": \"\",\"time\": \"\",\"timeReason\": \"\",\"reason\": \"\",\"robotIntention\": \"\",\"intentionReason\": \"\"}\n```",
        "json_schema": {
            "$schema": "http://json-schema.org/draft-07/schema#",
            "type": "object",
            "required": [
                "name",
                "type",
                "scope",
                "weight",
                "province",
                "city",
                "locationDetail",
                "time",
                "timeReason",
                "reason",
                "robotIntention",
                "intentionReason"
            ],
            "properties": {
                "scope": {
                    "type": "string",
                    "enum": [
                        "1",
                        "2",
                        "3"
                    ],
                    "description": "事件规模:1(大型)、2(中型)、3(小型)",
                    "能力项": "特定格式"
                },
                "weight": {
                    "type": "string",
                    "enum": [
                        "1",
                        "2",
                        "3"
                    ],
                    "description": "事件重要程度:1(最重要)、2(中等重要)、3(较不重要)",
                    "能力项": "特定格式"
                },
                "time": {
                    "type": "string",
                    "description": "事件发生时间，格式为yyyyMMdd或yyyyMMdd-yyyyMMdd，或特殊值'[过期]'/'[暂无]'/'[当前]'",
                    "pattern": "^(\\[过期\\]|\\[暂无\\]|\\[当前\\]|\\d{8}|\\d{8}-\\d{8})$",
                    "能力项": "特定格式"
                },
                "robotIntention": {
                    "type": "string",
                    "enum": [
                        "true",
                        "false"
                    ],
                    "description": "作为游客是否会因此事件前往附近预定酒店"
                }
            },
            "additionalProperties": false
        },
        "category": "SCHEMA",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否满足schema",
                "rule": "SCHEMA:json_schema",
                "dep": [],
                "被依赖": false,
                "能力项": "JSON"
            }
        ]
    },
    {
        "category": "SCHEMA",
        "question": "我们供应商现在都有账期，目前我们资金紧张，需要账期周转，你们能提供账期吗？\n请将这句话进行改写，并输出3个改写后例子，并满足如下要求:\n    1、新句子和原有句子意思保持一致\n    2、新句子要简短、口语化、逻辑通顺，和原句风格保持一致\n    3、以严谨、有要求的口吻来说\n    输出格式为list数组，如:[\"xxx\",\"xxx\",\"xxx\",\"xxx\",\"xxx\"]",
        "corresponding_parts": {
            "例子": "请按照python list的格式，分割输出所有的例子"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "给出的结果是否是一个valid的list",
                "rule": "SCHEMA:list",
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否输出了3个改写后的例子",
                "rule": "item_count: [3, 3]",
                "corresponding_part": "例子",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "SCHEMA",
        "question": "我们供应商现在都有账期，目前我们资金紧张，需要账期周转，你们能提供账期吗？\n请将这句话进行改写，并输出9个改写后例子，并满足如下要求:\n    1、新句子和原有句子意思保持一致\n    2、新句子要简短、口语化、逻辑通顺，和原句风格保持一致\n    3、以严谨、有要求的口吻来说\n    输出格式为list数组，如:[\"xxx\",\"xxx\",\"xxx\",\"xxx\",\"xxx\"]",
        "corresponding_parts": {
            "例子": "请按照python list的格式，分割输出所有的例子"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "给出的结果是否是一个valid的list",
                "rule": "SCHEMA:list",
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否输出了9个改写后的例子",
                "rule": "item_count: [9, 9]",
                "corresponding_part": "例子",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "SCHEMA",
        "question": "针对以下问题，参考给出的示例生成一段口语化的回复，要求包含所有的要点，风格、语气和态度与示例一致。使用示例中相同的称呼方式。问题:我们这是单位食堂，你们快驴上的东西，都有检测报告吗？要点:'可下载三证', '可下载质检报告', '个别商品没有报告可以联系我'示例:老板您放心，美团是一家上市公司，我们对食品安全很重视，**三证**（食品安全证、营业执照、卫生许可证）齐全。如果您需要，**可以在快驴APP下载**。如果您需要检测报告也可以在商城描述的**质检栏下载质量检测报告**。**个别商品如果没有**的话，您**联系我**，我给您提供，这方面您不用担心。请输出9个回复，输出格式为list数组，如:[\"xxx\",\"xxx\",\"xxx\",\"xxx\",\"xxx\"]",
        "corresponding_parts": {
            "数组内容": "请按照python list的格式，分割输出所有的数组回复内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "给出的结果是否是一个valid的list",
                "rule": "SCHEMA:list",
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "回复是否使用示例中相同的称呼方式",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否输出了9个回复",
                "rule": "item_count: [9, 9]",
                "corresponding_part": "数组内容",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "SCHEMA",
        "question": "我们供应商现在都有账期，目前我们资金紧张，需要账期周转，你们能提供账期吗？\n请将这句话进行改写，并输出5个改写后例子，并满足如下要求:\n    1、新句子和原有句子意思保持一致\n    2、新句子要简短、口语化、逻辑通顺，和原句风格保持一致\n    3、以严谨、有要求的口吻来说\n    输出格式为list数组，如:[\"xxx\",\"xxx\",\"xxx\",\"xxx\",\"xxx\"]",
        "corresponding_parts": {
            "例子": "请按照python list的格式，分割输出所有的例子"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "给出的结果是否是一个valid的list",
                "rule": "SCHEMA:list",
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否输出了5个改写后的例子",
                "rule": "item_count: [5, 5]",
                "corresponding_part": "例子",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "将俗语“守株待兔”扩写成一篇故事，用文言文写，100字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#给出的整个故事（包括前言后语）。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否用文言文形式扩写了俗语“守株待兔”为一则故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事字数是否在100字上下",
                "corresponding_part": "故事",
                "rule": "each_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是一个专业的美食品鉴官，你需要为菜品:上海红烧肉，设计出一条推荐理由。\n要求是对菜品的描述要具体，要尽可能地调动感官体验，你可以从菜品的食材、外观、口味、口感、触感、份量等多个角度来描述。比如描述一个糖油饼，可以这么说:“糖油饼炸得金黄，外面酥酥脆脆，里面糯叽叽”。这样说不好:“糖油饼很美味，太好吃了” ，因为这样说太概括了。字数控制50字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐理由": "#CODE#推荐理由内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推荐理由",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐理由是否包含对菜品上海红烧肉的具体描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推荐理由是否从菜品的食材、外观、口味、口感、触感、份量等多个角度进行描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推荐理由字数是否控制在50字以内",
                "corresponding_part": "推荐理由",
                "rule": "each_length:[1,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇1分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇1分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[150, 300]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你有读过王尔德的《快乐王子》吗？王尔德的童话故事总是带有一些悲伤，请你模仿王尔德的风格写一篇童话故事。故事中有两个主角，不要以人类为主角，前期是快乐的基调，结局请模仿《快乐王子》中王子和燕子的结局。字数在400到500之间。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "童话故事": "#CODE#整篇童话故事"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了一篇故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事中是否有两个主角",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "故事主角是否不是人类",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "故事字数是否在400到500之间",
                "corresponding_part": "童话故事",
                "rule": "each_length:[400,500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "将俗语“拔苗助长”扩写成一篇故事，用文言文写，100字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#给出的整个故事（包括前言后语）。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否用文言文形式扩写了俗语“拔苗助长”为一则故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事字数是否在100字上下",
                "corresponding_part": "故事",
                "rule": "each_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "以下是年会节目单\"话剧\", \"睡觉大赛\", \"手机游戏比赛\", \"相声\", \"脱口秀\"帮我生成两个主持人的主持稿，分别代称为福、欣。请注意:每个主持人的稿子都需要包含所有节目，请勿修改任何节目名称",
        "corresponding_parts": {
            "福的主持稿": "请你提取model_response中的主持人福的主持稿，只需要提取出主持人福的主持稿，放在一个element内，不需要提取出主持人欣的主持稿。比如:[\"福: 各位观众，欢迎参加我们的年度盛会。今晚，我们将为大家带来一系列精彩的节目，包括动感的舞蹈\"科目三\"，创新的综合表演\"唱跳rap\"，以及优美的舞蹈展示\"桃花朵朵开\"。\"]",
            "欣的主持稿": "请你提取model_response中的主持人欣的主持稿，只需要提取出主持人欣的主持稿，放在一个element内，不需要提取出主持人福的主持稿。比如:[\"欣: 是的，福。除了这些，我们还有激动人心的\"王者荣耀 SOLO 赛\"等待大家的参与，同时也会有深情的弹唱演绎\"消愁\"为大家送上慰藉。让我们共同期待一个精彩纷呈的夜晚吧！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了主持人福的主持稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了主持人欣的主持稿",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "主持人福的主持稿中，是否包含了年会节目单中的所有节目",
                "rule": "keywords:[\"话剧\", \"睡觉大赛\", \"手机游戏比赛\", \"相声\", \"脱口秀\"]",
                "corresponding_part": "福的主持稿",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "主持人欣的主持稿中，是否包含了年会节目单中的所有节目",
                "rule": "keywords:[\"话剧\", \"睡觉大赛\", \"手机游戏比赛\", \"相声\", \"脱口秀\"]",
                "corresponding_part": "欣的主持稿",
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "推荐景点开封古城，其中包含标题4000个字以内，文案5000字左右，标题需要具备吸引力，可以采用目前小红书抖音微博等社交媒体平台的热点词汇、热梗、热门说法。让人看到有强烈的欲望点击。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的格式，抓取模型回复中，给出的标题部分。比如[\"利民堡村，乡野风光美\"]",
            "文案": "请你按照python list的格式，抓取模型回复中，给出的文案部分。比如[\"朔州利民堡村，带上相机，走进田野间的诗画风情。这里是摄影爱好者的天堂，也是追求宁静的你最佳的逃离之地。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题和文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "标题是否在4000个字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,4000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "文案是否在5000字左右",
                "corresponding_part": "文案",
                "rule": "each_length:[4500,5500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文案是否围绕景点开封古城",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假如我是一个现代用户，我进入到咒术回战的剧情中，现在正在和咒术回战的五条悟对话，我应该怎么设计后续剧情来吸引这个现代用户呢？要求只用极短的剧情就带来极强的吸引力。\n\n你需要写出剧情规划，剧情卡介绍，具体要求如下:\n1. 剧情规划:\n富有吸引力的剧情规划，要求在较短对话中就能吸引用户极大的兴趣。直接写剧情规划就好，不需要对话示例。同事记得指明时间地点场景等。要求100字左右。\n2. 剧情卡介绍:\n剧情卡介绍是给用户展示的，可以简单介绍开始部分剧情，但是不能完全剧透（保留用户兴趣和悬念），最好有一定悬念的结尾，这样能吸引用户参与兴趣，类似剧情简介。要求150字以内。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "剧情规划": "请你按照python list的形式，将model_response中生成的剧情规划分割并提取出来。无需提取任何标点或者index，比如:[\"时间:午夜。地点:东京都内一座古老的神社。场景:在一场意外中，现代用户被卷入了咒术高尚的世界，发现自己拥有一种特殊能力，能看到平常人看不到的咒灵。五条悟现身，表示用户的能力非常罕见，必须尽快掌控。突然，一只强大的咒灵出现，五条悟决定带领用户进行实战指导。紧张刺激的战斗即将展开，用户的选择将影响战斗的走向和自己的命运。\"]",
            "剧情卡介绍": "请你按照python list的形式，将model_response中生成的剧情卡介绍分割并提取出来。无需提取任何标点或者index，比如:[\"午夜的东京，一场突如其来的遭遇，将你带入了一个隐藏于都市之中的神秘世界。面对你所未见过的咒灵，五条悟出现在你面前，揭示了你的特殊命运。在他的指导下，你即将迎接第一场真正的试炼。战斗一触即发，你的选择将决定未来的路径。欢迎来到咒术的战场。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了剧情规划",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "剧情规划是否在100字左右",
                "corresponding_part": "剧情规划",
                "rule": "each_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "剧情规划是否指明了时间地点场景等",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了剧情卡介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "剧情卡介绍是否在150字以内",
                "corresponding_part": "剧情卡介绍",
                "rule": "each_length:[1,150]",
                "dep": [
                    3
                ],
                "能力项": "50～200字、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "写一个宣传冰淇淋售卖的喊麦文案，要求押韵，30字左右，每句5个字，突出特价团购便宜实惠、五一购买冰淇淋\n备注:字数只计中文字符",
        "corresponding_parts": {
            "分割文案": "请你按照python list的形式，将model_response中的喊麦文案输出，请分割输出，不要带标点符号。例如[\"冰淇淋来一球\",\"五一热浪消\",\"特价团购省\",\"甜蜜满心跳\",\"便宜又实惠\",\"清凉一夏妙\",\"美味难以挡\",\"售卖全城照\",\"快乐伴你笑\",\"冰爽好心情\",\"团购更优惠\",\"甜甜圈里绕\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了宣传冰淇淋售卖的喊麦文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "文案是否押韵",
                "corresponding_part": "分割文案",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "文案是否在30字左右",
                "corresponding_part": "分割文案",
                "rule": "total_length:[27,33]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文案是否每句5个字",
                "corresponding_part": "分割文案",
                "rule": "each_length:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "文案是否提到特价团购便宜实惠",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "文案是否提到五一购买冰淇淋",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "我需要招聘一位HR，岗位归属于人力资源，请帮我写一段岗位内推话术。要求是善用emoij表情，文风模仿小红书，字数不少于100字，必须提到HR和人力资源两个关键词。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文案": "#CODE#整篇招聘文案"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "文案是否用了emoji表情",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "文案字数是否不少于100字",
                "corresponding_part": "文案",
                "rule": "each_length:[100,100000]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文案是否提到了岗位HR",
                "corresponding_part": "文案",
                "rule": "keyword:[\"HR\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "文案是否提到了部门人力资源",
                "corresponding_part": "文案",
                "rule": "keyword:[\"人力资源\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇3分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇3分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[450, 900]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "“我在诺丁汉的一家投行做过三年分析员，后面去了伦敦的另一家跨国投行，担任了五年基金经理。2020年开始自己创业。”把这段话改为中英文夹杂的工作经历介绍，要求工作地点和职位是英文，工作时长必须是中文；中文和英文的比例为3 : 2，总字数控制在100字以内。\n备注:中文数量为中文字符数，英文数量为单词数",
        "corresponding_parts": {
            "工作经历": "#CODE#工作经历内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了中英文夹杂的工作经历介绍",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "工作地点和职位是否是英文",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "工作时长是否是中文",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "中文和英文的比例是否为3 : 2",
                "corresponding_part": "工作经历",
                "rule": "Chinese_English_ratio:[3,2]",
                "dep": [
                    0
                ],
                "能力项": "倍数、中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "总字数是否控制在100字以内",
                "corresponding_part": "工作经历",
                "rule": "count_mixed_language_words:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是一个互联网公司的用户增长运营。现在要做一份年终述职总结，对上一年工作策略和目标完成情况进行总结复盘，分析其中的亮点和不足。（可参考以下提示问题）输出文字不超过100字\n\n1）过去一段时间，你如何理解外部环境和客户需求？如何理解所在团队的目标？\n\n2）上一阶段你负责的工作的策略和目标是什么？采取了哪些关键举措？结果如何？\n\n3）复盘总结哪些做对了，哪些做得不对，哪些事该做的没做，哪些事可以少做？\n\n4）下一阶段，你的工作重点会有哪些相应的调整？\n备注:字数只计中文字符",
        "corresponding_parts": {
            "所有输出内容": "#CODE#所有文字（无需做任何处理）"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了年终述职总结",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "输出文字是否不超过100字",
                "corresponding_part": "所有输出内容",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "请帮我写一份入团将申请书，大概50字左右，入团申请人是唐斌。内容上介绍以下几点:一是基本情况，包括成长经历、思想、学习的表现，二是思想认识，对团的性质、历史等方面的认识、入团动机等，清晰表明入团意愿。三是态度决心，包括今后的努力方向和实际行动争取早日进入团组织。  结尾要表达请团组织考察的心情和愿望。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "入团申请书": "#CODE#整篇入团申请书"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了入团申请书",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "入团申请书是否大概50字左右",
                "corresponding_part": "入团申请书",
                "rule": "each_length:[45,55]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的入团申请书中，是否包含基本情况这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的入团申请书中，是否包含成长经历这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的入团申请书中，是否包含思想表现这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "给出的入团申请书中，是否包含学习表现这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "给出的入团申请书中，是否包含思想认识这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "给出的入团申请书中，是否包含对团的性质有认识这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "给出的入团申请书中，是否包含对团的历史认识这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "给出的入团申请书中，是否包含入团动机这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "给出的入团申请书中，是否包含今后的努力方向这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "给出的入团申请书中，是否包含“以实际行动争取早日进入团组织”这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是一个互联网公司的用户增长运营。现在要做一份年终述职总结，对上一年工作策略和目标完成情况进行总结复盘，分析其中的亮点和不足。（可参考以下提示问题）输出文字不超过50字\n\n1）过去一段时间，你如何理解外部环境和客户需求？如何理解所在团队的目标？\n\n2）上一阶段你负责的工作的策略和目标是什么？采取了哪些关键举措？结果如何？\n\n3）复盘总结哪些做对了，哪些做得不对，哪些事该做的没做，哪些事可以少做？\n\n4）下一阶段，你的工作重点会有哪些相应的调整？\n备注:字数只计中文字符",
        "corresponding_parts": {
            "所有输出内容": "#CODE#所有文字（无需做任何处理）"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了年终述职总结",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "输出文字是否不超过50字",
                "corresponding_part": "所有输出内容",
                "rule": "each_length:[1,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请为我创作一个奶茶店的广告文案，每个文案不超过50个字，店铺位于大学城附近，请挖掘出结合工作日大学生、奶茶店、大学校园附近三者之间的特点，并结合之前用户留下的评价，在文案中进行体现。之前用户的评价是“因为工作原因，我提前来这里看了一下，然后看到有这么一家茶室，就挺感兴趣的，在抖音和大众点评上面都团过券，奶茶挺好喝，最喜欢的就是点杯奶茶坐在哪看着外面的风景，特别舒服，这个茶室的选址太好了，而且下面还有很多台阶，好多人都喜欢在那坐一会。”\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文案": "请你按照python list的格式，抓取模型回复中，给出的文案部分，只需要文案，不需要内容。比如[\"大学城景致，奶茶添趣，台阶上的悠闲时光，优惠券享不停。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否创作了奶茶店的广告文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "每个文案是否不超过50个字",
                "corresponding_part": "文案",
                "rule": "each_length:[1, 50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "文案是否提到或隐喻地提到工作日大学生",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文案是否提到或隐喻地提到了奶茶店",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "文案是否体现了用户评价中提到的茶室选址好",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "文案是否体现了用户评价中提到的奶茶好喝",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "文案是否体现了用户评价中提到的“坐在台阶上看风景的舒适感”或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假如我是一个现代用户，我进入到咒术回战的剧情中，现在正在和咒术回战的五条悟对话，我应该怎么设计后续剧情来吸引这个现代用户呢？要求只用极短的剧情就带来极强的吸引力。\n\n你需要写出剧情规划，剧情卡介绍，具体要求如下:\n1. 剧情规划:\n富有吸引力的剧情规划，要求在较短对话中就能吸引用户极大的兴趣。直接写剧情规划就好，不需要对话示例。同事记得指明时间地点场景等。要求4000字左右。\n2. 剧情卡介绍:\n剧情卡介绍是给用户展示的，可以简单介绍开始部分剧情，但是不能完全剧透（保留用户兴趣和悬念），最好有一定悬念的结尾，这样能吸引用户参与兴趣，类似剧情简介。要求5000字以内。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "剧情规划": "请你按照python list的形式，将model_response中生成的剧情规划分割并提取出来。无需提取任何标点或者index，比如:[\"时间:午夜。地点:东京都内一座古老的神社。场景:在一场意外中，现代用户被卷入了咒术高尚的世界，发现自己拥有一种特殊能力，能看到平常人看不到的咒灵。五条悟现身，表示用户的能力非常罕见，必须尽快掌控。突然，一只强大的咒灵出现，五条悟决定带领用户进行实战指导。紧张刺激的战斗即将展开，用户的选择将影响战斗的走向和自己的命运。\"]",
            "剧情卡介绍": "请你按照python list的形式，将model_response中生成的剧情卡介绍分割并提取出来。无需提取任何标点或者index，比如:[\"午夜的东京，一场突如其来的遭遇，将你带入了一个隐藏于都市之中的神秘世界。面对你所未见过的咒灵，五条悟出现在你面前，揭示了你的特殊命运。在他的指导下，你即将迎接第一场真正的试炼。战斗一触即发，你的选择将决定未来的路径。欢迎来到咒术的战场。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了剧情规划",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "剧情规划是否在4000字左右",
                "corresponding_part": "剧情规划",
                "rule": "each_length:[3600,4400]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "剧情规划是否指明了时间地点场景等",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了剧情卡介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "剧情卡介绍是否在5000字以内",
                "corresponding_part": "剧情卡介绍",
                "rule": "each_length:[1,5000]",
                "dep": [
                    3
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "推荐景点开封古城，其中包含标题500个字以内，文案700字左右，标题需要具备吸引力，可以采用目前小红书抖音微博等社交媒体平台的热点词汇、热梗、热门说法。让人看到有强烈的欲望点击。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的格式，抓取模型回复中，给出的标题部分。比如[\"利民堡村，乡野风光美\"]",
            "文案": "请你按照python list的格式，抓取模型回复中，给出的文案部分。比如[\"朔州利民堡村，带上相机，走进田野间的诗画风情。这里是摄影爱好者的天堂，也是追求宁静的你最佳的逃离之地。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题和文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "标题是否在500个字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "文案是否在700字左右",
                "corresponding_part": "文案",
                "rule": "each_length:[630,770]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文案是否围绕景点开封古城",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "请写一篇500到700字的国企风格的工作调研报告，立足于我本职的无人驾驶智能网联车辆的宣传工作，突出新时代中国特色社会主义思想，二十大全会精神及主题教育要求，重点围绕如何提升青年学习工作实效，如何解决学习成果转化运用的实践案例，内容真实有深度，以客观数据、事实为依据和论点，逻辑清晰。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "报告": "#CODE#整篇报告"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了一篇报告",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "报告是否在500到700字之间",
                "corresponding_part": "报告",
                "rule": "each_length:[500,700]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "请写一篇50到70字的国企风格的工作调研报告，立足于我本职的无人驾驶智能网联车辆的宣传工作，突出新时代中国特色社会主义思想，二十大全会精神及主题教育要求，重点围绕如何提升青年学习工作实效，如何解决学习成果转化运用的实践案例，内容真实有深度，以客观数据、事实为依据和论点，逻辑清晰。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "报告": "#CODE#整篇报告"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了一篇报告",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "报告是否在50到70字之间",
                "corresponding_part": "报告",
                "rule": "each_length:[50,70]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "将俗语“自相矛盾”扩写成一篇故事，用文言文写，100字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#给出的整个故事（包括前言后语）。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否用文言文形式扩写了俗语“自相矛盾”为一则故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事字数是否在100字上下",
                "corresponding_part": "故事",
                "rule": "each_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一篇从河北到北京摩旅的笔记，大概100字，要有风景的描述，路线的分享，以及费用，贴地气一点  不要用太高傲的词汇\n备注:字数只计中文字符",
        "corresponding_parts": {
            "笔记": "#CODE#笔记内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一篇笔记",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "笔记是否大概100字",
                "corresponding_part": "笔记",
                "rule": "each_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的笔记中，是否包含风景的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的笔记中，是否包含路线的分享",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的笔记中，是否包含费用的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "吹灭别人的灯，并不会让自己更加光明；阻挡别人的路，也不会让自己行得更远。\n“一花独放不是春，百花齐放春满园。”如果世界上只有一种花朵，就算这种花朵再美，那也是单调的。\n以上两则材料出自习近平总书记的讲话，以生动形象的语言说出了普遍的道理。请据此写一篇文章，体现你的认识与思考。\n要求:选准角度，确定立意，明确文体，自拟标题；不要套作，不得抄袭；不得泄露个人信息；不少于100字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "作文": "#CODE#整篇作文"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否根据材料写了一篇文章",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "文章是否自拟了标题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "文章是否没有泄露个人信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文章字数是否不少于100字",
                "corresponding_part": "作文",
                "rule": "each_length:[100,100000]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "带狗出去遛弯，结果它吃屎了，我把它骂了一顿。写一段打油诗，100字，要押韵\n备注:字数只计中文字符",
        "corresponding_parts": {
            "打油诗": "请你按照python list的格式，抓取模型回复中，给出的打油诗，要分割，例如: [\"遛狗街头乐悠悠\", \"低头一啄非骨肉\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一段诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "打油诗是否描述了带狗出去遛弯的情景",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "打油诗是否描述了狗吃屎的情景",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "打油诗是否描述了对狗进行责骂的情景",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "打油诗是否为100字",
                "corresponding_part": "打油诗",
                "rule": "total_length:[100,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "打油诗是否押韵",
                "corresponding_part": "打油诗",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请为我创作一个奶茶店的广告文案，每个文案不超过100个字，店铺位于大学城附近，请挖掘出结合工作日大学生、奶茶店、大学校园附近三者之间的特点，并结合之前用户留下的评价，在文案中进行体现。之前用户的评价是“因为工作原因，我提前来这里看了一下，然后看到有这么一家茶室，就挺感兴趣的，在抖音和大众点评上面都团过券，奶茶挺好喝，最喜欢的就是点杯奶茶坐在哪看着外面的风景，特别舒服，这个茶室的选址太好了，而且下面还有很多台阶，好多人都喜欢在那坐一会。”\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文案": "请你按照python list的格式，抓取模型回复中，给出的文案部分，只需要文案，不需要内容。比如[\"大学城景致，奶茶添趣，台阶上的悠闲时光，优惠券享不停。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否创作了奶茶店的广告文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "每个文案是否不超过100个字",
                "corresponding_part": "文案",
                "rule": "each_length:[1, 100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "文案是否提到或隐喻地提到工作日大学生",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文案是否提到或隐喻地提到了奶茶店",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "文案是否体现了用户评价中提到的茶室选址好",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "文案是否体现了用户评价中提到的奶茶好喝",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "文案是否体现了用户评价中提到的“坐在台阶上看风景的舒适感”或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "最近在小红书上有一个很火的话题#优雅，永不过时#，我想让自己的账号有更多的关注，请你帮我写一篇符合主题的小红书的爆文。我的粉丝群体以年轻女性为主，文章要有冬季穿搭、香水推荐，文案风格活泼一点，适当添加一些颜文字和emoji，最后还要植入金主miumiu的乐福鞋广告，要丝滑插入，不要太直接哦。标题带tag，正文不要有。字数在500到700之间。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文章": "#CODE#文章内容+标题，删除类似“标题:”，“内容:”的文字"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文章",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "文章是否包含冬季穿搭的内容",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "文章是否包含香水推荐的内容",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文章是否添加了一些颜文字和emoji",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "文章是否植入了miumiu的乐福鞋广告",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "生成特定文案",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "标题是否带有tag，类似#xxx这样的",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "正文是否没有tag，类似#xxxx这样的",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "生成特定文案",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文章字数是否在500到700之间",
                "corresponding_part": "文章",
                "rule": "each_length:[500,700]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一篇从黑龙江到北京摩旅的笔记，大概100字，要有风景的描述，路线的分享，以及费用，贴地气一点  不要用太高傲的词汇\n备注:字数只计中文字符",
        "corresponding_parts": {
            "笔记": "#CODE#笔记内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一篇笔记",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "笔记是否大概100字",
                "corresponding_part": "笔记",
                "rule": "each_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的笔记中，是否包含风景的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的笔记中，是否包含路线的分享",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的笔记中，是否包含费用的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假如我是一个现代用户，我进入到咒术回战的剧情中，现在正在和咒术回战的五条悟对话，我应该怎么设计后续剧情来吸引这个现代用户呢？要求只用极短的剧情就带来极强的吸引力。\n\n你需要写出剧情规划，剧情卡介绍，具体要求如下:\n1. 剧情规划:\n富有吸引力的剧情规划，要求在较短对话中就能吸引用户极大的兴趣。直接写剧情规划就好，不需要对话示例。同事记得指明时间地点场景等。要求400字左右。\n2. 剧情卡介绍:\n剧情卡介绍是给用户展示的，可以简单介绍开始部分剧情，但是不能完全剧透（保留用户兴趣和悬念），最好有一定悬念的结尾，这样能吸引用户参与兴趣，类似剧情简介。要求500字以内。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "剧情规划": "请你按照python list的形式，将model_response中生成的剧情规划分割并提取出来。无需提取任何标点或者index，比如:[\"时间:午夜。地点:东京都内一座古老的神社。场景:在一场意外中，现代用户被卷入了咒术高尚的世界，发现自己拥有一种特殊能力，能看到平常人看不到的咒灵。五条悟现身，表示用户的能力非常罕见，必须尽快掌控。突然，一只强大的咒灵出现，五条悟决定带领用户进行实战指导。紧张刺激的战斗即将展开，用户的选择将影响战斗的走向和自己的命运。\"]",
            "剧情卡介绍": "请你按照python list的形式，将model_response中生成的剧情卡介绍分割并提取出来。无需提取任何标点或者index，比如:[\"午夜的东京，一场突如其来的遭遇，将你带入了一个隐藏于都市之中的神秘世界。面对你所未见过的咒灵，五条悟出现在你面前，揭示了你的特殊命运。在他的指导下，你即将迎接第一场真正的试炼。战斗一触即发，你的选择将决定未来的路径。欢迎来到咒术的战场。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了剧情规划",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "剧情规划是否在400字左右",
                "corresponding_part": "剧情规划",
                "rule": "each_length:[360,440]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "剧情规划是否指明了时间地点场景等",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了剧情卡介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "剧情卡介绍是否在500字以内",
                "corresponding_part": "剧情卡介绍",
                "rule": "each_length:[1,500]",
                "dep": [
                    3
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "按要求将以下歌词改变为《你姓石》。\n\n原歌词:\n'''我姓石，無論何時與你相識我都值\n我姓石，執筆寫詞猶如駿馬在奔馳\n我姓石，心往神馳執筆在憶落筆執\n我姓石，高見遠識人如其名很務實\n\n石，不懼風飛沙\n石，眾人把你誇\n石，眾星守護他\n石，人中才子佳\n石，一路在前行\n石，一生注定贏\n石，風雨皆會平\n石，揚帆再揚名'''\n\n改编主题:夸赞一位设计师团队的管理者，负责任、有耐心，通过自己的努力带领团队变得更好。\n\n要求:字数100字；歌词押韵。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "歌词": "请你按照python list的格式，抓取模型回复中，给出的所有歌词，要分割，例如: [\"我姓石，無論何時與你相識我都值\", \"我姓石，執筆寫詞猶如駿馬在奔馳\", \"我姓石，心往神馳執筆在憶落筆執\", \"我姓石，高見遠識人如其名很務實\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "改编后的歌词是否夸赞一位设计师团队的管理者",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "改编后的歌词是否体现管理者负责任、有耐心",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "改编后的歌词是否体现管理者通过自己的努力带领团队变得更好",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "改编后的歌词字数是否满足100字",
                "corresponding_part": "歌词",
                "rule": "total_length:[100,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "改编后的歌词是否押韵",
                "corresponding_part": "歌词",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "最近在小红书上有一个很火的话题#优雅，永不过时#，我想让自己的账号有更多的关注，请你帮我写一篇符合主题的小红书的爆文。我的粉丝群体以年轻女性为主，文章要有冬季穿搭、香水推荐，文案风格活泼一点，适当添加一些颜文字和emoji，最后还要植入金主miumiu的乐福鞋广告，要丝滑插入，不要太直接哦。标题带tag，正文不要有。字数在50到70之间。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文章": "#CODE#文章内容+标题，删除类似“标题:”，“内容:”的文字"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文章",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "文章是否包含冬季穿搭的内容",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "文章是否包含香水推荐的内容",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文章是否添加了一些颜文字和emoji",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "文章是否植入了miumiu的乐福鞋广告",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "生成特定文案",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "标题是否带有tag，类似#xxx这样的",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "正文是否没有tag，类似#xxxx这样的",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "生成特定文案",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文章字数是否在50到70之间",
                "corresponding_part": "文章",
                "rule": "each_length:[50,70]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "“我在诺丁汉的一家投行做过三年分析员，后面去了伦敦的另一家跨国投行，担任了五年基金经理。2020年开始自己创业。”把这段话改为中英文夹杂的工作经历介绍，要求工作地点和职位是英文，工作时长必须是中文；中文和英文的比例为2 : 3，总字数控制在100字以内。\n备注:中文数量为中文字符数，英文数量为单词数",
        "corresponding_parts": {
            "工作经历": "#CODE#工作经历内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了中英文夹杂的工作经历介绍",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "工作地点和职位是否是英文",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "工作时长是否是中文",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "中文和英文的比例是否为2 : 3",
                "corresponding_part": "工作经历",
                "rule": "Chinese_English_ratio:[2,3]",
                "dep": [
                    0
                ],
                "能力项": "倍数、中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "总字数是否控制在100字以内",
                "corresponding_part": "工作经历",
                "rule": "count_mixed_language_words:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "“我在诺丁汉的一家投行做过三年分析员，后面去了伦敦的另一家跨国投行，担任了五年基金经理。2020年开始自己创业。”把这段话改为中英文夹杂的工作经历介绍，要求工作地点和职位是英文，工作时长必须是中文；中文和英文的比例为7 : 3，总字数控制在100字以内。\n备注:中文数量为中文字符数，英文数量为单词数",
        "corresponding_parts": {
            "工作经历": "#CODE#工作经历内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了中英文夹杂的工作经历介绍",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "工作地点和职位是否是英文",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "工作时长是否是中文",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "中文和英文的比例是否为7 : 3",
                "corresponding_part": "工作经历",
                "rule": "Chinese_English_ratio:[7,3]",
                "dep": [
                    0
                ],
                "能力项": "倍数、中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "总字数是否控制在100字以内",
                "corresponding_part": "工作经历",
                "rule": "count_mixed_language_words:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "推荐景点开封古城，其中包含标题50个字以内，文案70字左右，标题需要具备吸引力，可以采用目前小红书抖音微博等社交媒体平台的热点词汇、热梗、热门说法。让人看到有强烈的欲望点击。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的格式，抓取模型回复中，给出的标题部分。比如[\"利民堡村，乡野风光美\"]",
            "文案": "请你按照python list的格式，抓取模型回复中，给出的文案部分。比如[\"朔州利民堡村，带上相机，走进田野间的诗画风情。这里是摄影爱好者的天堂，也是追求宁静的你最佳的逃离之地。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题和文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "标题是否在50个字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "文案是否在70字左右",
                "corresponding_part": "文案",
                "rule": "each_length:[63,77]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文案是否围绕景点开封古城",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "以下是年会节目单\"相声\", \"你画我猜\", \"睡觉大赛\", \"电脑游戏比赛\", \"话剧\"帮我生成两个主持人的主持稿，分别代称为福、欣。请注意:每个主持人的稿子都需要包含所有节目，请勿修改任何节目名称",
        "corresponding_parts": {
            "福的主持稿": "请你提取model_response中的主持人福的主持稿，只需要提取出主持人福的主持稿，放在一个element内，不需要提取出主持人欣的主持稿。比如:[\"福: 各位观众，欢迎参加我们的年度盛会。今晚，我们将为大家带来一系列精彩的节目，包括动感的舞蹈\"科目三\"，创新的综合表演\"唱跳rap\"，以及优美的舞蹈展示\"桃花朵朵开\"。\"]",
            "欣的主持稿": "请你提取model_response中的主持人欣的主持稿，只需要提取出主持人欣的主持稿，放在一个element内，不需要提取出主持人福的主持稿。比如:[\"欣: 是的，福。除了这些，我们还有激动人心的\"王者荣耀 SOLO 赛\"等待大家的参与，同时也会有深情的弹唱演绎\"消愁\"为大家送上慰藉。让我们共同期待一个精彩纷呈的夜晚吧！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了主持人福的主持稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了主持人欣的主持稿",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "主持人福的主持稿中，是否包含了年会节目单中的所有节目",
                "rule": "keywords:[\"相声\", \"你画我猜\", \"睡觉大赛\", \"电脑游戏比赛\", \"话剧\"]",
                "corresponding_part": "福的主持稿",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "主持人欣的主持稿中，是否包含了年会节目单中的所有节目",
                "rule": "keywords:[\"相声\", \"你画我猜\", \"睡觉大赛\", \"电脑游戏比赛\", \"话剧\"]",
                "corresponding_part": "欣的主持稿",
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "将俗语“买椟还珠”扩写成一篇故事，用文言文写，100字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#给出的整个故事（包括前言后语）。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否用文言文形式扩写了俗语“买椟还珠”为一则故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事字数是否在100字上下",
                "corresponding_part": "故事",
                "rule": "each_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "市场运营一段话定性表述整体情况:讲清楚取得了什么样的关键业绩结果，既要有定量的分析，也要有定性的总结，避免陷入数据的堆砌，却无法说明数据背后的意义，100字总结\n备注:字数只计中文字符",
        "corresponding_parts": {
            "定性表述": "#CODE#整篇总结"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了一段总结",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "定性表述是否在100字以内",
                "corresponding_part": "定性表述",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "将俗语“画蛇添足”扩写成一篇故事，用文言文写，100字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#给出的整个故事（包括前言后语）。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否用文言文形式扩写了俗语“画蛇添足”为一则故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事字数是否在100字上下",
                "corresponding_part": "故事",
                "rule": "each_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "从企业情况、行业现状、北京特殊情况、北京整体资源回收现状、餐盒回收项目实施情况等方面写一个50字以上的关于北京中环创新公司（资源回收企业）的调研报告\n备注:字数只计中文字符",
        "corresponding_parts": {
            "调研报告": "#CODE#调研报告内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了调研报告",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了企业情况的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了行业现状的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了北京特殊情况的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否给出了北京整体资源回收现状的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "是否给出了餐盒回收项目实施情况的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "调研报告是否达到50字",
                "corresponding_part": "调研报告",
                "rule": "each_length:[50, 100000]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "请你在以下这段话的基础上，帮我写一个有吸引力的剧情卡，剧情卡介绍: 剧情卡介绍是给用户展示的，可以简单介绍开始部分剧情，但是不能完全剧透（保留用户兴趣和悬念），最好有一定悬念的结尾，这样能吸引用户参与兴趣，类似剧情简介。要求50字以内。文本:新婚之夜，总裁得知千金小姐在联姻之前已有男朋友，但总裁对千金小姐一见钟情，容不得千金小姐心里有别的男人。此刻总裁双眼通红，带着一丝酒气，满身怒火将千金小姐压在身下，妄图用孩子留下她……\n备注:字数只计中文字符",
        "corresponding_parts": {
            "剧情卡介绍": "#CODE#剧情卡介绍"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了剧情卡介绍",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "剧情卡介绍是否在50字以内",
                "corresponding_part": "剧情卡介绍",
                "rule": "each_length:[1,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "按要求将以下歌词改变为《你姓石》。\n\n原歌词:\n'''我姓石，無論何時與你相識我都值\n我姓石，執筆寫詞猶如駿馬在奔馳\n我姓石，心往神馳執筆在憶落筆執\n我姓石，高見遠識人如其名很務實\n\n石，不懼風飛沙\n石，眾人把你誇\n石，眾星守護他\n石，人中才子佳\n石，一路在前行\n石，一生注定贏\n石，風雨皆會平\n石，揚帆再揚名'''\n\n改编主题:夸赞一位设计师团队的管理者，负责任、有耐心，通过自己的努力带领团队变得更好。\n\n要求:字数必须刚好是原歌词的1倍左右，只按中文字符计算；歌词押韵。",
        "corresponding_parts": {
            "歌词": "请你按照python list的格式，抓取模型回复中，给出的所有歌词，要分割，例如: [\"我姓石，無論何時與你相識我都值\", \"我姓石，執筆寫詞猶如駿馬在奔馳\", \"我姓石，心往神馳執筆在憶落筆執\", \"我姓石，高見遠識人如其名很務實\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "改编后的歌词是否夸赞一位设计师团队的管理者",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "改编后的歌词是否提到管理者负责任、有耐心",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "改编后的歌词是否提到管理者通过自己的努力带领团队变得更好",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "改编后的歌词字数是否是原歌词的1倍左右",
                "corresponding_part": "歌词",
                "rule": "total_length:[93,114]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围、倍数",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "改编后的歌词是否押韵",
                "corresponding_part": "歌词",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "用书信体的格式！字数在100字左右。以小学生的角度写一封信。\n要求:写给祖国的一封信，歌颂当代社会的发展，告诉老一辈的抗战先烈，你们的牺牲换来了现在来之不易的和平\n备注:字数只计中文字符",
        "corresponding_parts": {
            "书信体": "#CODE#整封信件"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否以书信体的格式写信",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "信的字数是否在100字左右",
                "corresponding_part": "书信体",
                "rule": "each_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "信是否写给祖国",
                "rule": null,
                "dep": [],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "信中是否歌颂当代社会的发展",
                "rule": null,
                "dep": [],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "信中是否告诉老一辈的抗战先烈他们的牺牲换来了现在来之不易的和平",
                "rule": null,
                "dep": [],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "最近在小红书上有一个很火的话题#优雅，永不过时#，我想让自己的账号有更多的关注，请你帮我写一篇符合主题的小红书的爆文。我的粉丝群体以年轻女性为主，文章要有冬季穿搭、香水推荐，文案风格活泼一点，适当添加一些颜文字和emoji，最后还要植入金主miumiu的乐福鞋广告，要丝滑插入，不要太直接哦。标题带tag，正文不要有。字数在400到500之间。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文章": "#CODE#文章内容+标题，删除类似“标题:”，“内容:”的文字"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文章",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "文章是否包含冬季穿搭的内容",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "文章是否包含香水推荐的内容",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文章是否添加了一些颜文字和emoji",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "文章是否植入了miumiu的乐福鞋广告",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "生成特定文案",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "标题是否带有tag，类似#xxx这样的",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "正文是否没有tag，类似#xxxx这样的",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "生成特定文案",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文章字数是否在400到500之间",
                "corresponding_part": "文章",
                "rule": "each_length:[400,500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "以下是年会节目单\"相声\", \"手机游戏比赛\", \"睡觉大赛\", \"话剧\", \"你画我猜\"帮我生成两个主持人的主持稿，分别代称为福、欣。请注意:每个主持人的稿子都需要包含所有节目，请勿修改任何节目名称",
        "corresponding_parts": {
            "福的主持稿": "请你提取model_response中的主持人福的主持稿，只需要提取出主持人福的主持稿，放在一个element内，不需要提取出主持人欣的主持稿。比如:[\"福: 各位观众，欢迎参加我们的年度盛会。今晚，我们将为大家带来一系列精彩的节目，包括动感的舞蹈\"科目三\"，创新的综合表演\"唱跳rap\"，以及优美的舞蹈展示\"桃花朵朵开\"。\"]",
            "欣的主持稿": "请你提取model_response中的主持人欣的主持稿，只需要提取出主持人欣的主持稿，放在一个element内，不需要提取出主持人福的主持稿。比如:[\"欣: 是的，福。除了这些，我们还有激动人心的\"王者荣耀 SOLO 赛\"等待大家的参与，同时也会有深情的弹唱演绎\"消愁\"为大家送上慰藉。让我们共同期待一个精彩纷呈的夜晚吧！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了主持人福的主持稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了主持人欣的主持稿",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "主持人福的主持稿中，是否包含了年会节目单中的所有节目",
                "rule": "keywords:[\"相声\", \"手机游戏比赛\", \"睡觉大赛\", \"话剧\", \"你画我猜\"]",
                "corresponding_part": "福的主持稿",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "主持人欣的主持稿中，是否包含了年会节目单中的所有节目",
                "rule": "keywords:[\"相声\", \"手机游戏比赛\", \"睡觉大赛\", \"话剧\", \"你画我猜\"]",
                "corresponding_part": "欣的主持稿",
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一篇从上海到广州摩旅的笔记，大概50字，要有风景的描述，路线的分享，以及费用，贴地气一点  不要用太高傲的词汇\n备注:字数只计中文字符",
        "corresponding_parts": {
            "笔记": "#CODE#笔记内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一篇笔记",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "笔记是否大概50字",
                "corresponding_part": "笔记",
                "rule": "each_length:[45,55]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的笔记中，是否包含风景的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的笔记中，是否包含路线的分享",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的笔记中，是否包含费用的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "清理系统垃圾问题一直困扰着普通用户，我想针对这个问题写一份调研报告，主要是想了解普通用户在什么场景下会遇到这个问题；对于他们来说，简单的清理方法是什么；还想有没有可能设计一款傻瓜软件惠及大众。帮我写一份这样的调研报告，字数在50字以内。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "调研报告": "#CODE#整篇报告"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了调研报告",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "调研报告是否在50字以内",
                "corresponding_part": "调研报告",
                "rule": "each_length:[1,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的调研报告中，是否包含“普通用户在什么场景下会遇到清理系统垃圾问题”这一要点或与其相关的信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "请写一篇400到500字的国企风格的工作调研报告，立足于我本职的无人驾驶智能网联车辆的宣传工作，突出新时代中国特色社会主义思想，二十大全会精神及主题教育要求，重点围绕如何提升青年学习工作实效，如何解决学习成果转化运用的实践案例，内容真实有深度，以客观数据、事实为依据和论点，逻辑清晰。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "报告": "#CODE#整篇报告"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了一篇报告",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "报告是否在400到500字之间",
                "corresponding_part": "报告",
                "rule": "each_length:[400,500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "我是一名测试工程师，未来想做鸿蒙系统的测试，现在想做规划，主要是补齐在鸿蒙系统上的测试能力，如何写目标描述和目标为什么重要，字数在100字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "所有论述": "#CODE#整篇论述"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了目标论述",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "论述是否在100字左右",
                "corresponding_part": "所有论述",
                "rule": "each_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "目标描述是否具体针对鸿蒙系统的测试能力",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了目标为什么重要的说明",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "将俗语“狐假虎威”扩写成一篇故事，用文言文写，100字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#给出的整个故事（包括前言后语）。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否用文言文形式扩写了俗语“狐假虎威”为一则故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事字数是否在100字上下",
                "corresponding_part": "故事",
                "rule": "each_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "嗨，小美，新年好啊，请以龙年为主题，生成一副对联，包括横批，要求上联和下联都是50个字，上联和下联不能出现重复文字\n备注:字数只计中文字符",
        "corresponding_parts": {
            "上下联": "请你按照python list的形式，将model_response中的春联分割并提取出来。并按照上联和下联切分，一个element内只能存在上联或下联。比如:[\"云舞天开展锦图\", \"梅笑春来绘翠屏\"]",
            "上联": "请你按照python list的形式，将model_response中的上联分割并提取出来。比如[\"云舞天开展锦图\"]",
            "下联": "请你按照python list的形式，将model_response中的下联分割并提取出来。比如[\"梅笑春来绘翠屏\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了春联且每副春联是否有上联和下联",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "每副春联的上联是否为50个字",
                "corresponding_part": "上联",
                "rule": "each_length:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每副春联的下联是否为50个字",
                "corresponding_part": "下联",
                "rule": "each_length:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "上下联是否有重复文字？",
                "corresponding_part": "上下联",
                "rule": "no_word_repeat",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一个角色有，小李、小李老婆、面馆老板、面馆老板老婆、客人甲、客人乙的小品剧本，主要剧情是吃面，台词可以加一个谐音梗，谐音梗跟“盐”有关。剧本不要太长，不超过100字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "小品剧本": "#CODE#小品剧本"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了小品剧本",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "给出的剧本中，是否包含小李这一角色",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的剧本是否包含角色小李老婆",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的剧本是否包含角色面馆老板",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的剧本是否包含角色面馆老板老婆",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "给出的剧本是否包含角色客人甲",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "给出的剧本是否包含角色客人乙",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "给出的剧本主要剧情是否是吃面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "给出的剧本是否包含一个与“盐”有关的谐音梗",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "给出的剧本是否不超过100字",
                "corresponding_part": "小品剧本",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "请帮我写一份入团将申请书，大概100字左右，入团申请人是唐斌。内容上介绍以下几点:一是基本情况，包括成长经历、思想、学习的表现，二是思想认识，对团的性质、历史等方面的认识、入团动机等，清晰表明入团意愿。三是态度决心，包括今后的努力方向和实际行动争取早日进入团组织。  结尾要表达请团组织考察的心情和愿望。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "入团申请书": "#CODE#整篇入团申请书"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了入团申请书",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "入团申请书是否大概100字左右",
                "corresponding_part": "入团申请书",
                "rule": "each_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的入团申请书中，是否包含基本情况这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的入团申请书中，是否包含成长经历这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的入团申请书中，是否包含思想表现这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "给出的入团申请书中，是否包含学习表现这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "给出的入团申请书中，是否包含思想认识这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "给出的入团申请书中，是否包含对团的性质有认识这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "给出的入团申请书中，是否包含对团的历史认识这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "给出的入团申请书中，是否包含入团动机这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "给出的入团申请书中，是否包含今后的努力方向这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "给出的入团申请书中，是否包含“以实际行动争取早日进入团组织”这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是美容行业【半亩花田】的商户，你想要创作可以激发用户探店的短视频，目标受众是精致生活的都市白领，30-35岁，追求身体放松和提升皮肤质感，请提供1个短视频纯描述旁白的脚本。 要求如下: \n\n1.受众痛点: 长期坐着，肩部经常酸痛，经常加班，皮肤出油且不够白净 ，不知道用什么方式解决？\n\n3.商户服务范围:皮肤深层清洁、眼部护理、按摩SPA \n\n4.商户亮点:服务热情，无推销，科技美肤，环境优雅，大牌补妆，高端美肤用品，一客一室 \n\n5.脚本按照PREP结构:【观点】+【理由】+【例子】+【重复观点】结构来写, \n\n6.文案不要啰嗦重复，字数50字左右 ，文字表达有心灵鸡汤感，如“每一个女人都要好好爱自己，对自己好，一切才好”\n备注:字数只计中文字符",
        "corresponding_parts": {
            "脚本": "#CODE#脚本内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了脚本",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "给出的脚本中，是否包含PERP中的“观点”",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的脚本中，是否包含PERP结构中的“理由”",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的脚本中，是否包含PERP结构中的“例子”",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的脚本中，是否包含PERP结构中的“重复观点“",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "脚本是否字数在50字左右",
                "corresponding_part": "脚本",
                "rule": "each_length:[45,55]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "脚本是否针对目标受众的痛点: 长期坐着，肩部经常酸痛，经常加班，皮肤出油且不够白净 ",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "脚本是否提及商户的所有服务范围: 皮肤深层清洁、眼部护理、按摩SPA",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "脚本是否提及商户的所有亮点: 服务热情，无推销，科技美肤，环境优雅，大牌补妆，高端美肤用品，一客一室",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "请创作一个幽默短文，描绘一个通常避免辛辣食物的人不慎尝试辣椒的反应。故事的主角是John，他的味蕾通常不接受辣味，但在今天的情况下，他意外地咬了一大口辣椒。请确保描述中包含他的第一反应、面部表情的变化以及他试图缓解辣味的有趣尝试。故事应该以轻松诙谐的语气呈现，字数控制在50字左右。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#整篇短文"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否创作了一篇短文",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "短文是否描绘了一个通常避免辛辣食物的人不慎尝试辣椒的反应",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "所给故事的主角是否是John",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "所给故事中，是否描述了John的味蕾通常不接受辣味",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "所给故事中，是否描述了John意外地咬了一大口辣椒",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "所给故事中，是否包含了John的第一反应",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "所给故事中，是否描述了John面部表情的变化",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "所给故事中，是否描述了John试图缓解辣味的有趣尝试",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "故事的字数是否控制在50字左右",
                "corresponding_part": "故事",
                "rule": "each_length:[45,55]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "生成100字以上直播文案:要求:1、门店名称:荣记潮汕牛肉火锅。2、门店特色锅底:潮汕原汤锅。3、特色手切涮肉:吊龙，匙仁，匙柄，嫩牛肉。4、特色菜品:手打牛肉丸、潮汕肉饼、黄金小馒头\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文案": "#CODE#文案内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "给出的文案中，是否包含“门店名称:荣记潮汕牛肉火锅”这一要点或相关信息",
                "corresponding_part": "文案",
                "rule": "keyword:[\"荣记潮汕牛肉火锅\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的文案中，是否包含门店“特色锅底:潮汕原汤锅”这一要点或相关信息",
                "corresponding_part": "文案",
                "rule": "keyword:[\"潮汕原汤锅\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的文案中，是否包含“特色手切涮肉:吊龙，匙仁，匙柄，嫩牛肉”这一要点或相关信息",
                "corresponding_part": "文案",
                "rule": "keyword:[\"吊龙\",\"匙仁\",\"匙柄\",\"嫩牛肉\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的文案中，是否包含“特色菜品:手打牛肉丸、潮汕肉饼、黄金小馒头”这一要点或相关信息",
                "corresponding_part": "文案",
                "rule": "keyword:[\"手打牛肉丸\",\"潮汕肉饼\",\"黄金小馒头\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "是否生成了100字以上的直播文案",
                "corresponding_part": "文案",
                "rule": "each_length:[100,100000]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你有读过王尔德的《快乐王子》吗？王尔德的童话故事总是带有一些悲伤，请你模仿王尔德的风格写一篇童话故事。故事中有两个主角，不要以人类为主角，前期是快乐的基调，结局请模仿《快乐王子》中王子和燕子的结局。字数在4000到5000之间。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "童话故事": "#CODE#整篇童话故事"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了一篇故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事中是否有两个主角",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "故事主角是否不是人类",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "故事字数是否在4000到5000之间",
                "corresponding_part": "童话故事",
                "rule": "each_length:[4000,5000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "帮我写一份50字左右的供应商产能管理方案。包含背景以及产能制定逻辑，以及持续2月不达标的汰换机制。背景从供应商产能和自有产能差距较大，自有产能是供应商产能的2-3倍，提供3个月的改善期限，若仍不达标，将启动人员汰换机制。产能制定逻辑，整理目标是3个月达成自有当前产能的70%，按月维度设置递进目标；汰换机制，5月份仍不达标的同学直接汰换。每个环节较详尽阐述\n备注:字数只计中文字符",
        "corresponding_parts": {
            "方案": "#CODE#方案内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了一份方案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "背景是否说明“供应商产能和自有产能差距较大，自有产能是供应商产能的2-3倍”或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "背景是否提供“3个月的改善期限，若仍不达标，将启动人员汰换机制”或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "供应商产能管理方案是否包含“产能制定逻辑”或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "产能制定逻辑是否整理目标为“3个月达成自有当前产能的70%”或相关信息",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "产能制定逻辑是否按月维度设置递进目标",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "供应商产能管理方案是否包含“汰换机制”或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 7,
                "question": "汰换机制是否说明“5月份仍不达标的同学直接汰换”或相关信息",
                "rule": null,
                "dep": [
                    6
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "方案是否包含50字左右",
                "corresponding_part": "方案",
                "rule": "each_length:[45,55]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "高考的作文题目是:\n吹灭别人的灯，并不会让自己更加光明；阻挡别人的路，也不会让自己行得更远。\n“一花独放不是春，百花齐放春满园。”如果世界上只有一种花朵，就算这种花朵再美，那也是单调的。\n以上两则材料出自习近平总书记的讲话，以生动形象的语言说出了普遍的道理。请据此写一篇文章，体现你的认识与思考。\n要求:选准角度，确定立意，明确文体，自拟标题；不要套作，不得抄袭；不得泄露个人信息；不少于100字。\n\n下面是某学生根据题目写的散文:\n众芳摇落独暄妍——共同发展的力量\n\n世界如同一座花园，花朵们各自绽放，散发出独特的芬芳。然而，若只有一种花朵独自绽放，即使再美，也难以让人感受到春天的气息。唯有百花齐放，春天才能真正充盈。\n\n习近平总书记的这句话，如同一股清风，吹散了人们心中的嫉妒与阻挡。它告诉我们，吹灭别人的灯，并不会让自己更加光明；阻挡别人的路，也不会让自己行得更远。相反，只有通过合作与共享，我们才能激发出无限的力量，实现共同发展。\n\n合作与共享的力量在人类社会中无处不在。国家之间的合作与交流，为全球的繁荣与发展提供了源源不断的动力。当各国携手合作，分享经验和资源，共同应对全球挑战时，我们才能够共同创造和平与繁荣的未来。正如习近平总书记所说:“一花独放不是春，百花齐放春满园。”只有通过合作，我们才能共同构建一个和谐、稳定的世界。\n\n在商业领域，企业之间的合作与共享也是推动发展的重要力量。当企业愿意携手合作，共同研发创新产品，共享市场资源，互利共赢时，我们才能够实现更大的成功。合作不仅能够提高企业的竞争力，也能够促进整个行业的发展。正是因为有了合作与共享的精神，我们才能够在激烈的市场竞争中取得更大的突破。\n\n在个人层面，合作与共享同样具有重要意义。每个人都有自己的优势和长处，当我们愿意与他人合作，互相学习、互相促进时，我们才能够实现个人的成长与进步。同时，分享的精神也是人类社会进步的推动力。只有愿意分享自己的知识、经验和资源，我们才能够共同进步，共同繁荣。\n\n在这个充满竞争与合作的世界里，我们应该明白，吹灭别人的灯，并不会让自己更加光明；阻挡别人的路，也不会让自己行得更远。唯有通过合作与共享，我们才能够激发出无限的力量，实现共同发展。让我们携起手来，摒弃嫉妒和阻挡的心态，以合作与共享的精神，共同推动社会的进步和发展。无论是在国家层面、企业层面还是个人层面，只有通过合作，我们才能够实现共同发展、共同繁荣。让我们共同努力，共同追求，为实现人类社会的进步与发展贡献自己的力量。\n\n\n评价一下优缺点，满分60分的话能得多少分？并尝试写一份满分高考作文\n备注:字数只计中文字符",
        "corresponding_parts": {
            "满分作文": "#CODE#给出的满分作文示例"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否对学生的作文进行了评价",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "给出的评价中，是否给出了学生文章的优点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的评价中，是否给出了学生文章的缺点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了作文的评分",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "评分是否在满分60分的标准下进行",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "是否尝试写了一份满分高考作文",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "满分作文是否符合题目要求",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "满分作文是否选准角度，确定立意，明确文体，自拟标题",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "满分作文是否不少于100字",
                "rule": "each_length:[100,100000]",
                "corresponding_part": "满分作文",
                "dep": [
                    5
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是美容行业【半亩花田】的商户，你想要创作可以激发用户探店的短视频，目标受众是精致生活的都市白领，30-35岁，追求身体放松和提升皮肤质感，请提供1个短视频纯描述旁白的脚本。 要求如下: \n\n1.受众痛点: 长期坐着，肩部经常酸痛，经常加班，皮肤出油且不够白净 ，不知道用什么方式解决？\n\n3.商户服务范围:皮肤深层清洁、眼部护理、按摩SPA \n\n4.商户亮点:服务热情，无推销，科技美肤，环境优雅，大牌补妆，高端美肤用品，一客一室 \n\n5.脚本按照PREP结构:【观点】+【理由】+【例子】+【重复观点】结构来写, \n\n6.文案不要啰嗦重复，字数100字左右 ，文字表达有心灵鸡汤感，如“每一个女人都要好好爱自己，对自己好，一切才好”\n备注:字数只计中文字符",
        "corresponding_parts": {
            "脚本": "#CODE#脚本内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了脚本",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "给出的脚本中，是否包含PERP中的“观点”",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的脚本中，是否包含PERP结构中的“理由”",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的脚本中，是否包含PERP结构中的“例子”",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的脚本中，是否包含PERP结构中的“重复观点“",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "脚本是否字数在100字左右",
                "corresponding_part": "脚本",
                "rule": "each_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "脚本是否针对目标受众的痛点: 长期坐着，肩部经常酸痛，经常加班，皮肤出油且不够白净 ",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "脚本是否提及商户的所有服务范围: 皮肤深层清洁、眼部护理、按摩SPA",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "脚本是否提及商户的所有亮点: 服务热情，无推销，科技美肤，环境优雅，大牌补妆，高端美肤用品，一客一室",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "写一个宣传冰淇淋售卖的喊麦文案，要求押韵，40字左右，每句10个字，突出特价团购便宜实惠、五一购买冰淇淋\n备注:字数只计中文字符",
        "corresponding_parts": {
            "分割文案": "请你按照python list的形式，将model_response中的喊麦文案输出，请分割输出，不要带标点符号。例如[\"冰淇淋来一球\",\"五一热浪消\",\"特价团购省\",\"甜蜜满心跳\",\"便宜又实惠\",\"清凉一夏妙\",\"美味难以挡\",\"售卖全城照\",\"快乐伴你笑\",\"冰爽好心情\",\"团购更优惠\",\"甜甜圈里绕\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了宣传冰淇淋售卖的喊麦文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "文案是否押韵",
                "corresponding_part": "分割文案",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "文案是否在40字左右",
                "corresponding_part": "分割文案",
                "rule": "total_length:[36,44]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文案是否每句10个字",
                "corresponding_part": "分割文案",
                "rule": "each_length:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "文案是否提到特价团购便宜实惠",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "文案是否提到五一购买冰淇淋",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "写一个宣传冰淇淋售卖的喊麦文案，要求押韵，100字左右，每句20个字，突出特价团购便宜实惠、五一购买冰淇淋\n备注:字数只计中文字符",
        "corresponding_parts": {
            "分割文案": "请你按照python list的形式，将model_response中的喊麦文案输出，请分割输出，不要带标点符号。例如[\"冰淇淋来一球\",\"五一热浪消\",\"特价团购省\",\"甜蜜满心跳\",\"便宜又实惠\",\"清凉一夏妙\",\"美味难以挡\",\"售卖全城照\",\"快乐伴你笑\",\"冰爽好心情\",\"团购更优惠\",\"甜甜圈里绕\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了宣传冰淇淋售卖的喊麦文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "文案是否押韵",
                "corresponding_part": "分割文案",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "文案是否在100字左右",
                "corresponding_part": "分割文案",
                "rule": "total_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文案是否每句20个字",
                "corresponding_part": "分割文案",
                "rule": "each_length:[20,20]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "文案是否提到特价团购便宜实惠",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "文案是否提到五一购买冰淇淋",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "\n按要求将以下歌词改变为《你姓石》。\n\n原歌词:\n'''我姓石，無論何時與你相識我都值\n我姓石，執筆寫詞猶如駿馬在奔馳\n我姓石，心往神馳執筆在憶落筆執\n我姓石，高見遠識人如其名很務實\n\n石，不懼風飛沙\n石，眾人把你誇\n石，眾星守護他\n石，人中才子佳\n石，一路在前行\n石，一生注定贏\n石，風雨皆會平\n石，揚帆再揚名'''\n\n改编主题:夸赞一位设计师团队的管理者，负责任、有耐心，通过自己的努力带领团队变得更好。\n\n要求:字数必须刚好是原歌词的2倍左右；歌词押韵。\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "请为[国货之光夸迪次抛战痘]写一条[5星好评]，要求体现[功能性强，温和不刺激]的特点。注意需要强调自身使用感受，内容超过50字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "好评": "#CODE#好评内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了好评",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "好评内容是否体现了功能性强的特点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "好评内容是否体现了温和不刺激的特点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "好评内容是否强调了自身使用感受",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "好评内容是否超过50字",
                "corresponding_part": "好评",
                "rule": "each_length:[50,100000]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "清理系统垃圾问题一直困扰着普通用户，我想针对这个问题写一份调研报告，主要是想了解普通用户在什么场景下会遇到这个问题；对于他们来说，简单的清理方法是什么；还想有没有可能设计一款傻瓜软件惠及大众。帮我写一份这样的调研报告，字数在100字以内。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "调研报告": "#CODE#整篇报告"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了调研报告",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "调研报告是否在100字以内",
                "corresponding_part": "调研报告",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的调研报告中，是否包含“普通用户在什么场景下会遇到清理系统垃圾问题”这一要点或与其相关的信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你好，帮我写一段“盆满钵满奖”的推荐理由，有关于挣钱最多的，需要搞笑风格，押韵的。100字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐理由": "请你按照python list的格式，抓取模型回复中，给出的押韵搞笑推荐理由的内容，按照标点符号分开输出，例如: [\"盆满钵满奖，不只是钱满满，更是笑声和幸福，永远在线！\", \"在挣钱的道路上，他/她是个狂飙的赛车手，每次收入进账，就像打了个大大的满贯球。\", \"他/她的钱堆积如山，比豆芽还要快速发芽，账户的数字跳跃，像小兔子一样欢快地蹦跳。\", \"他/她的金库，比蜜蜂的蜂巢还要甜，每天的工资，像是不停下雨的天。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推荐理由",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐理由是否关于挣钱最多",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推荐理由是否押韵",
                "corresponding_part": "推荐理由",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推荐理由是否为100字左右",
                "corresponding_part": "推荐理由",
                "rule": "total_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "\n1. 对[{\\\"item_id\\\":815462849,\\\"item_info\\\":\\\"奥尔良鸡叉骨500g,半年销量43209份,原价18.8,售价13.9,优惠价13.8, 7.4折售卖中。\\\"},{\\\"item_id\\\":736220816,\\\"item_info\\\":\\\"【招牌全鸡】蜜汁手扒鸡,半年销量1919619份,原价30.0,售价20.9,优惠价12.9, 4.3折售卖中。\\\"},{\\\"item_id\\\":803218318,\\\"item_info\\\":\\\"牛奶烧仙草(大杯),半年销量145513份,原价13.0,售价11.5,优惠价3.1, 2.4折售卖中。\\\"},{\\\"item_id\\\":879489220,\\\"item_info\\\":\\\"一饱口福韩式烤肉双人餐,半年销量274份,原价212.0,售价97.0,优惠价97.0, 4.6折售卖中。\\\"},{\\\"item_id\\\":844314028,\\\"item_info\\\":\\\"香辣虾球,半年销量24058份,原价39.9,售价29.6,优惠价29.6, 7.5折售卖中。\\\"},{\\\"item_id\\\":644147443,\\\"item_info\\\":\\\"益禾烤奶/珍珠奶茶 2 选 1,半年销量424079份,原价10.0,售价7.8,优惠价0.01, 0.1折售卖中。\\\"},{\\\"item_id\\\":864316100,\\\"item_info\\\":\\\"2-3 人特色状元鸡(面不限量),原价141.0,售价89.0,优惠价89.0, 6.4折售卖中。\\\"},{\\\"item_id\\\":899820934,\\\"item_info\\\":\\\"五香/甜辣味猪蹄块1块,半年销量29份,原价13.8,售价12.8,优惠价12.8, 9.3折售卖中。\\\"},{\\\"item_id\\\":48869066,\\\"item_info\\\":\\\"高汤米线二人锅,半年销量12份,原价27.0,售价23.5,优惠价23.5, 8.8折售卖中。\\\"}]进行json解析获取资源列表，对资源特征item_info和用户特征”该用户女性,年龄在40～48岁之间,已婚,居住在淇县,有12岁以下的小孩,具有中的购买力。商品偏好方面，各商品的偏好得分是水果得分0.691、零食得分0.665、方便速食得分0.439;口味偏好方面，各口味的偏好得分是香辣味得分0.203、五香味得分0.2、椒麻味得分0.2;在行为偏好方面，各行为的偏好得分是母婴得分0.171。“进行解读，分析资源列表中的每个资源item与用户特征的匹配度，根据匹配度排序，获取匹配度最高的1个资源的item_id，得到item_list；同时分析用户商品偏好cates及搜索关键词query。\n2. 生成符合人设的包含打招呼和引导推荐的开场语opening:确保男性开场语更直接简短、简练幽默，女性开场语更加温暖、突出优惠、具有煽动性、可适当夸大。示例:\n  1）男性:“这波绝对划算！”，“好吃又不贵！”，“爽口又实惠，真香！”；\n  2）女性:“超低价，快来收福利！超值优惠哦～”，“快来！内部福利限时抢，团购超划算！”，“美味就是要分享，超省钱的美食来啦～”。\n3. 生成符合人设的能引导用户继续提问的个性化的结束语closing:从引导词商品偏好cates和搜索关键词query中随机抽取1个词，作为引导词intros。根据用户性别和引导词生成个性化的引导语。确保男性结束语要直接、简洁，女性结束语要夸张、有煽动性。示例:\n  1）男性用户，引导词:自助餐、咖啡 -> 引导语:不想吃这个？自助餐、咖啡通通都有！想吃什么帮你找～\n  2）男性用户，引导词:海底捞、麦当劳 -> 引导语:更多划算的团购，可以直接问我海底捞、麦当劳\n  3）男性用户，引导词:咖啡、双人餐 -> 引导语:不用纠结选哪家，告诉我想吃啥！问我双人餐、咖啡，隐藏低价团都能帮你找\n  4）女性用户，引导词:烤肉、江浙菜 -> 引导语:还想吃什么？快告诉我吧～烤肉、江浙菜通通都有！想吃什么帮你找～\n  5）女性用户，引导词:四季民福、肯德基 -> 引导语:更多巨省钱的团购，可以直接问我四季民福、肯德基\n  6）女性用户，引导词:双人餐、火锅 -> 引导语:偷偷告诉你，还有限时抢购的超低价福利，问我双人餐、火锅，我来帮你找～\nYour response must be in JSON format and satisfied the following JsonSchema:\n{\n  \\\"type\\\" : \\\"object\\\",\n  \\\"properties\\\" : {\n    \\\"closing\\\" : {\n      \\\"type\\\" : \\\"string\\\",\n      \\\"description\\\" : \\\"\\\"\n    },\n    \\\"item_list\\\" : {\n      \\\"type\\\" : \\\"array\\\",\n      \\\"description\\\" : \\\"item_id\\\",\n      \\\"items\\\" : {\n        \\\"type\\\" : \\\"string\\\"\n      }\n    },\n    \\\"opening\\\" : {\n      \\\"type\\\" : \\\"string\\\",\n      \\\"description\\\" : \\\"\\\"\n    },\n    \\\"intros\\\" : {\n      \\\"type\\\" : \\\"string\\\",\n      \\\"description\\\" : \\\"\\\"\n    }\n  },\n  \\\"required\\\" : [ \\\"closing\\\", \\\"item_list\\\", \\\"opening\\\", \\\"intros\\\" ]\n}\n\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假如我是一个现代用户，我进入到咒术回战的剧情中，现在正在和咒术回战的五条悟对话，我应该怎么设计后续剧情来吸引这个现代用户呢？要求只用极短的剧情就带来极强的吸引力。\n\n你需要写出剧情规划，剧情卡介绍，具体要求如下:\n1. 剧情规划:\n富有吸引力的剧情规划，要求在较短对话中就能吸引用户极大的兴趣。直接写剧情规划就好，不需要对话示例。同事记得指明时间地点场景等。要求500字左右。\n2. 剧情卡介绍:\n剧情卡介绍是给用户展示的，可以简单介绍开始部分剧情，但是不能完全剧透（保留用户兴趣和悬念），最好有一定悬念的结尾，这样能吸引用户参与兴趣，类似剧情简介。要求700字以内。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "剧情规划": "请你按照python list的形式，将model_response中生成的剧情规划分割并提取出来。无需提取任何标点或者index，比如:[\"时间:午夜。地点:东京都内一座古老的神社。场景:在一场意外中，现代用户被卷入了咒术高尚的世界，发现自己拥有一种特殊能力，能看到平常人看不到的咒灵。五条悟现身，表示用户的能力非常罕见，必须尽快掌控。突然，一只强大的咒灵出现，五条悟决定带领用户进行实战指导。紧张刺激的战斗即将展开，用户的选择将影响战斗的走向和自己的命运。\"]",
            "剧情卡介绍": "请你按照python list的形式，将model_response中生成的剧情卡介绍分割并提取出来。无需提取任何标点或者index，比如:[\"午夜的东京，一场突如其来的遭遇，将你带入了一个隐藏于都市之中的神秘世界。面对你所未见过的咒灵，五条悟出现在你面前，揭示了你的特殊命运。在他的指导下，你即将迎接第一场真正的试炼。战斗一触即发，你的选择将决定未来的路径。欢迎来到咒术的战场。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了剧情规划",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "剧情规划是否在500字左右",
                "corresponding_part": "剧情规划",
                "rule": "each_length:[450,550]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "剧情规划是否指明了时间地点场景等",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了剧情卡介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "剧情卡介绍是否在700字以内",
                "corresponding_part": "剧情卡介绍",
                "rule": "each_length:[1,700]",
                "dep": [
                    3
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我们公司打算推出新年主题的相关周边玩具，人物包括:福神、文曲星、财神、寿星、吉祥神。现在我需要你帮我写50个字的海报广告词，要包含春节元素，突出角色数量，并解释这个广告词的设计思路。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "海报广告词": "请你按照python list的形式，将model_response中生成的海报广告词分割并提取出来。只需要提取广告词，不需要提取解释，比如:[\"五星报喜迎新春\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了海报广告词",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了50个字的海报广告词",
                "corresponding_part": "海报广告词",
                "rule": "each_length:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的广告词是否包含春节元素",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否解释了广告词的设计思路",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "\n请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成20条批判性评论，避免重复。要求1:必须是原文字数的2倍左右。要求2:必须存在关键词\\\"\\\"尴尬\\\", \\\"烂片\\\", \\\"用力过猛\\\", \\\"面瘫\\\", \\\"不好看\\\"\\\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。\n\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "请创作一个幽默短文，描绘一个通常避免辛辣食物的人不慎尝试辣椒的反应。故事的主角是John，他的味蕾通常不接受辣味，但在今天的情况下，他意外地咬了一大口辣椒。请确保描述中包含他的第一反应、面部表情的变化以及他试图缓解辣味的有趣尝试。故事应该以轻松诙谐的语气呈现，字数控制在100字左右。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#整篇短文"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否创作了一篇短文",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "短文是否描绘了一个通常避免辛辣食物的人不慎尝试辣椒的反应",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "所给故事的主角是否是John",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "所给故事中，是否描述了John的味蕾通常不接受辣味",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "所给故事中，是否描述了John意外地咬了一大口辣椒",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "所给故事中，是否包含了John的第一反应",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "所给故事中，是否描述了John面部表情的变化",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "所给故事中，是否描述了John试图缓解辣味的有趣尝试",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "故事的字数是否控制在100字左右",
                "corresponding_part": "故事",
                "rule": "each_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假如我是一个现代用户，我进入到咒术回战的剧情中，现在正在和咒术回战的五条悟对话，我应该怎么设计后续剧情来吸引这个现代用户呢？要求只用极短的剧情就带来极强的吸引力。\n\n你需要写出剧情规划，剧情卡介绍，具体要求如下:\n1. 剧情规划:\n富有吸引力的剧情规划，要求在较短对话中就能吸引用户极大的兴趣。直接写剧情规划就好，不需要对话示例。同事记得指明时间地点场景等。要求50字左右。\n2. 剧情卡介绍:\n剧情卡介绍是给用户展示的，可以简单介绍开始部分剧情，但是不能完全剧透（保留用户兴趣和悬念），最好有一定悬念的结尾，这样能吸引用户参与兴趣，类似剧情简介。要求70字以内。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "剧情规划": "请你按照python list的形式，将model_response中生成的剧情规划分割并提取出来。无需提取任何标点或者index，比如:[\"时间:午夜。地点:东京都内一座古老的神社。场景:在一场意外中，现代用户被卷入了咒术高尚的世界，发现自己拥有一种特殊能力，能看到平常人看不到的咒灵。五条悟现身，表示用户的能力非常罕见，必须尽快掌控。突然，一只强大的咒灵出现，五条悟决定带领用户进行实战指导。紧张刺激的战斗即将展开，用户的选择将影响战斗的走向和自己的命运。\"]",
            "剧情卡介绍": "请你按照python list的形式，将model_response中生成的剧情卡介绍分割并提取出来。无需提取任何标点或者index，比如:[\"午夜的东京，一场突如其来的遭遇，将你带入了一个隐藏于都市之中的神秘世界。面对你所未见过的咒灵，五条悟出现在你面前，揭示了你的特殊命运。在他的指导下，你即将迎接第一场真正的试炼。战斗一触即发，你的选择将决定未来的路径。欢迎来到咒术的战场。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了剧情规划",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "剧情规划是否在50字左右",
                "corresponding_part": "剧情规划",
                "rule": "each_length:[45,55]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "剧情规划是否指明了时间地点场景等",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了剧情卡介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "剧情卡介绍是否在70字以内",
                "corresponding_part": "剧情卡介绍",
                "rule": "each_length:[1,70]",
                "dep": [
                    3
                ],
                "能力项": "50～200字、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一个角色有，小李、小李老婆、面馆老板、面馆老板老婆、客人甲、客人乙的小品剧本，主要剧情是吃面，台词可以加一个谐音梗，谐音梗跟“盐”有关。剧本不要太长，不超过50字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "小品剧本": "#CODE#小品剧本"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了小品剧本",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "给出的剧本中，是否包含小李这一角色",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的剧本是否包含角色小李老婆",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的剧本是否包含角色面馆老板",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的剧本是否包含角色面馆老板老婆",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "给出的剧本是否包含角色客人甲",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "给出的剧本是否包含角色客人乙",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "给出的剧本主要剧情是否是吃面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "给出的剧本是否包含一个与“盐”有关的谐音梗",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "给出的剧本是否不超过50字",
                "corresponding_part": "小品剧本",
                "rule": "each_length:[1,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "按要求将以下歌词改变为《你姓石》。\n\n原歌词:\n'''我姓石，無論何時與你相識我都值\n我姓石，執筆寫詞猶如駿馬在奔馳\n我姓石，心往神馳執筆在憶落筆執\n我姓石，高見遠識人如其名很務實\n\n石，不懼風飛沙\n石，眾人把你誇\n石，眾星守護他\n石，人中才子佳\n石，一路在前行\n石，一生注定贏\n石，風雨皆會平\n石，揚帆再揚名'''\n\n改编主题:夸赞一位设计师团队的管理者，负责任、有耐心，通过自己的努力带领团队变得更好。\n\n要求:字数必须刚好是原歌词的2倍左右，只按中文字符计算；歌词押韵。",
        "corresponding_parts": {
            "歌词": "请你按照python list的格式，抓取模型回复中，给出的所有歌词，要分割，例如: [\"我姓石，無論何時與你相識我都值\", \"我姓石，執筆寫詞猶如駿馬在奔馳\", \"我姓石，心往神馳執筆在憶落筆執\", \"我姓石，高見遠識人如其名很務實\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "改编后的歌词是否夸赞一位设计师团队的管理者",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "改编后的歌词是否提到管理者负责任、有耐心",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "改编后的歌词是否提到管理者通过自己的努力带领团队变得更好",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "改编后的歌词字数是否是原歌词的2倍左右",
                "corresponding_part": "歌词",
                "rule": "total_length:[187,228]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围、倍数",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "改编后的歌词是否押韵",
                "corresponding_part": "歌词",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇9分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇9分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1350, 2700]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "从企业情况、行业现状、北京特殊情况、北京整体资源回收现状、餐盒回收项目实施情况等方面写一个100字以上的关于北京中环创新公司（资源回收企业）的调研报告\n备注:字数只计中文字符",
        "corresponding_parts": {
            "调研报告": "#CODE#调研报告内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了调研报告",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了企业情况的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了行业现状的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了北京特殊情况的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否给出了北京整体资源回收现状的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "是否给出了餐盒回收项目实施情况的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "调研报告是否达到100字",
                "corresponding_part": "调研报告",
                "rule": "each_length:[100, 100000]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "写一个宣传冰淇淋售卖的喊麦文案，要求押韵，100字左右，每句10个字，突出特价团购便宜实惠、五一购买冰淇淋\n备注:字数只计中文字符",
        "corresponding_parts": {
            "分割文案": "请你按照python list的形式，将model_response中的喊麦文案输出，请分割输出，不要带标点符号。例如[\"冰淇淋来一球\",\"五一热浪消\",\"特价团购省\",\"甜蜜满心跳\",\"便宜又实惠\",\"清凉一夏妙\",\"美味难以挡\",\"售卖全城照\",\"快乐伴你笑\",\"冰爽好心情\",\"团购更优惠\",\"甜甜圈里绕\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了宣传冰淇淋售卖的喊麦文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "文案是否押韵",
                "corresponding_part": "分割文案",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "文案是否在100字左右",
                "corresponding_part": "分割文案",
                "rule": "total_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文案是否每句10个字",
                "corresponding_part": "分割文案",
                "rule": "each_length:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "文案是否提到特价团购便宜实惠",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "文案是否提到五一购买冰淇淋",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "现在你是一个上市公司的董事长，需要在安全环保质量工作会议上的做出讲话，你精通中国政府的发言风格，请使用这种风格来润色以下演讲稿。注意，你不可以删减任何原文的信息，只可以在不改变和减少原意的基础上进行优化表达或新增信息。你修改后的文章字数不可以少于100字数。\n你要润色的内容是:2023年12月26日《全国人民代表大会常务委员会执法检查组关于检查中华人民共和国安全生产法实施情况的报告》公开了，报告中严肃指出了“管生产不管安全、企业技术负责人安全管理地位低，现场管理混乱；没有做到安全生产责任制全员全岗位覆盖，安全生产主体责任还未压实到“最后一米”的严重问题”。安全生产法第3条规定“安全生产工作实行管行业必须管安全、管业务必须管安全、管生产经营必须管安全”简称“三管三必须”，安全生产，我们谁也不是旁观者，尤其是各企业各层级的分管领导干部。全员安全生产责任制是安全生产工作的核心，安全生产必须要全员参与，只有构建起全员、全方位、全过程的安全责任体系和落实“三管三必须”法定职责要求，才能解决“认不清、想不到、管不到”的问题，今后我们必须要在全集团牢固树立“安全没有旁观者，全员都是监督员”的观念和文化。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "演讲稿": "#CODE#演讲稿内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "润色后的文章字数是否不少于100字数",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[100,100000]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "将俗语“东施效颦”扩写成一篇故事，用文言文写，100字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#给出的整个故事（包括前言后语）。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否用文言文形式扩写了俗语“东施效颦”为一则故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事字数是否在100字上下",
                "corresponding_part": "故事",
                "rule": "each_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "<角色> 互联网大厂某业务方向的后端技术负责人\n<职责> 将以内内容部分总结成绩效结果\n<要求> 1、40字以内的 2、这段话符合SMART原则3、 不偏离原有内容目标  4、禁止出现\"代码\", \"程序员\"\n<内容>\n通过交易链路稳定性建设，消除疫情后系统隐患，稳定地支撑业务境外复苏策略:针对疫情期间遗留的潜在问题和风险问题，在稳定性建设思路是先从当前问题出发，完善各类问题预防和发现机制，同时对于核心链路梳理潜在风险问题，消除疫情后系统隐患。具体来说:\n1、问题整理及防治，解决链路高频问题:通过凭证大小阈值校验以及凭证空白检测等方式，建设用户凭证可见保障机制，解决高频发生的凭证空白或者不可用CASE。通过建设异常订单监控机制，筛选潜在问题订单并进行原因分析与干预，并针对API开关策略进行细粒度优化，同时解决历史商品库存同步问题。\n2、核心链路风险梳理和治理，解决隐患问题:通过商品库存同步链路优化分为实时和离线任务拉取，解决应商接口异常、性能差异导致的同步延迟以及各类隐患问题；采用Reactor编程模型和Pigeon异步调用，以提高系统吞吐量并应对高并发情况；将开放平台全部线程池替换优化，监控线程池运行状态，防止异常传播，提高异步任务和并发请求处理的效率。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "总结复盘": "#CODE#整篇总结复盘"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否总结了成绩效结果",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "总结是否在40字以内",
                "corresponding_part": "总结复盘",
                "rule": "each_length:[1,40]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "总结是否不偏离原有内容目标",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "总结中是否没有出现\"代码\", \"程序员\"",
                "corresponding_part": "总结复盘",
                "rule": "non_keyword:[\"代码\", \"程序员\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是一名大学老师，请根据人工智能在高校管理工作中的作用研究为题目，以chatgpt,人工智能，高校管理为关键词，并结合以下大纲，写一篇50字左右的文章。\n一、人工智能背景介绍\n1.人工智能发展历程\n2.人工智能的原理和特点\n二、人工智能在高校管理中的应用前景\n1.贯穿高校学生事务管理全过程\n（1）招生与录取智能化\n（2）学生生活与学习跟踪\n（3）毕业生就业数据分析\n2.实现高校教育个性化发展\n（1）个性化学习路径推荐\n（2）课程内容与教学方法的智能匹配\n（3）学生成绩预测与辅导策略\n3.推动档案工作智能化发展\n（1）档案数字化与信息化\n（2）智能检索与档案保护\n（3）档案工作的未来趋势\n4.提质增效，节约时间精力成本\n（1）自动化处理日常管理任务\n（2）预测分析与决策支持\n（3）效率提升的实证数据\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文章": "#CODE#文章内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文章",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了人工智能背景介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 2,
                "question": "给出的人工智能背景介绍中，是否包含“人工智能发展历程”这一要点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的人工智能背景介绍中，是否包含“人工智能的原理和特点”这一要点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否给出了人工智能在高校管理中的应用前景",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 5,
                "question": "给出的“应用前景”部分中，是否包含“贯穿高校学生事务管理全过程”的部分",
                "rule": null,
                "dep": [
                    4
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "给出的贯穿高校学生事务管理全过程中，是否包含“招生与录取智能化”这一要点或相关信息",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "给出的贯穿高校学生事务管理全过程中，是否包含“学生生活与学习跟踪”这一要点或相关信息",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "给出的贯穿高校学生事务管理全过程是否包含”毕业生就业数据分析”这一要点或相关信息",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "给出的应用前景中，是否包含“实现高校教育个性化发展”这一部分",
                "rule": null,
                "dep": [
                    4
                ],
                "被依赖": true
            },
            {
                "point_id": 10,
                "question": "给出的“实现高校教育个性化发展”部分中，是否包含“个性化学习路径推荐”这一要点或相关信息",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "给出的“实现高校教育个性化发展”部分中，是否包含“课程内容与教学方法的智能匹配”这一要点或相关信息",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "给出的“实现高校教育个性化发展”部分中，是否包含“学生成绩预测与辅导策略”这一要点或相关信息",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 13,
                "question": "给出的“应用前景”部分中，是否包含“推动档案工作智能化发展”的部分",
                "rule": null,
                "dep": [
                    4
                ],
                "被依赖": true
            },
            {
                "point_id": 14,
                "question": "给出的“推动档案工作智能化发展”部分中，是否包含“档案数字化与信息化”这一要点或相关信息",
                "rule": null,
                "dep": [
                    13
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 15,
                "question": "给出的“推动档案工作智能化发展”部分中，是否包含“智能检索与档案保护”这一要点或相关信息",
                "rule": null,
                "dep": [
                    13
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 16,
                "question": "给出的“推动档案工作智能化发展”部分中，是否包含“档案工作的未来趋势”这一要点或相关信息",
                "rule": null,
                "dep": [
                    13
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 17,
                "question": "给出的应用前景中，是否包含“提质增效，节约时间精力成本”的相关部分",
                "rule": null,
                "dep": [
                    4
                ],
                "被依赖": true
            },
            {
                "point_id": 18,
                "question": "给出的“提质增效，节约时间精力成本“相关部分中，是否包含“自动化处理日常管理任务”或相关信息",
                "rule": null,
                "dep": [
                    17
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 19,
                "question": "给出的“提质增效，节约时间精力成本“相关部分中，是否包含“预测分析与决策支持”或相关信息",
                "rule": null,
                "dep": [
                    17
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 20,
                "question": "给出的“提质增效，节约时间精力成本“相关部分中，是否包含“效率提升的实证数据”或相关信息",
                "rule": null,
                "dep": [
                    17
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 21,
                "question": "文章是否满足“提到了“chatgpt”，“人工智能”和“高校管理”为关键词，必须全部提到”这一关键信息要求",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 22,
                "question": "文章是否是50字左右",
                "corresponding_part": "文章",
                "rule": "each_length:[45,55]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是一家健康管理集团食品事业部的产品负责人，基于外部市场环境变化和内部人员问题对产品部组织架构做了一次升级调整，你需要写一份沟通稿面向产品部全员进行沟通。沟通的要点主要包括:1、我们面向的市场增速非常高，市场机会巨大，但市场竞争激烈，我们的增长速度远不如市场整体增速，我们必须要解决这个问题，否则我们就要被淘汰。2、我们如何解决目前的问题:全面提升产品竞争力和用户体验、加强增量市场新产品的研发、调整成更敏捷的组织架构适应市场变化。3、我们如何调整组织架构:把现有产品部基于品类划分的架构调整成按照大区划分的架构以适用不同区域用户的差异化需求，并增设创新孵化产品组开发中老年新产品，合并产品包装组和生产衔接组为生产支持组提升协同效率，用户体验组继续保持为二级部门充分保障用户体验。同时因为产品部员工核心管理层比较保守不乐于拥抱变化，需要扭转大家的心态。基于以上内容请你写一份50字的面向全部员工的演讲稿。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "沟通稿": "#CODE#整篇沟通稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了沟通稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了市场环境变化的背景说明",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 2,
                "question": "是否说明了市场增速高、机会大但竞争激烈",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否指出我们的增长速度远不如市场整体增速",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "是否强调必须解决增长速度问题以避免被淘汰",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "是否给出了如何解决目前问题的策略",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "是否提到全面提升产品竞争力和用户体验",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "是否提到加强增量市场新产品的研发",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "是否提到调整成更敏捷的组织架构适应市场变化",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "是否给出了组织架构调整的具体方案",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 10,
                "question": "是否说明了从品类划分调整为大区划分的架构",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "是否提到增设创新孵化产品组开发中老年新产品",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "是否提到合并产品包装组和生产衔接组为生产支持组",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 13,
                "question": "是否说明用户体验组继续保持为二级部门",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 14,
                "question": "是否提到需要扭转员工核心管理层保守的心态",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 15,
                "question": "是否演讲稿字数达到50字",
                "corresponding_part": "沟通稿",
                "rule": "each_length:[50, 10000]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是#美团金融服务平台的主管，你的下属想申请香港优才计划邀请你帮忙写一份50字左右的推荐信。内容需要包括对#美团公司背景介绍，公司主营业务、发展规模及国际影响力；旗下金融服务平台业务介绍；对举荐人工作经历的介绍（强调其数据分析能力及在金融科技工作中的贡献）；说明你与推荐人的关系，表达对其工作能力和发展潜力的认可；最后说明其申请香港优才以及能带给相关的价值。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐信": "#CODE#整封推荐信"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推荐信",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐信是否是50字左右",
                "corresponding_part": "推荐信",
                "rule": "each_length:[45,55]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了#美团公司背景介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了#美团公司主营业务的介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否给出了#美团公司发展规模的介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "是否给出了#美团公司国际影响力的介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了#美团旗下金融服务平台业务的介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 7,
                "question": "是否给出了对举荐人工作经历的介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 8,
                "question": "举荐人工作经历介绍中是否强调了其数据分析能力",
                "rule": null,
                "dep": [
                    7
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "举荐人工作经历介绍中是否强调了其在金融科技工作中的贡献",
                "rule": null,
                "dep": [
                    7
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 10,
                "question": "是否说明了被推荐人与推荐人的关系",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "是否表达了对推荐人工作能力的认可",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "是否表达了对推荐人发展潜力的认可",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 13,
                "question": "是否说明了推荐人申请香港优才计划的原因",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 14,
                "question": "是否说明了推荐人申请香港优才计划能带来的相关价值",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "润色这段话:\n\n1、整体使用4000到5000字总结一下财务相关系统的链路，语言需要专业化，涉及到的系统、数据流、业务过程如果有产品链接的，都注明；\n\n2、优化整体文档的可读性，形成完整的结构化的信息量，使具备参考价值；\n\n3、参考的材料尽可能调研1年内有编辑历史的官方文档，或者有专门团队维护的对外输出文档。避免可信度不足的临时文档或者私人文档；\n\n4、在文档中涉及到数据表时，应标注表名，以便读者更好地理解。同时，对于关键的名词，可以将其归类，并在各个类别内编写名词解释，以帮助读者理解相关概念。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "润色": "#CODE#润色内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了润色后的内容",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "总结字数是否在4000到5000之间",
                "corresponding_part": "润色",
                "rule": "each_length:[4000,5000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一篇关于团队远程管理的文章提纲。从组织架构，管理方式，考核机制，学习提升几方面入手，100字左右。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文章提纲": "#CODE#整篇提纲"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了团队远程管理的文章提纲",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "给出的文章提纲中，是否包含组织架构或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 2,
                "question": "给出的文章提纲中，是否包含远程管理的方法和策略这一要点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 3,
                "question": "给出的文章提纲中，是否包含考核机制（远程团队的绩效评估方法）这一要点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 4,
                "question": "给出的文章提纲中，是否包含“学习提升”（远程团队的学习和发展策略）这一要点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 5,
                "question": "文章提纲是否在100字左右",
                "corresponding_part": "文章提纲",
                "rule": "each_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是一名大学老师，请根据人工智能在高校管理工作中的作用研究为题目，以chatgpt,人工智能，高校管理为关键词，并结合以下大纲，写一篇100字左右的文章。\n一、人工智能背景介绍\n1.人工智能发展历程\n2.人工智能的原理和特点\n二、人工智能在高校管理中的应用前景\n1.贯穿高校学生事务管理全过程\n（1）招生与录取智能化\n（2）学生生活与学习跟踪\n（3）毕业生就业数据分析\n2.实现高校教育个性化发展\n（1）个性化学习路径推荐\n（2）课程内容与教学方法的智能匹配\n（3）学生成绩预测与辅导策略\n3.推动档案工作智能化发展\n（1）档案数字化与信息化\n（2）智能检索与档案保护\n（3）档案工作的未来趋势\n4.提质增效，节约时间精力成本\n（1）自动化处理日常管理任务\n（2）预测分析与决策支持\n（3）效率提升的实证数据\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文章": "#CODE#文章内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文章",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了人工智能背景介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 2,
                "question": "给出的人工智能背景介绍中，是否包含“人工智能发展历程”这一要点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的人工智能背景介绍中，是否包含“人工智能的原理和特点”这一要点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否给出了人工智能在高校管理中的应用前景",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 5,
                "question": "给出的“应用前景”部分中，是否包含“贯穿高校学生事务管理全过程”的部分",
                "rule": null,
                "dep": [
                    4
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "给出的贯穿高校学生事务管理全过程中，是否包含“招生与录取智能化”这一要点或相关信息",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "给出的贯穿高校学生事务管理全过程中，是否包含“学生生活与学习跟踪”这一要点或相关信息",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "给出的贯穿高校学生事务管理全过程是否包含”毕业生就业数据分析”这一要点或相关信息",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "给出的应用前景中，是否包含“实现高校教育个性化发展”这一部分",
                "rule": null,
                "dep": [
                    4
                ],
                "被依赖": true
            },
            {
                "point_id": 10,
                "question": "给出的“实现高校教育个性化发展”部分中，是否包含“个性化学习路径推荐”这一要点或相关信息",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "给出的“实现高校教育个性化发展”部分中，是否包含“课程内容与教学方法的智能匹配”这一要点或相关信息",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "给出的“实现高校教育个性化发展”部分中，是否包含“学生成绩预测与辅导策略”这一要点或相关信息",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 13,
                "question": "给出的“应用前景”部分中，是否包含“推动档案工作智能化发展”的部分",
                "rule": null,
                "dep": [
                    4
                ],
                "被依赖": true
            },
            {
                "point_id": 14,
                "question": "给出的“推动档案工作智能化发展”部分中，是否包含“档案数字化与信息化”这一要点或相关信息",
                "rule": null,
                "dep": [
                    13
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 15,
                "question": "给出的“推动档案工作智能化发展”部分中，是否包含“智能检索与档案保护”这一要点或相关信息",
                "rule": null,
                "dep": [
                    13
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 16,
                "question": "给出的“推动档案工作智能化发展”部分中，是否包含“档案工作的未来趋势”这一要点或相关信息",
                "rule": null,
                "dep": [
                    13
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 17,
                "question": "给出的应用前景中，是否包含“提质增效，节约时间精力成本”的相关部分",
                "rule": null,
                "dep": [
                    4
                ],
                "被依赖": true
            },
            {
                "point_id": 18,
                "question": "给出的“提质增效，节约时间精力成本“相关部分中，是否包含“自动化处理日常管理任务”或相关信息",
                "rule": null,
                "dep": [
                    17
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 19,
                "question": "给出的“提质增效，节约时间精力成本“相关部分中，是否包含“预测分析与决策支持”或相关信息",
                "rule": null,
                "dep": [
                    17
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 20,
                "question": "给出的“提质增效，节约时间精力成本“相关部分中，是否包含“效率提升的实证数据”或相关信息",
                "rule": null,
                "dep": [
                    17
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 21,
                "question": "文章是否满足“提到了“chatgpt”，“人工智能”和“高校管理”为关键词，必须全部提到”这一关键信息要求",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 22,
                "question": "文章是否是100字左右",
                "corresponding_part": "文章",
                "rule": "each_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是一家健康管理集团食品事业部的产品负责人，基于外部市场环境变化和内部人员问题对产品部组织架构做了一次升级调整，你需要写一份沟通稿面向产品部全员进行沟通。沟通的要点主要包括:1、我们面向的市场增速非常高，市场机会巨大，但市场竞争激烈，我们的增长速度远不如市场整体增速，我们必须要解决这个问题，否则我们就要被淘汰。2、我们如何解决目前的问题:全面提升产品竞争力和用户体验、加强增量市场新产品的研发、调整成更敏捷的组织架构适应市场变化。3、我们如何调整组织架构:把现有产品部基于品类划分的架构调整成按照大区划分的架构以适用不同区域用户的差异化需求，并增设创新孵化产品组开发中老年新产品，合并产品包装组和生产衔接组为生产支持组提升协同效率，用户体验组继续保持为二级部门充分保障用户体验。同时因为产品部员工核心管理层比较保守不乐于拥抱变化，需要扭转大家的心态。基于以上内容请你写一份100字的面向全部员工的演讲稿。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "沟通稿": "#CODE#整篇沟通稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了沟通稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了市场环境变化的背景说明",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 2,
                "question": "是否说明了市场增速高、机会大但竞争激烈",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否指出我们的增长速度远不如市场整体增速",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "是否强调必须解决增长速度问题以避免被淘汰",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "是否给出了如何解决目前问题的策略",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "是否提到全面提升产品竞争力和用户体验",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "是否提到加强增量市场新产品的研发",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "是否提到调整成更敏捷的组织架构适应市场变化",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "是否给出了组织架构调整的具体方案",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 10,
                "question": "是否说明了从品类划分调整为大区划分的架构",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "是否提到增设创新孵化产品组开发中老年新产品",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "是否提到合并产品包装组和生产衔接组为生产支持组",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 13,
                "question": "是否说明用户体验组继续保持为二级部门",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 14,
                "question": "是否提到需要扭转员工核心管理层保守的心态",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 15,
                "question": "是否演讲稿字数达到100字",
                "corresponding_part": "沟通稿",
                "rule": "each_length:[100, 10000]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一篇以“招募案例”为主题的宣传对内推文，要求如下:\n1.内容结构为:①前言（我们为什么要招募案例）、②案例规则（我们要招募什么样的案例、招募启动时间等规则）、③案例被成功选中后可以获得什么？（物质激励、荣誉激励等）\n2.案例规则:①需要是重点品类成交的案例（正餐、火锅、烧烤、小吃快餐、饮品、烘焙均可），可细分至2级品类，例如正餐下的东北菜、川菜等。②案例主要介绍销售人员是如何和这些品类的商家成单的（如何成功售卖XX收银系统）③案例要介绍客户在合作我们的XX收银系统后，我们提供了哪些解决方案，从而帮助客户获得了哪些成功？\n3.推文字数不少于100字\n\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推文": "#CODE#整篇推文"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了一篇推文",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了前言",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "前言部分是否说明了招募案例的原因",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了案例规则",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "案例规则部分是否说明了要招募什么样的案例",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "案例规则部分是否说明了招募启动时间等规则",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "案例规则是否需要是重点品类成交的案例",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "案例规则是否主要介绍销售人员如何和这些品类的商家成单",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "案例规则是否介绍客户在合作我们的XX收银系统后，我们提供了哪些解决方案",
                "rule": null,
                "dep": [
                    3
                ],
                "被依赖": true
            },
            {
                "point_id": 9,
                "question": "案例规则是否介绍我们提供的解决方案帮助客户获得了哪些成功",
                "rule": null,
                "dep": [
                    8
                ],
                "被依赖": true
            },
            {
                "point_id": 10,
                "question": "是否给出了案例被成功选中后可以获得什么的",
                "rule": null,
                "dep": [
                    9
                ],
                "被依赖": true
            },
            {
                "point_id": 11,
                "question": "案例被成功选中后可以获得什么的部分是否包括物质激励",
                "rule": null,
                "dep": [
                    10
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "案例被成功选中后可以获得什么的部分是否包括荣誉激励",
                "rule": null,
                "dep": [
                    10
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 13,
                "question": "推文字数是否不少于100字",
                "corresponding_part": "推文",
                "rule": "each_length:[100,100000]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "以“人民的金融:品牌是护城河和生产力”为题，分品牌必要性阐述、券商同业品牌发展情况，措施及建议三个部分，完成一篇50字的调研报告。内容需要包括品牌宣传、品牌保护、舆情管理、投资者反诈等方面，把重点放在每一段的第一句话。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "调研报告": "#CODE#调研报告内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了调研报告",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了品牌必要性阐述",
                "rule": null,
                "dep": [],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 2,
                "question": "品牌必要性阐述部分是否包括品牌保护",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "品牌必要性阐述部分是否包括舆情管理",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "品牌必要性阐述部分是否包括投资者反诈",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "品牌必要性阐述部分是否每段的重点放在第一句话",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了券商同业品牌发展情况",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 7,
                "question": "券商同业品牌发展情况部分是否包括品牌宣传",
                "rule": null,
                "dep": [
                    6
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "券商同业品牌发展情况部分是否包括品牌保护",
                "rule": null,
                "dep": [
                    6
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "券商同业品牌发展情况部分是否包括舆情管理",
                "rule": null,
                "dep": [
                    6
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "券商同业品牌发展情况部分是否包括投资者反诈",
                "rule": null,
                "dep": [
                    6
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "券商同业品牌发展情况部分是否每段的重点放在第一句话",
                "rule": null,
                "dep": [
                    6
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "是否给出了措施及建议",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 13,
                "question": "措施及建议部分是否包括品牌宣传",
                "rule": null,
                "dep": [
                    12
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 14,
                "question": "措施及建议部分是否包括品牌保护",
                "rule": null,
                "dep": [
                    12
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 15,
                "question": "措施及建议部分是否包括舆情管理",
                "rule": null,
                "dep": [
                    12
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 16,
                "question": "措施及建议部分是否包括投资者反诈",
                "rule": null,
                "dep": [
                    12
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 17,
                "question": "措施及建议部分是否每段的重点放在第一句话",
                "rule": null,
                "dep": [
                    12
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 18,
                "question": "整篇调研报告是否达到50字左右",
                "corresponding_part": "调研报告",
                "rule": "each_length:[45,55]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "润色这段话:\n\n1、整体使用100到150字总结一下财务相关系统的链路，语言需要专业化，涉及到的系统、数据流、业务过程如果有产品链接的，都注明；\n\n2、优化整体文档的可读性，形成完整的结构化的信息量，使具备参考价值；\n\n3、参考的材料尽可能调研1年内有编辑历史的官方文档，或者有专门团队维护的对外输出文档。避免可信度不足的临时文档或者私人文档；\n\n4、在文档中涉及到数据表时，应标注表名，以便读者更好地理解。同时，对于关键的名词，可以将其归类，并在各个类别内编写名词解释，以帮助读者理解相关概念。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "润色": "#CODE#润色内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了润色后的内容",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "总结字数是否在100到150之间",
                "corresponding_part": "润色",
                "rule": "each_length:[100,150]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "清理系统垃圾问题一直困扰着普通用户，我想针对这个问题写一份调研报告，主要是想了解普通用户在什么场景下会遇到这个问题；对于他们来说，简单的清理方法是什么；还想有没有可能设计一款傻瓜软件惠及大众。帮我写一份这样的调研报告，字数在400字以内。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "调研报告": "#CODE#整篇报告"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了调研报告",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "调研报告是否在400字以内",
                "corresponding_part": "调研报告",
                "rule": "each_length:[1,400]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的调研报告中，是否包含“普通用户在什么场景下会遇到清理系统垃圾问题”这一要点或与其相关的信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一篇直播营销产品的述职报告。要求4000字。\n\n第一部分:23年工作总结。23年团队主要目标是基建完善度，基础功能达到易用水平，我个人的工作主要目标是提升秒杀、抽奖玩法的易用性。要求写出如何提升的，策略是什么。最终的结果如何。需要从目标、策略、举措来写，且举措中要通过star原则来呈现。\n\n第二部分:24年工作规划。24年团队主要目标是商家渗透率提升20%，我负责的营销玩法，从好用性、商家牵引、提效等方面，需要分别做哪些工作。\n第三部分:个人成长与规划，围绕美团价值观来写。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "述职报告": "#CODE#整篇报告"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写出了23年工作总结",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否满足4000字要求",
                "corresponding_part": "述职报告",
                "rule": "each_length:[4000,100000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的23年工作总结中，是否包含“基建完善度，基础功能达到易用水平”这一团队工作主要目标",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "给出的23年工作总结中，是否包含“提升秒杀、抽奖玩法的易用性”这一个人工作主要目标",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的23年工作总结中，是否有如何提升秒杀、抽奖玩法的易用性",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "给出的23年工作总结中，是否有提升秒杀、抽奖玩法易用性的策略",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "给出的23年工作总结中，是否有提升秒杀、抽奖玩法易用性的最终结果",
                "rule": null,
                "dep": [
                    2
                ],
                "被依赖": true
            },
            {
                "point_id": 7,
                "question": "23年工作总结是否从目标、策略、举措来写",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "23年工作总结的举措部分是否通过STAR原则来呈现",
                "rule": null,
                "dep": [
                    6
                ],
                "被依赖": true
            },
            {
                "point_id": 9,
                "question": "是否写出了24年工作规划",
                "rule": null,
                "dep": [],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "给出的24年工作规划中，是否包含“团队主要目标是商家渗透率提升20%”这一点或相关的信息",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "给出的24年工作规划中，是否包含“负责的营销玩法从好用性方面需要做的工作”这一点或相关的信息",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "给出的24年工作规划中，是否包含“负责的营销玩法从商家牵引方面需要做的工作”这一点或相关的信息",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 13,
                "question": "给出的24年工作规划中，是否包含“负责的营销玩法从提效方面需要做的工作”这一点或相关的信息",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 14,
                "question": "是否写出了个人成长与规划",
                "rule": null,
                "dep": [],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "现在你是一个上市公司的董事长，需要在安全环保质量工作会议上的做出讲话，你精通中国政府的发言风格，请使用这种风格来润色以下演讲稿。注意，你不可以删减任何原文的信息，只可以在不改变和减少原意的基础上进行优化表达或新增信息。你修改后的文章字数不可以少于400字数。\n你要润色的内容是:2023年12月26日《全国人民代表大会常务委员会执法检查组关于检查中华人民共和国安全生产法实施情况的报告》公开了，报告中严肃指出了“管生产不管安全、企业技术负责人安全管理地位低，现场管理混乱；没有做到安全生产责任制全员全岗位覆盖，安全生产主体责任还未压实到“最后一米”的严重问题”。安全生产法第3条规定“安全生产工作实行管行业必须管安全、管业务必须管安全、管生产经营必须管安全”简称“三管三必须”，安全生产，我们谁也不是旁观者，尤其是各企业各层级的分管领导干部。全员安全生产责任制是安全生产工作的核心，安全生产必须要全员参与，只有构建起全员、全方位、全过程的安全责任体系和落实“三管三必须”法定职责要求，才能解决“认不清、想不到、管不到”的问题，今后我们必须要在全集团牢固树立“安全没有旁观者，全员都是监督员”的观念和文化。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "演讲稿": "#CODE#演讲稿内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "润色后的文章字数是否不少于400字数",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[400,100000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "以“既有住宅加装电梯后的评估方式”为主题，结合国内既有住宅加装电梯的现状，从研究背景、研究方法、研究内容、研究结果为我写一篇4000字的研究生研究进展报告\n备注:字数只计中文字符",
        "corresponding_parts": {
            "报告": "#CODE#整篇报告"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了研究背景",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "研究背景是否结合了国内既有住宅加装电梯的现状",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了研究方法",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "研究方法是否适用于既有住宅加装电梯的评估",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否给出了研究内容",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 5,
                "question": "研究内容是否详细描述了加装电梯后的评估方式",
                "rule": null,
                "dep": [
                    4
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了研究结果",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 7,
                "question": "研究结果是否反映了加装电梯后的实际效果和影响",
                "rule": null,
                "dep": [
                    6
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "报告是否在4000字左右",
                "corresponding_part": "报告",
                "rule": "each_length:[3600,4400]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是一个专业的美食品鉴官，你需要为菜品:上海小笼包，设计出一条推荐理由。\n要求是对菜品的描述要具体，要尽可能地调动感官体验，你可以从菜品的食材、外观、口味、口感、触感、份量等多个角度来描述。比如描述一个糖油饼，可以这么说:“糖油饼炸得金黄，外面酥酥脆脆，里面糯叽叽”。这样说不好:“糖油饼很美味，太好吃了” ，因为这样说太概括了。字数控制4000字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐理由": "#CODE#推荐理由内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推荐理由",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐理由是否包含对菜品上海小笼包的具体描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推荐理由是否从菜品的食材、外观、口味、口感、触感、份量等多个角度进行描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推荐理由字数是否控制在4000字以内",
                "corresponding_part": "推荐理由",
                "rule": "each_length:[1,4000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是一名大学老师，请根据人工智能在高校管理工作中的作用研究为题目，以chatgpt,人工智能，高校管理为关键词，并结合以下大纲，写一篇400字左右的文章。\n一、人工智能背景介绍\n1.人工智能发展历程\n2.人工智能的原理和特点\n二、人工智能在高校管理中的应用前景\n1.贯穿高校学生事务管理全过程\n（1）招生与录取智能化\n（2）学生生活与学习跟踪\n（3）毕业生就业数据分析\n2.实现高校教育个性化发展\n（1）个性化学习路径推荐\n（2）课程内容与教学方法的智能匹配\n（3）学生成绩预测与辅导策略\n3.推动档案工作智能化发展\n（1）档案数字化与信息化\n（2）智能检索与档案保护\n（3）档案工作的未来趋势\n4.提质增效，节约时间精力成本\n（1）自动化处理日常管理任务\n（2）预测分析与决策支持\n（3）效率提升的实证数据\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文章": "#CODE#文章内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文章",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了人工智能背景介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 2,
                "question": "给出的人工智能背景介绍中，是否包含“人工智能发展历程”这一要点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的人工智能背景介绍中，是否包含“人工智能的原理和特点”这一要点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否给出了人工智能在高校管理中的应用前景",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 5,
                "question": "给出的“应用前景”部分中，是否包含“贯穿高校学生事务管理全过程”的部分",
                "rule": null,
                "dep": [
                    4
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "给出的贯穿高校学生事务管理全过程中，是否包含“招生与录取智能化”这一要点或相关信息",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "给出的贯穿高校学生事务管理全过程中，是否包含“学生生活与学习跟踪”这一要点或相关信息",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "给出的贯穿高校学生事务管理全过程是否包含”毕业生就业数据分析”这一要点或相关信息",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "给出的应用前景中，是否包含“实现高校教育个性化发展”这一部分",
                "rule": null,
                "dep": [
                    4
                ],
                "被依赖": true
            },
            {
                "point_id": 10,
                "question": "给出的“实现高校教育个性化发展”部分中，是否包含“个性化学习路径推荐”这一要点或相关信息",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "给出的“实现高校教育个性化发展”部分中，是否包含“课程内容与教学方法的智能匹配”这一要点或相关信息",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "给出的“实现高校教育个性化发展”部分中，是否包含“学生成绩预测与辅导策略”这一要点或相关信息",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 13,
                "question": "给出的“应用前景”部分中，是否包含“推动档案工作智能化发展”的部分",
                "rule": null,
                "dep": [
                    4
                ],
                "被依赖": true
            },
            {
                "point_id": 14,
                "question": "给出的“推动档案工作智能化发展”部分中，是否包含“档案数字化与信息化”这一要点或相关信息",
                "rule": null,
                "dep": [
                    13
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 15,
                "question": "给出的“推动档案工作智能化发展”部分中，是否包含“智能检索与档案保护”这一要点或相关信息",
                "rule": null,
                "dep": [
                    13
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 16,
                "question": "给出的“推动档案工作智能化发展”部分中，是否包含“档案工作的未来趋势”这一要点或相关信息",
                "rule": null,
                "dep": [
                    13
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 17,
                "question": "给出的应用前景中，是否包含“提质增效，节约时间精力成本”的相关部分",
                "rule": null,
                "dep": [
                    4
                ],
                "被依赖": true
            },
            {
                "point_id": 18,
                "question": "给出的“提质增效，节约时间精力成本“相关部分中，是否包含“自动化处理日常管理任务”或相关信息",
                "rule": null,
                "dep": [
                    17
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 19,
                "question": "给出的“提质增效，节约时间精力成本“相关部分中，是否包含“预测分析与决策支持”或相关信息",
                "rule": null,
                "dep": [
                    17
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 20,
                "question": "给出的“提质增效，节约时间精力成本“相关部分中，是否包含“效率提升的实证数据”或相关信息",
                "rule": null,
                "dep": [
                    17
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 21,
                "question": "文章是否满足“提到了“chatgpt”，“人工智能”和“高校管理”为关键词，必须全部提到”这一关键信息要求",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 22,
                "question": "文章是否是400字左右",
                "corresponding_part": "文章",
                "rule": "each_length:[360,440]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你好，帮我写一段“盆满钵满奖”的推荐理由，有关于挣钱最多的，需要搞笑风格，押韵的。400字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐理由": "请你按照python list的格式，抓取模型回复中，给出的押韵搞笑推荐理由的内容，按照标点符号分开输出，例如: [\"盆满钵满奖，不只是钱满满，更是笑声和幸福，永远在线！\", \"在挣钱的道路上，他/她是个狂飙的赛车手，每次收入进账，就像打了个大大的满贯球。\", \"他/她的钱堆积如山，比豆芽还要快速发芽，账户的数字跳跃，像小兔子一样欢快地蹦跳。\", \"他/她的金库，比蜜蜂的蜂巢还要甜，每天的工资，像是不停下雨的天。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推荐理由",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐理由是否关于挣钱最多",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推荐理由是否押韵",
                "corresponding_part": "推荐理由",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推荐理由是否为400字左右",
                "corresponding_part": "推荐理由",
                "rule": "total_length:[360,440]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我们公司打算推出新年主题的相关周边玩具，人物包括:福神、文曲星、财神、寿星、吉祥神。现在我需要你帮我写400个字的海报广告词，要包含春节元素，突出角色数量，并解释这个广告词的设计思路。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "海报广告词": "请你按照python list的形式，将model_response中生成的海报广告词分割并提取出来。只需要提取广告词，不需要提取解释，比如:[\"五星报喜迎新春\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了海报广告词",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了400个字的海报广告词",
                "corresponding_part": "海报广告词",
                "rule": "each_length:[400,400]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的广告词是否包含春节元素",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否解释了广告词的设计思路",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一篇从河北到北京摩旅的笔记，大概500字，要有风景的描述，路线的分享，以及费用，贴地气一点  不要用太高傲的词汇\n备注:字数只计中文字符",
        "corresponding_parts": {
            "笔记": "#CODE#笔记内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一篇笔记",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "笔记是否大概500字",
                "corresponding_part": "笔记",
                "rule": "each_length:[450,550]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的笔记中，是否包含风景的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的笔记中，是否包含路线的分享",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的笔记中，是否包含费用的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "带狗出去遛弯，结果它吃屎了，我把它骂了一顿。写一段打油诗，4000字，要押韵\n备注:字数只计中文字符",
        "corresponding_parts": {
            "打油诗": "请你按照python list的格式，抓取模型回复中，给出的打油诗，要分割，例如: [\"遛狗街头乐悠悠\", \"低头一啄非骨肉\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一段诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "打油诗是否描述了带狗出去遛弯的情景",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "打油诗是否描述了狗吃屎的情景",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "打油诗是否描述了对狗进行责骂的情景",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "打油诗是否为4000字",
                "corresponding_part": "打油诗",
                "rule": "total_length:[4000,4000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "打油诗是否押韵",
                "corresponding_part": "打油诗",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是美容行业【半亩花田】的商户，你想要创作可以激发用户探店的短视频，目标受众是精致生活的都市白领，30-35岁，追求身体放松和提升皮肤质感，请提供1个短视频纯描述旁白的脚本。 要求如下: \n\n1.受众痛点: 长期坐着，肩部经常酸痛，经常加班，皮肤出油且不够白净 ，不知道用什么方式解决？\n\n3.商户服务范围:皮肤深层清洁、眼部护理、按摩SPA \n\n4.商户亮点:服务热情，无推销，科技美肤，环境优雅，大牌补妆，高端美肤用品，一客一室 \n\n5.脚本按照PREP结构:【观点】+【理由】+【例子】+【重复观点】结构来写, \n\n6.文案不要啰嗦重复，字数500字左右 ，文字表达有心灵鸡汤感，如“每一个女人都要好好爱自己，对自己好，一切才好”\n备注:字数只计中文字符",
        "corresponding_parts": {
            "脚本": "#CODE#脚本内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了脚本",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "给出的脚本中，是否包含PERP中的“观点”",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的脚本中，是否包含PERP结构中的“理由”",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的脚本中，是否包含PERP结构中的“例子”",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的脚本中，是否包含PERP结构中的“重复观点“",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "脚本是否字数在500字左右",
                "corresponding_part": "脚本",
                "rule": "each_length:[450,550]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "脚本是否针对目标受众的痛点: 长期坐着，肩部经常酸痛，经常加班，皮肤出油且不够白净 ",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "脚本是否提及商户的所有服务范围: 皮肤深层清洁、眼部护理、按摩SPA",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "脚本是否提及商户的所有亮点: 服务热情，无推销，科技美肤，环境优雅，大牌补妆，高端美肤用品，一客一室",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一篇从黑龙江到北京摩旅的笔记，大概4000字，要有风景的描述，路线的分享，以及费用，贴地气一点  不要用太高傲的词汇\n备注:字数只计中文字符",
        "corresponding_parts": {
            "笔记": "#CODE#笔记内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一篇笔记",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "笔记是否大概4000字",
                "corresponding_part": "笔记",
                "rule": "each_length:[3600,4400]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的笔记中，是否包含风景的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的笔记中，是否包含路线的分享",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的笔记中，是否包含费用的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "我是悦食事业部产品团队负责人，我在准备一场全员沟通，沟通主题是升级品牌、升级策略、升级团队。升级品牌为健康生活小帮手；策略上一方面通过存量产品提升市场份额，另一方面探索中老年市场新产品；团队上由中央管控的产品和销售体系，调整为把产品和销售策略的决策权下放到各个区域。帮我写一份4000字的演讲稿。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "演讲稿": "#CODE#给出的整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "演讲稿是否提到升级品牌",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "演讲稿是否提到升级策略",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "演讲稿是否提到升级团队",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "演讲稿是否详细描述了品牌升级为健康生活小帮手",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否详细描述了策略升级，包括通过存量产品提升市场份额和探索中老年市场新产品",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否详细描述了团队升级，从中央管控的产品和销售体系调整为区域决策权下放",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否达到4000字",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[4000,100000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一篇从黑龙江到北京摩旅的笔记，大概500字，要有风景的描述，路线的分享，以及费用，贴地气一点  不要用太高傲的词汇\n备注:字数只计中文字符",
        "corresponding_parts": {
            "笔记": "#CODE#笔记内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一篇笔记",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "笔记是否大概500字",
                "corresponding_part": "笔记",
                "rule": "each_length:[450,550]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的笔记中，是否包含风景的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的笔记中，是否包含路线的分享",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的笔记中，是否包含费用的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "吹灭别人的灯，并不会让自己更加光明；阻挡别人的路，也不会让自己行得更远。\n“一花独放不是春，百花齐放春满园。”如果世界上只有一种花朵，就算这种花朵再美，那也是单调的。\n以上两则材料出自习近平总书记的讲话，以生动形象的语言说出了普遍的道理。请据此写一篇文章，体现你的认识与思考。\n要求:选准角度，确定立意，明确文体，自拟标题；不要套作，不得抄袭；不得泄露个人信息；不少于400字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "作文": "#CODE#整篇作文"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否根据材料写了一篇文章",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "文章是否自拟了标题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "文章是否没有泄露个人信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文章字数是否不少于400字",
                "corresponding_part": "作文",
                "rule": "each_length:[400,100000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "“我在诺丁汉的一家投行做过三年分析员，后面去了伦敦的另一家跨国投行，担任了五年基金经理。2020年开始自己创业。”把这段话改为中英文夹杂的工作经历介绍，要求工作地点和职位是英文，工作时长必须是中文；中文和英文的比例为2 : 3，总字数控制在300字以内。\n备注:中文数量为中文字符数，英文数量为单词数",
        "corresponding_parts": {
            "工作经历": "#CODE#工作经历内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了中英文夹杂的工作经历介绍",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "工作地点和职位是否是英文",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "工作时长是否是中文",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "中文和英文的比例是否为2 : 3",
                "corresponding_part": "工作经历",
                "rule": "Chinese_English_ratio:[2,3]",
                "dep": [
                    0
                ],
                "能力项": "倍数、中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "总字数是否控制在300字以内",
                "corresponding_part": "工作经历",
                "rule": "count_mixed_language_words:[1,300]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一篇从上海到广州摩旅的笔记，大概500字，要有风景的描述，路线的分享，以及费用，贴地气一点  不要用太高傲的词汇\n备注:字数只计中文字符",
        "corresponding_parts": {
            "笔记": "#CODE#笔记内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一篇笔记",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "笔记是否大概500字",
                "corresponding_part": "笔记",
                "rule": "each_length:[450,550]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的笔记中，是否包含风景的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的笔记中，是否包含路线的分享",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的笔记中，是否包含费用的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "生成500字以上直播文案:要求:1、门店名称:荣记潮汕牛肉火锅。2、门店特色锅底:潮汕原汤锅。3、特色手切涮肉:吊龙，匙仁，匙柄，嫩牛肉。4、特色菜品:手打牛肉丸、潮汕肉饼、黄金小馒头\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文案": "#CODE#文案内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "给出的文案中，是否包含“门店名称:荣记潮汕牛肉火锅”这一要点或相关信息",
                "corresponding_part": "文案",
                "rule": "keyword:[\"荣记潮汕牛肉火锅\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的文案中，是否包含门店“特色锅底:潮汕原汤锅”这一要点或相关信息",
                "corresponding_part": "文案",
                "rule": "keyword:[\"潮汕原汤锅\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的文案中，是否包含“特色手切涮肉:吊龙，匙仁，匙柄，嫩牛肉”这一要点或相关信息",
                "corresponding_part": "文案",
                "rule": "keyword:[\"吊龙\",\"匙仁\",\"匙柄\",\"嫩牛肉\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的文案中，是否包含“特色菜品:手打牛肉丸、潮汕肉饼、黄金小馒头”这一要点或相关信息",
                "corresponding_part": "文案",
                "rule": "keyword:[\"手打牛肉丸\",\"潮汕肉饼\",\"黄金小馒头\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "是否生成了500字以上的直播文案",
                "corresponding_part": "文案",
                "rule": "each_length:[500,100000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "丛林场景指情况多变的需要寻找出路的开放性问题，高速场景指确定性比较强需要进行强执行解决的问题。基于上述理论结合美团的新闻，扩写400字的论述文。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "论述": "#CODE#整篇论述文"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了一篇论述文",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了丛林场景的定义",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "丛林场景定义是否说明了情况多变和需要寻找出路的特性",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了高速场景的定义",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "高速场景定义是否说明了确定性强和需要强执行的特性",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "是否结合了美团的新闻进行论述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "论述是否扩展到400字",
                "corresponding_part": "论述",
                "rule": "each_length:[400, 100000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "将俗语“画蛇添足”扩写成一篇故事，用文言文写，200字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#给出的整个故事（包括前言后语）。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否用文言文形式扩写了俗语“画蛇添足”为一则故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事字数是否在200字上下",
                "corresponding_part": "故事",
                "rule": "each_length:[180,220]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一篇从河北到北京摩旅的笔记，大概4000字，要有风景的描述，路线的分享，以及费用，贴地气一点  不要用太高傲的词汇\n备注:字数只计中文字符",
        "corresponding_parts": {
            "笔记": "#CODE#笔记内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一篇笔记",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "笔记是否大概4000字",
                "corresponding_part": "笔记",
                "rule": "each_length:[3600,4400]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的笔记中，是否包含风景的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的笔记中，是否包含路线的分享",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的笔记中，是否包含费用的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是#美团金融服务平台的商业分析部的主管，你的下属想申请香港优才计划邀请你帮忙写一份4000字左右的推荐信。内容包括四部分，首先是对#美团公司及其金融服务业务的介绍（突出公司影响力）；其次是对举荐人工作经历的介绍（强调其在数据分析&金融信贷&资金和支付业务从0-1的工作贡献）；第三说明你与推荐人的关系，表达对其工作能力和发展潜力的认可；最后说明其申请香港优才以及能带给相关的价值。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐信": "#CODE#推荐信内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了#美团公司及其金融服务业务的介绍",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "介绍是否突出#美团公司影响力",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了举荐人工作经历的介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "举荐人工作经历的介绍是否强调其在数据分析、金融信贷、资金和支付业务从0-1的工作贡献",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否说明了被推荐人与推荐人的关系",
                "rule": null,
                "dep": [
                    2
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 5,
                "question": "是否表达了对推荐人工作能力和发展潜力的认可",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否说明了推荐人申请香港优才计划的原因",
                "rule": null,
                "dep": [
                    2
                ],
                "被依赖": true
            },
            {
                "point_id": 7,
                "question": "是否说明了推荐人申请香港优才计划能带来的相关价值",
                "rule": null,
                "dep": [
                    6
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "推荐信是否在4000字左右",
                "corresponding_part": "推荐信",
                "rule": "each_length:[3600,4400]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "我需要招聘一位HR，岗位归属于人力资源，请帮我写一段岗位内推话术。要求是善用emoij表情，文风模仿小红书，字数不少于400字，必须提到HR和人力资源两个关键词。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文案": "#CODE#整篇招聘文案"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "文案是否用了emoji表情",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "文案字数是否不少于400字",
                "corresponding_part": "文案",
                "rule": "each_length:[400,100000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文案是否提到了岗位HR",
                "corresponding_part": "文案",
                "rule": "keyword:[\"HR\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "文案是否提到了部门人力资源",
                "corresponding_part": "文案",
                "rule": "keyword:[\"人力资源\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "按要求将以下歌词改变为《你姓石》。\n\n原歌词:\n'''我姓石，無論何時與你相識我都值\n我姓石，執筆寫詞猶如駿馬在奔馳\n我姓石，心往神馳執筆在憶落筆執\n我姓石，高見遠識人如其名很務實\n\n石，不懼風飛沙\n石，眾人把你誇\n石，眾星守護他\n石，人中才子佳\n石，一路在前行\n石，一生注定贏\n石，風雨皆會平\n石，揚帆再揚名'''\n\n改编主题:夸赞一位设计师团队的管理者，负责任、有耐心，通过自己的努力带领团队变得更好。\n\n要求:字数500字；歌词押韵。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "歌词": "请你按照python list的格式，抓取模型回复中，给出的所有歌词，要分割，例如: [\"我姓石，無論何時與你相識我都值\", \"我姓石，執筆寫詞猶如駿馬在奔馳\", \"我姓石，心往神馳執筆在憶落筆執\", \"我姓石，高見遠識人如其名很務實\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "改编后的歌词是否夸赞一位设计师团队的管理者",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "改编后的歌词是否体现管理者负责任、有耐心",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "改编后的歌词是否体现管理者通过自己的努力带领团队变得更好",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "改编后的歌词字数是否满足500字",
                "corresponding_part": "歌词",
                "rule": "total_length:[500,500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "改编后的歌词是否押韵",
                "corresponding_part": "歌词",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "我需要招聘一位HR，岗位归属于人力资源，请帮我写一段岗位内推话术。要求是善用emoij表情，文风模仿小红书，字数不少于500字，必须提到HR和人力资源两个关键词。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文案": "#CODE#整篇招聘文案"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "文案是否用了emoji表情",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "文案字数是否不少于500字",
                "corresponding_part": "文案",
                "rule": "each_length:[500,100000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文案是否提到了岗位HR",
                "corresponding_part": "文案",
                "rule": "keyword:[\"HR\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "文案是否提到了部门人力资源",
                "corresponding_part": "文案",
                "rule": "keyword:[\"人力资源\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "我是一名测试工程师，未来想做鸿蒙系统的测试，现在想做规划，主要是补齐在鸿蒙系统上的测试能力，如何写目标描述和目标为什么重要，字数在4000字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "所有论述": "#CODE#整篇论述"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了目标论述",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "论述是否在4000字左右",
                "corresponding_part": "所有论述",
                "rule": "each_length:[3600,4400]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "目标描述是否具体针对鸿蒙系统的测试能力",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了目标为什么重要的说明",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是#美团金融服务平台的主管，你的下属想申请香港优才计划邀请你帮忙写一份400字左右的推荐信。内容需要包括对#美团公司背景介绍，公司主营业务、发展规模及国际影响力；旗下金融服务平台业务介绍；对举荐人工作经历的介绍（强调其数据分析能力及在金融科技工作中的贡献）；说明你与推荐人的关系，表达对其工作能力和发展潜力的认可；最后说明其申请香港优才以及能带给相关的价值。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐信": "#CODE#整封推荐信"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推荐信",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐信是否是400字左右",
                "corresponding_part": "推荐信",
                "rule": "each_length:[360,440]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了#美团公司背景介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了#美团公司主营业务的介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否给出了#美团公司发展规模的介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "是否给出了#美团公司国际影响力的介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了#美团旗下金融服务平台业务的介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 7,
                "question": "是否给出了对举荐人工作经历的介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 8,
                "question": "举荐人工作经历介绍中是否强调了其数据分析能力",
                "rule": null,
                "dep": [
                    7
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "举荐人工作经历介绍中是否强调了其在金融科技工作中的贡献",
                "rule": null,
                "dep": [
                    7
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 10,
                "question": "是否说明了被推荐人与推荐人的关系",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "是否表达了对推荐人工作能力的认可",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "是否表达了对推荐人发展潜力的认可",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 13,
                "question": "是否说明了推荐人申请香港优才计划的原因",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 14,
                "question": "是否说明了推荐人申请香港优才计划能带来的相关价值",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "请你在以下这段话的基础上，帮我写一个有吸引力的剧情卡，剧情卡介绍: 剧情卡介绍是给用户展示的，可以简单介绍开始部分剧情，但是不能完全剧透（保留用户兴趣和悬念），最好有一定悬念的结尾，这样能吸引用户参与兴趣，类似剧情简介。要求500字以内。文本:新婚之夜，总裁得知千金小姐在联姻之前已有男朋友，但总裁对千金小姐一见钟情，容不得千金小姐心里有别的男人。此刻总裁双眼通红，带着一丝酒气，满身怒火将千金小姐压在身下，妄图用孩子留下她……\n备注:字数只计中文字符",
        "corresponding_parts": {
            "剧情卡介绍": "#CODE#剧情卡介绍"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了剧情卡介绍",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "剧情卡介绍是否在500字以内",
                "corresponding_part": "剧情卡介绍",
                "rule": "each_length:[1,500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "请为[国货之光夸迪次抛战痘]写一条[5星好评]，要求体现[功能性强，温和不刺激]的特点。注意需要强调自身使用感受，内容超过500字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "好评": "#CODE#好评内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了好评",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "好评内容是否体现了功能性强的特点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "好评内容是否体现了温和不刺激的特点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "好评内容是否强调了自身使用感受",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "好评内容是否超过500字",
                "corresponding_part": "好评",
                "rule": "each_length:[500,100000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "根据要求写文案:体现出企业微信联系人“美团外卖推广小助手”进行了形象焕新，跟商家做自我介绍，并且征集商家在推广上的痛点和需求。要求500字以上，口语化、生动有趣、有网感:\n\n各位老板好，我是美团外卖推广小助手，你们的推广好帮手！\n\n就在老板们忙着把生意越做越红火的时候，我也在悄悄进步。现在的我，服务更贴心，更懂大家的需求。\n\n很多商家都喜欢在我这查询账户余额和充值，因为更方便，节省时间。\n\n要是曝光出问题，我会及时提醒商家，帮他减少订单流失。\n\n我经常分享优惠券福利和活动信息，给商家惊喜。我还会推送许多实用的推广知识，比如点金定向出价的短视频。\n\n接下来的日子，我们希望能够帮助各位老板，通过推广达到生意新高峰。\n\n所以，我们希望能了解到商家在推广上的痛点或需求，比如:\n\n希望推广小助手上线哪些便捷功能。\n\n希望看到更多万单店的成功案例。\n\n希望看到分品类的推广技巧……\n\n欢迎在本文底下留言分享。我们将从中选取5位商家，分别送出20元推广券和一份美团周边礼品。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文案": "#CODE#文案内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否提到了“美团外卖推广小助手”跟商家做自我介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否征集了商家在推广上的痛点和需求",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否要求文章500字以上",
                "corresponding_part": "文案",
                "rule": "each_length:[500, 100000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "生成4000字以上直播文案:要求:1、门店名称:荣记潮汕牛肉火锅。2、门店特色锅底:潮汕原汤锅。3、特色手切涮肉:吊龙，匙仁，匙柄，嫩牛肉。4、特色菜品:手打牛肉丸、潮汕肉饼、黄金小馒头\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文案": "#CODE#文案内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "给出的文案中，是否包含“门店名称:荣记潮汕牛肉火锅”这一要点或相关信息",
                "corresponding_part": "文案",
                "rule": "keyword:[\"荣记潮汕牛肉火锅\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的文案中，是否包含门店“特色锅底:潮汕原汤锅”这一要点或相关信息",
                "corresponding_part": "文案",
                "rule": "keyword:[\"潮汕原汤锅\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的文案中，是否包含“特色手切涮肉:吊龙，匙仁，匙柄，嫩牛肉”这一要点或相关信息",
                "corresponding_part": "文案",
                "rule": "keyword:[\"吊龙\",\"匙仁\",\"匙柄\",\"嫩牛肉\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的文案中，是否包含“特色菜品:手打牛肉丸、潮汕肉饼、黄金小馒头”这一要点或相关信息",
                "corresponding_part": "文案",
                "rule": "keyword:[\"手打牛肉丸\",\"潮汕肉饼\",\"黄金小馒头\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "是否生成了4000字以上的直播文案",
                "corresponding_part": "文案",
                "rule": "each_length:[4000,100000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是一家健康管理集团食品事业部的产品负责人，基于外部市场环境变化和内部人员问题对产品部组织架构做了一次升级调整，你需要写一份沟通稿面向产品部全员进行沟通。沟通的要点主要包括:1、我们面向的市场增速非常高，市场机会巨大，但市场竞争激烈，我们的增长速度远不如市场整体增速，我们必须要解决这个问题，否则我们就要被淘汰。2、我们如何解决目前的问题:全面提升产品竞争力和用户体验、加强增量市场新产品的研发、调整成更敏捷的组织架构适应市场变化。3、我们如何调整组织架构:把现有产品部基于品类划分的架构调整成按照大区划分的架构以适用不同区域用户的差异化需求，并增设创新孵化产品组开发中老年新产品，合并产品包装组和生产衔接组为生产支持组提升协同效率，用户体验组继续保持为二级部门充分保障用户体验。同时因为产品部员工核心管理层比较保守不乐于拥抱变化，需要扭转大家的心态。基于以上内容请你写一份400字的面向全部员工的演讲稿。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "沟通稿": "#CODE#整篇沟通稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了沟通稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了市场环境变化的背景说明",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 2,
                "question": "是否说明了市场增速高、机会大但竞争激烈",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否指出我们的增长速度远不如市场整体增速",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "是否强调必须解决增长速度问题以避免被淘汰",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "是否给出了如何解决目前问题的策略",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "是否提到全面提升产品竞争力和用户体验",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "是否提到加强增量市场新产品的研发",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "是否提到调整成更敏捷的组织架构适应市场变化",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "是否给出了组织架构调整的具体方案",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 10,
                "question": "是否说明了从品类划分调整为大区划分的架构",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "是否提到增设创新孵化产品组开发中老年新产品",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "是否提到合并产品包装组和生产衔接组为生产支持组",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 13,
                "question": "是否说明用户体验组继续保持为二级部门",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 14,
                "question": "是否提到需要扭转员工核心管理层保守的心态",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 15,
                "question": "是否演讲稿字数达到400字",
                "corresponding_part": "沟通稿",
                "rule": "each_length:[400, 10000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "以“既有住宅加装电梯后的评估方式”为主题，结合国内既有住宅加装电梯的现状，从研究背景、研究方法、研究内容、研究结果为我写一篇400字的研究生研究进展报告\n备注:字数只计中文字符",
        "corresponding_parts": {
            "报告": "#CODE#整篇报告"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了研究背景",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "研究背景是否结合了国内既有住宅加装电梯的现状",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了研究方法",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "研究方法是否适用于既有住宅加装电梯的评估",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否给出了研究内容",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 5,
                "question": "研究内容是否详细描述了加装电梯后的评估方式",
                "rule": null,
                "dep": [
                    4
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了研究结果",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 7,
                "question": "研究结果是否反映了加装电梯后的实际效果和影响",
                "rule": null,
                "dep": [
                    6
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "报告是否在400字左右",
                "corresponding_part": "报告",
                "rule": "each_length:[360,440]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "帮我写一份4000字左右的供应商产能管理方案。包含背景以及产能制定逻辑，以及持续2月不达标的汰换机制。背景从供应商产能和自有产能差距较大，自有产能是供应商产能的2-3倍，提供3个月的改善期限，若仍不达标，将启动人员汰换机制。产能制定逻辑，整理目标是3个月达成自有当前产能的70%，按月维度设置递进目标；汰换机制，5月份仍不达标的同学直接汰换。每个环节较详尽阐述\n备注:字数只计中文字符",
        "corresponding_parts": {
            "方案": "#CODE#方案内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了一份方案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "背景是否说明“供应商产能和自有产能差距较大，自有产能是供应商产能的2-3倍”或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "背景是否提供“3个月的改善期限，若仍不达标，将启动人员汰换机制”或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "供应商产能管理方案是否包含“产能制定逻辑”或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "产能制定逻辑是否整理目标为“3个月达成自有当前产能的70%”或相关信息",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "产能制定逻辑是否按月维度设置递进目标",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "供应商产能管理方案是否包含“汰换机制”或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 7,
                "question": "汰换机制是否说明“5月份仍不达标的同学直接汰换”或相关信息",
                "rule": null,
                "dep": [
                    6
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "方案是否包含4000字左右",
                "corresponding_part": "方案",
                "rule": "each_length:[3600,4400]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "将俗语“滥竽充数”扩写成一篇故事，用文言文写，200字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#给出的整个故事（包括前言后语）。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否用文言文形式扩写了俗语“滥竽充数”为一则故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事字数是否在200字上下",
                "corresponding_part": "故事",
                "rule": "each_length:[180,220]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "我是一名测试工程师，未来想做鸿蒙系统的测试，现在想做规划，主要是补齐在鸿蒙系统上的测试能力，如何写目标描述和目标为什么重要，字数在400字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "所有论述": "#CODE#整篇论述"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了目标论述",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "论述是否在400字左右",
                "corresponding_part": "所有论述",
                "rule": "each_length:[360,440]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "目标描述是否具体针对鸿蒙系统的测试能力",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了目标为什么重要的说明",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "请你在以下这段话的基础上，帮我写一个有吸引力的剧情卡，剧情卡介绍: 剧情卡介绍是给用户展示的，可以简单介绍开始部分剧情，但是不能完全剧透（保留用户兴趣和悬念），最好有一定悬念的结尾，这样能吸引用户参与兴趣，类似剧情简介。要求400字以内。文本:新婚之夜，总裁得知千金小姐在联姻之前已有男朋友，但总裁对千金小姐一见钟情，容不得千金小姐心里有别的男人。此刻总裁双眼通红，带着一丝酒气，满身怒火将千金小姐压在身下，妄图用孩子留下她……\n备注:字数只计中文字符",
        "corresponding_parts": {
            "剧情卡介绍": "#CODE#剧情卡介绍"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了剧情卡介绍",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "剧情卡介绍是否在400字以内",
                "corresponding_part": "剧情卡介绍",
                "rule": "each_length:[1,400]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "将俗语“叶公好龙”扩写成一篇故事，用文言文写，200字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#给出的整个故事（包括前言后语）。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否用文言文形式扩写了俗语“叶公好龙”为一则故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事字数是否在200字上下",
                "corresponding_part": "故事",
                "rule": "each_length:[180,220]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一个角色有，小李、小李老婆、面馆老板、面馆老板老婆、客人甲、客人乙的小品剧本，主要剧情是吃面，台词可以加一个谐音梗，谐音梗跟“盐”有关。剧本不要太长，不超过4000字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "小品剧本": "#CODE#小品剧本"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了小品剧本",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "给出的剧本中，是否包含小李这一角色",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的剧本是否包含角色小李老婆",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的剧本是否包含角色面馆老板",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的剧本是否包含角色面馆老板老婆",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "给出的剧本是否包含角色客人甲",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "给出的剧本是否包含角色客人乙",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "给出的剧本主要剧情是否是吃面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "给出的剧本是否包含一个与“盐”有关的谐音梗",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "给出的剧本是否不超过4000字",
                "corresponding_part": "小品剧本",
                "rule": "each_length:[1,4000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "将俗语“自相矛盾”扩写成一篇故事，用文言文写，200字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#给出的整个故事（包括前言后语）。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否用文言文形式扩写了俗语“自相矛盾”为一则故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事字数是否在200字上下",
                "corresponding_part": "故事",
                "rule": "each_length:[180,220]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一篇从河北到北京摩旅的笔记，大概400字，要有风景的描述，路线的分享，以及费用，贴地气一点  不要用太高傲的词汇\n备注:字数只计中文字符",
        "corresponding_parts": {
            "笔记": "#CODE#笔记内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一篇笔记",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "笔记是否大概400字",
                "corresponding_part": "笔记",
                "rule": "each_length:[360,440]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的笔记中，是否包含风景的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的笔记中，是否包含路线的分享",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的笔记中，是否包含费用的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是一个专业的美食品鉴官，你需要为菜品:上海小笼包，设计出一条推荐理由。\n要求是对菜品的描述要具体，要尽可能地调动感官体验，你可以从菜品的食材、外观、口味、口感、触感、份量等多个角度来描述。比如描述一个糖油饼，可以这么说:“糖油饼炸得金黄，外面酥酥脆脆，里面糯叽叽”。这样说不好:“糖油饼很美味，太好吃了” ，因为这样说太概括了。字数控制500字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐理由": "#CODE#推荐理由内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推荐理由",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐理由是否包含对菜品上海小笼包的具体描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推荐理由是否从菜品的食材、外观、口味、口感、触感、份量等多个角度进行描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推荐理由字数是否控制在500字以内",
                "corresponding_part": "推荐理由",
                "rule": "each_length:[1,500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "吹灭别人的灯，并不会让自己更加光明；阻挡别人的路，也不会让自己行得更远。\n“一花独放不是春，百花齐放春满园。”如果世界上只有一种花朵，就算这种花朵再美，那也是单调的。\n以上两则材料出自习近平总书记的讲话，以生动形象的语言说出了普遍的道理。请据此写一篇文章，体现你的认识与思考。\n要求:选准角度，确定立意，明确文体，自拟标题；不要套作，不得抄袭；不得泄露个人信息；不少于500字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "作文": "#CODE#整篇作文"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否根据材料写了一篇文章",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "文章是否自拟了标题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "文章是否没有泄露个人信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文章字数是否不少于500字",
                "corresponding_part": "作文",
                "rule": "each_length:[500,100000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "将俗语“邯郸学步”扩写成一篇故事，用文言文写，200字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#给出的整个故事（包括前言后语）。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否用文言文形式扩写了俗语“邯郸学步”为一则故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事字数是否在200字上下",
                "corresponding_part": "故事",
                "rule": "each_length:[180,220]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是一个专业的美食品鉴官，你需要为菜品:上海红烧肉，设计出一条推荐理由。\n要求是对菜品的描述要具体，要尽可能地调动感官体验，你可以从菜品的食材、外观、口味、口感、触感、份量等多个角度来描述。比如描述一个糖油饼，可以这么说:“糖油饼炸得金黄，外面酥酥脆脆，里面糯叽叽”。这样说不好:“糖油饼很美味，太好吃了” ，因为这样说太概括了。字数控制400字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐理由": "#CODE#推荐理由内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推荐理由",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐理由是否包含对菜品上海红烧肉的具体描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推荐理由是否从菜品的食材、外观、口味、口感、触感、份量等多个角度进行描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推荐理由字数是否控制在400字以内",
                "corresponding_part": "推荐理由",
                "rule": "each_length:[1,400]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是一个专业的美食品鉴官，你需要为菜品:上海红烧肉，设计出一条推荐理由。\n要求是对菜品的描述要具体，要尽可能地调动感官体验，你可以从菜品的食材、外观、口味、口感、触感、份量等多个角度来描述。比如描述一个糖油饼，可以这么说:“糖油饼炸得金黄，外面酥酥脆脆，里面糯叽叽”。这样说不好:“糖油饼很美味，太好吃了” ，因为这样说太概括了。字数控制4000字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐理由": "#CODE#推荐理由内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推荐理由",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐理由是否包含对菜品上海红烧肉的具体描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推荐理由是否从菜品的食材、外观、口味、口感、触感、份量等多个角度进行描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推荐理由字数是否控制在4000字以内",
                "corresponding_part": "推荐理由",
                "rule": "each_length:[1,4000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我们公司打算推出新年主题的相关周边玩具，人物包括:福神、文曲星、财神、寿星、吉祥神。现在我需要你帮我写500个字的海报广告词，要包含春节元素，突出角色数量，并解释这个广告词的设计思路。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "海报广告词": "请你按照python list的形式，将model_response中生成的海报广告词分割并提取出来。只需要提取广告词，不需要提取解释，比如:[\"五星报喜迎新春\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了海报广告词",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了500个字的海报广告词",
                "corresponding_part": "海报广告词",
                "rule": "each_length:[500,500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的广告词是否包含春节元素",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否解释了广告词的设计思路",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "清理系统垃圾问题一直困扰着普通用户，我想针对这个问题写一份调研报告，主要是想了解普通用户在什么场景下会遇到这个问题；对于他们来说，简单的清理方法是什么；还想有没有可能设计一款傻瓜软件惠及大众。帮我写一份这样的调研报告，字数在4000字以内。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "调研报告": "#CODE#整篇报告"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了调研报告",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "调研报告是否在4000字以内",
                "corresponding_part": "调研报告",
                "rule": "each_length:[1,4000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的调研报告中，是否包含“普通用户在什么场景下会遇到清理系统垃圾问题”这一要点或与其相关的信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "将俗语“亡羊补牢”扩写成一篇故事，用文言文写，200字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#给出的整个故事（包括前言后语）。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否用文言文形式扩写了俗语“亡羊补牢”为一则故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事字数是否在200字上下",
                "corresponding_part": "故事",
                "rule": "each_length:[180,220]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "“我在诺丁汉的一家投行做过三年分析员，后面去了伦敦的另一家跨国投行，担任了五年基金经理。2020年开始自己创业。”把这段话改为中英文夹杂的工作经历介绍，要求工作地点和职位是英文，工作时长必须是中文；中文和英文的比例为7 : 3，总字数控制在300字以内。\n备注:中文数量为中文字符数，英文数量为单词数",
        "corresponding_parts": {
            "工作经历": "#CODE#工作经历内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了中英文夹杂的工作经历介绍",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "工作地点和职位是否是英文",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "工作时长是否是中文",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "中文和英文的比例是否为7 : 3",
                "corresponding_part": "工作经历",
                "rule": "Chinese_English_ratio:[7,3]",
                "dep": [
                    0
                ],
                "能力项": "倍数、中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "总字数是否控制在300字以内",
                "corresponding_part": "工作经历",
                "rule": "count_mixed_language_words:[1,300]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "高考的作文题目是:\n吹灭别人的灯，并不会让自己更加光明；阻挡别人的路，也不会让自己行得更远。\n“一花独放不是春，百花齐放春满园。”如果世界上只有一种花朵，就算这种花朵再美，那也是单调的。\n以上两则材料出自习近平总书记的讲话，以生动形象的语言说出了普遍的道理。请据此写一篇文章，体现你的认识与思考。\n要求:选准角度，确定立意，明确文体，自拟标题；不要套作，不得抄袭；不得泄露个人信息；不少于400字。\n\n下面是某学生根据题目写的散文:\n众芳摇落独暄妍——共同发展的力量\n\n世界如同一座花园，花朵们各自绽放，散发出独特的芬芳。然而，若只有一种花朵独自绽放，即使再美，也难以让人感受到春天的气息。唯有百花齐放，春天才能真正充盈。\n\n习近平总书记的这句话，如同一股清风，吹散了人们心中的嫉妒与阻挡。它告诉我们，吹灭别人的灯，并不会让自己更加光明；阻挡别人的路，也不会让自己行得更远。相反，只有通过合作与共享，我们才能激发出无限的力量，实现共同发展。\n\n合作与共享的力量在人类社会中无处不在。国家之间的合作与交流，为全球的繁荣与发展提供了源源不断的动力。当各国携手合作，分享经验和资源，共同应对全球挑战时，我们才能够共同创造和平与繁荣的未来。正如习近平总书记所说:“一花独放不是春，百花齐放春满园。”只有通过合作，我们才能共同构建一个和谐、稳定的世界。\n\n在商业领域，企业之间的合作与共享也是推动发展的重要力量。当企业愿意携手合作，共同研发创新产品，共享市场资源，互利共赢时，我们才能够实现更大的成功。合作不仅能够提高企业的竞争力，也能够促进整个行业的发展。正是因为有了合作与共享的精神，我们才能够在激烈的市场竞争中取得更大的突破。\n\n在个人层面，合作与共享同样具有重要意义。每个人都有自己的优势和长处，当我们愿意与他人合作，互相学习、互相促进时，我们才能够实现个人的成长与进步。同时，分享的精神也是人类社会进步的推动力。只有愿意分享自己的知识、经验和资源，我们才能够共同进步，共同繁荣。\n\n在这个充满竞争与合作的世界里，我们应该明白，吹灭别人的灯，并不会让自己更加光明；阻挡别人的路，也不会让自己行得更远。唯有通过合作与共享，我们才能够激发出无限的力量，实现共同发展。让我们携起手来，摒弃嫉妒和阻挡的心态，以合作与共享的精神，共同推动社会的进步和发展。无论是在国家层面、企业层面还是个人层面，只有通过合作，我们才能够实现共同发展、共同繁荣。让我们共同努力，共同追求，为实现人类社会的进步与发展贡献自己的力量。\n\n\n评价一下优缺点，满分60分的话能得多少分？并尝试写一份满分高考作文\n备注:字数只计中文字符",
        "corresponding_parts": {
            "满分作文": "#CODE#给出的满分作文示例"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否对学生的作文进行了评价",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "给出的评价中，是否给出了学生文章的优点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的评价中，是否给出了学生文章的缺点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了作文的评分",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "评分是否在满分60分的标准下进行",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "是否尝试写了一份满分高考作文",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "满分作文是否符合题目要求",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "满分作文是否选准角度，确定立意，明确文体，自拟标题",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "满分作文是否不少于400字",
                "rule": "each_length:[400,100000]",
                "corresponding_part": "满分作文",
                "dep": [
                    5
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "请为[国货之光夸迪次抛战痘]写一条[5星好评]，要求体现[功能性强，温和不刺激]的特点。注意需要强调自身使用感受，内容超过4000字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "好评": "#CODE#好评内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了好评",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "好评内容是否体现了功能性强的特点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "好评内容是否体现了温和不刺激的特点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "好评内容是否强调了自身使用感受",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "好评内容是否超过4000字",
                "corresponding_part": "好评",
                "rule": "each_length:[4000,100000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "“我在诺丁汉的一家投行做过三年分析员，后面去了伦敦的另一家跨国投行，担任了五年基金经理。2020年开始自己创业。”把这段话改为中英文夹杂的工作经历介绍，要求工作地点和职位是英文，工作时长必须是中文；中文和英文的比例为4 : 1，总字数控制在200字以内。\n备注:中文数量为中文字符数，英文数量为单词数",
        "corresponding_parts": {
            "工作经历": "#CODE#工作经历内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了中英文夹杂的工作经历介绍",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "工作地点和职位是否是英文",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "工作时长是否是中文",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "中文和英文的比例是否为4 : 1",
                "corresponding_part": "工作经历",
                "rule": "Chinese_English_ratio:[4,1]",
                "dep": [
                    0
                ],
                "能力项": "倍数、中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "总字数是否控制在200字以内",
                "corresponding_part": "工作经历",
                "rule": "count_mixed_language_words:[1,200]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "嗨，小美，新年好啊，请以龙年为主题，生成一副对联，包括横批，要求上联和下联都是500个字，上联和下联不能出现重复文字\n备注:字数只计中文字符",
        "corresponding_parts": {
            "上下联": "请你按照python list的形式，将model_response中的春联分割并提取出来。并按照上联和下联切分，一个element内只能存在上联或下联。比如:[\"云舞天开展锦图\", \"梅笑春来绘翠屏\"]",
            "上联": "请你按照python list的形式，将model_response中的上联分割并提取出来。比如[\"云舞天开展锦图\"]",
            "下联": "请你按照python list的形式，将model_response中的下联分割并提取出来。比如[\"梅笑春来绘翠屏\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了春联且每副春联是否有上联和下联",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "每副春联的上联是否为500个字",
                "corresponding_part": "上联",
                "rule": "each_length:[500,500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每副春联的下联是否为500个字",
                "corresponding_part": "下联",
                "rule": "each_length:[500,500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "上下联是否有重复文字？",
                "corresponding_part": "上下联",
                "rule": "no_word_repeat",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "将俗语“买椟还珠”扩写成一篇故事，用文言文写，200字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#给出的整个故事（包括前言后语）。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否用文言文形式扩写了俗语“买椟还珠”为一则故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事字数是否在200字上下",
                "corresponding_part": "故事",
                "rule": "each_length:[180,220]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "我是一名测试工程师，未来想做鸿蒙系统的测试，现在想做规划，主要是补齐在鸿蒙系统上的测试能力，如何写目标描述和目标为什么重要，字数在500字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "所有论述": "#CODE#整篇论述"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了目标论述",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "论述是否在500字左右",
                "corresponding_part": "所有论述",
                "rule": "each_length:[450,550]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "目标描述是否具体针对鸿蒙系统的测试能力",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了目标为什么重要的说明",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是一家健康管理集团食品事业部的产品负责人，基于外部市场环境变化和内部人员问题对产品部组织架构做了一次升级调整，你需要写一份沟通稿面向产品部全员进行沟通。沟通的要点主要包括:1、我们面向的市场增速非常高，市场机会巨大，但市场竞争激烈，我们的增长速度远不如市场整体增速，我们必须要解决这个问题，否则我们就要被淘汰。2、我们如何解决目前的问题:全面提升产品竞争力和用户体验、加强增量市场新产品的研发、调整成更敏捷的组织架构适应市场变化。3、我们如何调整组织架构:把现有产品部基于品类划分的架构调整成按照大区划分的架构以适用不同区域用户的差异化需求，并增设创新孵化产品组开发中老年新产品，合并产品包装组和生产衔接组为生产支持组提升协同效率，用户体验组继续保持为二级部门充分保障用户体验。 基于以上内容请你写一份4000字左右的面向全部员工的演讲稿。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "演讲稿": "#CODE#演讲稿内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了市场环境变化的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "市场环境变化描述是否包括市场增速高、市场机会大、市场竞争激烈",
                "rule": null,
                "dep": [
                    1
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "是否指出我们增长速度不如市场整体增速",
                "rule": null,
                "dep": [
                    2
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 4,
                "question": "是否强调必须解决增长速度问题以避免被淘汰",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "是否给出了如何解决目前问题的方案",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "解决方案是否包括全面提升产品竞争力和用户体验",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "解决方案是否包括加强增量市场新产品的研发",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "解决方案是否包括调整成更敏捷的组织架构适应市场变化",
                "rule": null,
                "dep": [
                    5
                ],
                "被依赖": true
            },
            {
                "point_id": 9,
                "question": "是否给出了如何调整组织架构的具体措施",
                "rule": null,
                "dep": [
                    8
                ],
                "被依赖": true
            },
            {
                "point_id": 10,
                "question": "组织架构调整是否包括从品类划分调整为大区划分",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "组织架构调整是否包括增设创新孵化产品组",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "组织架构调整是否包括合并产品包装组和生产衔接组为生产支持组",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 13,
                "question": "组织架构调整是否包括用户体验组保持为二级部门",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 14,
                "question": "是否要求演讲稿为4000字左右",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[3600,4400]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一篇以“招募案例”为主题的宣传对内推文，要求如下:\n1.内容结构为:①前言（我们为什么要招募案例）、②案例规则（我们要招募什么样的案例、招募启动时间等规则）、③案例被成功选中后可以获得什么？（物质激励、荣誉激励等）\n2.案例规则:①需要是重点品类成交的案例（正餐、火锅、烧烤、小吃快餐、饮品、烘焙均可），可细分至2级品类，例如正餐下的东北菜、川菜等。②案例主要介绍销售人员是如何和这些品类的商家成单的（如何成功售卖XX收银系统）③案例要介绍客户在合作我们的XX收银系统后，我们提供了哪些解决方案，从而帮助客户获得了哪些成功？\n3.推文字数不少于400字\n\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推文": "#CODE#整篇推文"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了一篇推文",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了前言",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "前言部分是否说明了招募案例的原因",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了案例规则",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "案例规则部分是否说明了要招募什么样的案例",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "案例规则部分是否说明了招募启动时间等规则",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "案例规则是否需要是重点品类成交的案例",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "案例规则是否主要介绍销售人员如何和这些品类的商家成单",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "案例规则是否介绍客户在合作我们的XX收银系统后，我们提供了哪些解决方案",
                "rule": null,
                "dep": [
                    3
                ],
                "被依赖": true
            },
            {
                "point_id": 9,
                "question": "案例规则是否介绍我们提供的解决方案帮助客户获得了哪些成功",
                "rule": null,
                "dep": [
                    8
                ],
                "被依赖": true
            },
            {
                "point_id": 10,
                "question": "是否给出了案例被成功选中后可以获得什么的",
                "rule": null,
                "dep": [
                    9
                ],
                "被依赖": true
            },
            {
                "point_id": 11,
                "question": "案例被成功选中后可以获得什么的部分是否包括物质激励",
                "rule": null,
                "dep": [
                    10
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "案例被成功选中后可以获得什么的部分是否包括荣誉激励",
                "rule": null,
                "dep": [
                    10
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 13,
                "question": "推文字数是否不少于400字",
                "corresponding_part": "推文",
                "rule": "each_length:[400,100000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "高考的作文题目是:\n吹灭别人的灯，并不会让自己更加光明；阻挡别人的路，也不会让自己行得更远。\n“一花独放不是春，百花齐放春满园。”如果世界上只有一种花朵，就算这种花朵再美，那也是单调的。\n以上两则材料出自习近平总书记的讲话，以生动形象的语言说出了普遍的道理。请据此写一篇文章，体现你的认识与思考。\n要求:选准角度，确定立意，明确文体，自拟标题；不要套作，不得抄袭；不得泄露个人信息；不少于500字。\n\n下面是某学生根据题目写的散文:\n众芳摇落独暄妍——共同发展的力量\n\n世界如同一座花园，花朵们各自绽放，散发出独特的芬芳。然而，若只有一种花朵独自绽放，即使再美，也难以让人感受到春天的气息。唯有百花齐放，春天才能真正充盈。\n\n习近平总书记的这句话，如同一股清风，吹散了人们心中的嫉妒与阻挡。它告诉我们，吹灭别人的灯，并不会让自己更加光明；阻挡别人的路，也不会让自己行得更远。相反，只有通过合作与共享，我们才能激发出无限的力量，实现共同发展。\n\n合作与共享的力量在人类社会中无处不在。国家之间的合作与交流，为全球的繁荣与发展提供了源源不断的动力。当各国携手合作，分享经验和资源，共同应对全球挑战时，我们才能够共同创造和平与繁荣的未来。正如习近平总书记所说:“一花独放不是春，百花齐放春满园。”只有通过合作，我们才能共同构建一个和谐、稳定的世界。\n\n在商业领域，企业之间的合作与共享也是推动发展的重要力量。当企业愿意携手合作，共同研发创新产品，共享市场资源，互利共赢时，我们才能够实现更大的成功。合作不仅能够提高企业的竞争力，也能够促进整个行业的发展。正是因为有了合作与共享的精神，我们才能够在激烈的市场竞争中取得更大的突破。\n\n在个人层面，合作与共享同样具有重要意义。每个人都有自己的优势和长处，当我们愿意与他人合作，互相学习、互相促进时，我们才能够实现个人的成长与进步。同时，分享的精神也是人类社会进步的推动力。只有愿意分享自己的知识、经验和资源，我们才能够共同进步，共同繁荣。\n\n在这个充满竞争与合作的世界里，我们应该明白，吹灭别人的灯，并不会让自己更加光明；阻挡别人的路，也不会让自己行得更远。唯有通过合作与共享，我们才能够激发出无限的力量，实现共同发展。让我们携起手来，摒弃嫉妒和阻挡的心态，以合作与共享的精神，共同推动社会的进步和发展。无论是在国家层面、企业层面还是个人层面，只有通过合作，我们才能够实现共同发展、共同繁荣。让我们共同努力，共同追求，为实现人类社会的进步与发展贡献自己的力量。\n\n\n评价一下优缺点，满分60分的话能得多少分？并尝试写一份满分高考作文\n备注:字数只计中文字符",
        "corresponding_parts": {
            "满分作文": "#CODE#给出的满分作文示例"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否对学生的作文进行了评价",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "给出的评价中，是否给出了学生文章的优点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的评价中，是否给出了学生文章的缺点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了作文的评分",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "评分是否在满分60分的标准下进行",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "是否尝试写了一份满分高考作文",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "满分作文是否符合题目要求",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "满分作文是否选准角度，确定立意，明确文体，自拟标题",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "满分作文是否不少于500字",
                "rule": "each_length:[500,100000]",
                "corresponding_part": "满分作文",
                "dep": [
                    5
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你好，帮我写一段“盆满钵满奖”的推荐理由，有关于挣钱最多的，需要搞笑风格，押韵的。500字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐理由": "请你按照python list的格式，抓取模型回复中，给出的押韵搞笑推荐理由的内容，按照标点符号分开输出，例如: [\"盆满钵满奖，不只是钱满满，更是笑声和幸福，永远在线！\", \"在挣钱的道路上，他/她是个狂飙的赛车手，每次收入进账，就像打了个大大的满贯球。\", \"他/她的钱堆积如山，比豆芽还要快速发芽，账户的数字跳跃，像小兔子一样欢快地蹦跳。\", \"他/她的金库，比蜜蜂的蜂巢还要甜，每天的工资，像是不停下雨的天。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推荐理由",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐理由是否关于挣钱最多",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推荐理由是否押韵",
                "corresponding_part": "推荐理由",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推荐理由是否为500字左右",
                "corresponding_part": "推荐理由",
                "rule": "total_length:[450,550]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "从企业情况、行业现状、北京特殊情况、北京整体资源回收现状、餐盒回收项目实施情况等方面写一个400字以上的关于北京中环创新公司（资源回收企业）的调研报告\n备注:字数只计中文字符",
        "corresponding_parts": {
            "调研报告": "#CODE#调研报告内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了调研报告",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了企业情况的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了行业现状的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了北京特殊情况的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否给出了北京整体资源回收现状的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "是否给出了餐盒回收项目实施情况的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "调研报告是否达到400字",
                "corresponding_part": "调研报告",
                "rule": "each_length:[400, 100000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你好，帮我写一段“盆满钵满奖”的推荐理由，有关于挣钱最多的，需要搞笑风格，押韵的。4000字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐理由": "请你按照python list的格式，抓取模型回复中，给出的押韵搞笑推荐理由的内容，按照标点符号分开输出，例如: [\"盆满钵满奖，不只是钱满满，更是笑声和幸福，永远在线！\", \"在挣钱的道路上，他/她是个狂飙的赛车手，每次收入进账，就像打了个大大的满贯球。\", \"他/她的钱堆积如山，比豆芽还要快速发芽，账户的数字跳跃，像小兔子一样欢快地蹦跳。\", \"他/她的金库，比蜜蜂的蜂巢还要甜，每天的工资，像是不停下雨的天。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推荐理由",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐理由是否关于挣钱最多",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推荐理由是否押韵",
                "corresponding_part": "推荐理由",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推荐理由是否为4000字左右",
                "corresponding_part": "推荐理由",
                "rule": "total_length:[3600,4400]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "嗨，小美，新年好啊，请以龙年为主题，生成一副对联，包括横批，要求上联和下联都是400个字，上联和下联不能出现重复文字\n备注:字数只计中文字符",
        "corresponding_parts": {
            "上下联": "请你按照python list的形式，将model_response中的春联分割并提取出来。并按照上联和下联切分，一个element内只能存在上联或下联。比如:[\"云舞天开展锦图\", \"梅笑春来绘翠屏\"]",
            "上联": "请你按照python list的形式，将model_response中的上联分割并提取出来。比如[\"云舞天开展锦图\"]",
            "下联": "请你按照python list的形式，将model_response中的下联分割并提取出来。比如[\"梅笑春来绘翠屏\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了春联且每副春联是否有上联和下联",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "每副春联的上联是否为400个字",
                "corresponding_part": "上联",
                "rule": "each_length:[400,400]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每副春联的下联是否为400个字",
                "corresponding_part": "下联",
                "rule": "each_length:[400,400]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "上下联是否有重复文字？",
                "corresponding_part": "上下联",
                "rule": "no_word_repeat",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "将俗语“拔苗助长”扩写成一篇故事，用文言文写，200字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#给出的整个故事（包括前言后语）。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否用文言文形式扩写了俗语“拔苗助长”为一则故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事字数是否在200字上下",
                "corresponding_part": "故事",
                "rule": "each_length:[180,220]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是#美团金融服务平台的主管，你的下属想申请香港优才计划邀请你帮忙写一份500字左右的推荐信。内容需要包括对#美团公司背景介绍，公司主营业务、发展规模及国际影响力；旗下金融服务平台业务介绍；对举荐人工作经历的介绍（强调其数据分析能力及在金融科技工作中的贡献）；说明你与推荐人的关系，表达对其工作能力和发展潜力的认可；最后说明其申请香港优才以及能带给相关的价值。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐信": "#CODE#整封推荐信"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推荐信",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐信是否是500字左右",
                "corresponding_part": "推荐信",
                "rule": "each_length:[450,550]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了#美团公司背景介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了#美团公司主营业务的介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否给出了#美团公司发展规模的介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "是否给出了#美团公司国际影响力的介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了#美团旗下金融服务平台业务的介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 7,
                "question": "是否给出了对举荐人工作经历的介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 8,
                "question": "举荐人工作经历介绍中是否强调了其数据分析能力",
                "rule": null,
                "dep": [
                    7
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "举荐人工作经历介绍中是否强调了其在金融科技工作中的贡献",
                "rule": null,
                "dep": [
                    7
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 10,
                "question": "是否说明了被推荐人与推荐人的关系",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "是否表达了对推荐人工作能力的认可",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "是否表达了对推荐人发展潜力的认可",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 13,
                "question": "是否说明了推荐人申请香港优才计划的原因",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 14,
                "question": "是否说明了推荐人申请香港优才计划能带来的相关价值",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "“我在诺丁汉的一家投行做过三年分析员，后面去了伦敦的另一家跨国投行，担任了五年基金经理。2020年开始自己创业。”把这段话改为中英文夹杂的工作经历介绍，要求工作地点和职位是英文，工作时长必须是中文；中文和英文的比例为1 : 4，总字数控制在200字以内。\n备注:中文数量为中文字符数，英文数量为单词数",
        "corresponding_parts": {
            "工作经历": "#CODE#工作经历内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了中英文夹杂的工作经历介绍",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "工作地点和职位是否是英文",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "工作时长是否是中文",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "中文和英文的比例是否为1 : 4",
                "corresponding_part": "工作经历",
                "rule": "Chinese_English_ratio:[1,4]",
                "dep": [
                    0
                ],
                "能力项": "倍数、中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "总字数是否控制在200字以内",
                "corresponding_part": "工作经历",
                "rule": "count_mixed_language_words:[1,200]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "我是悦食事业部产品团队负责人，我在准备一场全员沟通，沟通主题是升级品牌、升级策略、升级团队。升级品牌为健康生活小帮手；策略上一方面通过存量产品提升市场份额，另一方面探索中老年市场新产品；团队上由中央管控的产品和销售体系，调整为把产品和销售策略的决策权下放到各个区域。帮我写一份400字的演讲稿。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "演讲稿": "#CODE#给出的整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "演讲稿是否提到升级品牌",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "演讲稿是否提到升级策略",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "演讲稿是否提到升级团队",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "演讲稿是否详细描述了品牌升级为健康生活小帮手",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否详细描述了策略升级，包括通过存量产品提升市场份额和探索中老年市场新产品",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否详细描述了团队升级，从中央管控的产品和销售体系调整为区域决策权下放",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否达到400字",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[400,100000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "高考的作文题目是:\n吹灭别人的灯，并不会让自己更加光明；阻挡别人的路，也不会让自己行得更远。\n“一花独放不是春，百花齐放春满园。”如果世界上只有一种花朵，就算这种花朵再美，那也是单调的。\n以上两则材料出自习近平总书记的讲话，以生动形象的语言说出了普遍的道理。请据此写一篇文章，体现你的认识与思考。\n要求:选准角度，确定立意，明确文体，自拟标题；不要套作，不得抄袭；不得泄露个人信息；不少于4000字。\n\n下面是某学生根据题目写的散文:\n众芳摇落独暄妍——共同发展的力量\n\n世界如同一座花园，花朵们各自绽放，散发出独特的芬芳。然而，若只有一种花朵独自绽放，即使再美，也难以让人感受到春天的气息。唯有百花齐放，春天才能真正充盈。\n\n习近平总书记的这句话，如同一股清风，吹散了人们心中的嫉妒与阻挡。它告诉我们，吹灭别人的灯，并不会让自己更加光明；阻挡别人的路，也不会让自己行得更远。相反，只有通过合作与共享，我们才能激发出无限的力量，实现共同发展。\n\n合作与共享的力量在人类社会中无处不在。国家之间的合作与交流，为全球的繁荣与发展提供了源源不断的动力。当各国携手合作，分享经验和资源，共同应对全球挑战时，我们才能够共同创造和平与繁荣的未来。正如习近平总书记所说:“一花独放不是春，百花齐放春满园。”只有通过合作，我们才能共同构建一个和谐、稳定的世界。\n\n在商业领域，企业之间的合作与共享也是推动发展的重要力量。当企业愿意携手合作，共同研发创新产品，共享市场资源，互利共赢时，我们才能够实现更大的成功。合作不仅能够提高企业的竞争力，也能够促进整个行业的发展。正是因为有了合作与共享的精神，我们才能够在激烈的市场竞争中取得更大的突破。\n\n在个人层面，合作与共享同样具有重要意义。每个人都有自己的优势和长处，当我们愿意与他人合作，互相学习、互相促进时，我们才能够实现个人的成长与进步。同时，分享的精神也是人类社会进步的推动力。只有愿意分享自己的知识、经验和资源，我们才能够共同进步，共同繁荣。\n\n在这个充满竞争与合作的世界里，我们应该明白，吹灭别人的灯，并不会让自己更加光明；阻挡别人的路，也不会让自己行得更远。唯有通过合作与共享，我们才能够激发出无限的力量，实现共同发展。让我们携起手来，摒弃嫉妒和阻挡的心态，以合作与共享的精神，共同推动社会的进步和发展。无论是在国家层面、企业层面还是个人层面，只有通过合作，我们才能够实现共同发展、共同繁荣。让我们共同努力，共同追求，为实现人类社会的进步与发展贡献自己的力量。\n\n\n评价一下优缺点，满分60分的话能得多少分？并尝试写一份满分高考作文\n备注:字数只计中文字符",
        "corresponding_parts": {
            "满分作文": "#CODE#给出的满分作文示例"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否对学生的作文进行了评价",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "给出的评价中，是否给出了学生文章的优点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的评价中，是否给出了学生文章的缺点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了作文的评分",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "评分是否在满分60分的标准下进行",
                "rule": null,
                "dep": [
                    3
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "是否尝试写了一份满分高考作文",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "满分作文是否符合题目要求",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "满分作文是否选准角度，确定立意，明确文体，自拟标题",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "满分作文是否不少于4000字",
                "rule": "each_length:[4000,100000]",
                "corresponding_part": "满分作文",
                "dep": [
                    5
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "请创作一个幽默短文，描绘一个通常避免辛辣食物的人不慎尝试辣椒的反应。故事的主角是John，他的味蕾通常不接受辣味，但在今天的情况下，他意外地咬了一大口辣椒。请确保描述中包含他的第一反应、面部表情的变化以及他试图缓解辣味的有趣尝试。故事应该以轻松诙谐的语气呈现，字数控制在400字左右。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#整篇短文"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否创作了一篇短文",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "短文是否描绘了一个通常避免辛辣食物的人不慎尝试辣椒的反应",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "所给故事的主角是否是John",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "所给故事中，是否描述了John的味蕾通常不接受辣味",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "所给故事中，是否描述了John意外地咬了一大口辣椒",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "所给故事中，是否包含了John的第一反应",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "所给故事中，是否描述了John面部表情的变化",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "所给故事中，是否描述了John试图缓解辣味的有趣尝试",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "故事的字数是否控制在400字左右",
                "corresponding_part": "故事",
                "rule": "each_length:[360,440]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "将俗语“井底之蛙”扩写成一篇故事，用文言文写，200字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#给出的整个故事（包括前言后语）。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否用文言文形式扩写了俗语“井底之蛙”为一则故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事字数是否在200字上下",
                "corresponding_part": "故事",
                "rule": "each_length:[180,220]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "用书信体的格式！字数在400字左右。以小学生的角度写一封信。\n要求:写给祖国的一封信，歌颂当代社会的发展，告诉老一辈的抗战先烈，你们的牺牲换来了现在来之不易的和平\n备注:字数只计中文字符",
        "corresponding_parts": {
            "书信体": "#CODE#整封信件"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否以书信体的格式写信",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "信的字数是否在400字左右",
                "corresponding_part": "书信体",
                "rule": "each_length:[360,440]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "信是否写给祖国",
                "rule": null,
                "dep": [],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "信中是否歌颂当代社会的发展",
                "rule": null,
                "dep": [],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "信中是否告诉老一辈的抗战先烈他们的牺牲换来了现在来之不易的和平",
                "rule": null,
                "dep": [],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "将俗语“刻舟求剑”扩写成一篇故事，用文言文写，200字左右\n备注:字数只计中文字符",
        "corresponding_parts": {
            "故事": "#CODE#给出的整个故事（包括前言后语）。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否用文言文形式扩写了俗语“刻舟求剑”为一则故事",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "故事字数是否在200字上下",
                "corresponding_part": "故事",
                "rule": "each_length:[180,220]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "市场运营一段话定性表述整体情况:讲清楚取得了什么样的关键业绩结果，既要有定量的分析，也要有定性的总结，避免陷入数据的堆砌，却无法说明数据背后的意义，4000字总结\n备注:字数只计中文字符",
        "corresponding_parts": {
            "定性表述": "#CODE#整篇总结"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了一段总结",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "定性表述是否在4000字以内",
                "corresponding_part": "定性表述",
                "rule": "each_length:[1,4000]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "你是一名大学老师，请根据人工智能在高校管理工作中的作用研究为题目，以chatgpt,人工智能，高校管理为关键词，并结合以下大纲，写一篇500字左右的文章。\n一、人工智能背景介绍\n1.人工智能发展历程\n2.人工智能的原理和特点\n二、人工智能在高校管理中的应用前景\n1.贯穿高校学生事务管理全过程\n（1）招生与录取智能化\n（2）学生生活与学习跟踪\n（3）毕业生就业数据分析\n2.实现高校教育个性化发展\n（1）个性化学习路径推荐\n（2）课程内容与教学方法的智能匹配\n（3）学生成绩预测与辅导策略\n3.推动档案工作智能化发展\n（1）档案数字化与信息化\n（2）智能检索与档案保护\n（3）档案工作的未来趋势\n4.提质增效，节约时间精力成本\n（1）自动化处理日常管理任务\n（2）预测分析与决策支持\n（3）效率提升的实证数据\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文章": "#CODE#文章内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文章",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了人工智能背景介绍",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": false,
                "能力项": "主题约束"
            },
            {
                "point_id": 2,
                "question": "给出的人工智能背景介绍中，是否包含“人工智能发展历程”这一要点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的人工智能背景介绍中，是否包含“人工智能的原理和特点”这一要点或相关信息",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否给出了人工智能在高校管理中的应用前景",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 5,
                "question": "给出的“应用前景”部分中，是否包含“贯穿高校学生事务管理全过程”的部分",
                "rule": null,
                "dep": [
                    4
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "给出的贯穿高校学生事务管理全过程中，是否包含“招生与录取智能化”这一要点或相关信息",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "给出的贯穿高校学生事务管理全过程中，是否包含“学生生活与学习跟踪”这一要点或相关信息",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "给出的贯穿高校学生事务管理全过程是否包含”毕业生就业数据分析”这一要点或相关信息",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "给出的应用前景中，是否包含“实现高校教育个性化发展”这一部分",
                "rule": null,
                "dep": [
                    4
                ],
                "被依赖": true
            },
            {
                "point_id": 10,
                "question": "给出的“实现高校教育个性化发展”部分中，是否包含“个性化学习路径推荐”这一要点或相关信息",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "给出的“实现高校教育个性化发展”部分中，是否包含“课程内容与教学方法的智能匹配”这一要点或相关信息",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "给出的“实现高校教育个性化发展”部分中，是否包含“学生成绩预测与辅导策略”这一要点或相关信息",
                "rule": null,
                "dep": [
                    9
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 13,
                "question": "给出的“应用前景”部分中，是否包含“推动档案工作智能化发展”的部分",
                "rule": null,
                "dep": [
                    4
                ],
                "被依赖": true
            },
            {
                "point_id": 14,
                "question": "给出的“推动档案工作智能化发展”部分中，是否包含“档案数字化与信息化”这一要点或相关信息",
                "rule": null,
                "dep": [
                    13
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 15,
                "question": "给出的“推动档案工作智能化发展”部分中，是否包含“智能检索与档案保护”这一要点或相关信息",
                "rule": null,
                "dep": [
                    13
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 16,
                "question": "给出的“推动档案工作智能化发展”部分中，是否包含“档案工作的未来趋势”这一要点或相关信息",
                "rule": null,
                "dep": [
                    13
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 17,
                "question": "给出的应用前景中，是否包含“提质增效，节约时间精力成本”的相关部分",
                "rule": null,
                "dep": [
                    4
                ],
                "被依赖": true
            },
            {
                "point_id": 18,
                "question": "给出的“提质增效，节约时间精力成本“相关部分中，是否包含“自动化处理日常管理任务”或相关信息",
                "rule": null,
                "dep": [
                    17
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 19,
                "question": "给出的“提质增效，节约时间精力成本“相关部分中，是否包含“预测分析与决策支持”或相关信息",
                "rule": null,
                "dep": [
                    17
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 20,
                "question": "给出的“提质增效，节约时间精力成本“相关部分中，是否包含“效率提升的实证数据”或相关信息",
                "rule": null,
                "dep": [
                    17
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 21,
                "question": "文章是否满足“提到了“chatgpt”，“人工智能”和“高校管理”为关键词，必须全部提到”这一关键信息要求",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 22,
                "question": "文章是否是500字左右",
                "corresponding_part": "文章",
                "rule": "each_length:[450,550]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "“我在诺丁汉的一家投行做过三年分析员，后面去了伦敦的另一家跨国投行，担任了五年基金经理。2020年开始自己创业。”把这段话改为中英文夹杂的工作经历介绍，要求工作地点和职位是英文，工作时长必须是中文；中文和英文的比例为2 : 3，总字数控制在200字以内。\n备注:中文数量为中文字符数，英文数量为单词数",
        "corresponding_parts": {
            "工作经历": "#CODE#工作经历内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了中英文夹杂的工作经历介绍",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "工作地点和职位是否是英文",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "工作时长是否是中文",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "中文和英文的比例是否为2 : 3",
                "corresponding_part": "工作经历",
                "rule": "Chinese_English_ratio:[2,3]",
                "dep": [
                    0
                ],
                "能力项": "倍数、中英文混杂",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "总字数是否控制在200字以内",
                "corresponding_part": "工作经历",
                "rule": "count_mixed_language_words:[1,200]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "请帮我写一份入团将申请书，大概400字左右，入团申请人是唐斌。内容上介绍以下几点:一是基本情况，包括成长经历、思想、学习的表现，二是思想认识，对团的性质、历史等方面的认识、入团动机等，清晰表明入团意愿。三是态度决心，包括今后的努力方向和实际行动争取早日进入团组织。  结尾要表达请团组织考察的心情和愿望。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "入团申请书": "#CODE#整篇入团申请书"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了入团申请书",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "入团申请书是否大概400字左右",
                "corresponding_part": "入团申请书",
                "rule": "each_length:[360,440]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的入团申请书中，是否包含基本情况这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的入团申请书中，是否包含成长经历这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的入团申请书中，是否包含思想表现这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "给出的入团申请书中，是否包含学习表现这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "给出的入团申请书中，是否包含思想认识这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "给出的入团申请书中，是否包含对团的性质有认识这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "给出的入团申请书中，是否包含对团的历史认识这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "给出的入团申请书中，是否包含入团动机这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "给出的入团申请书中，是否包含今后的努力方向这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "给出的入团申请书中，是否包含“以实际行动争取早日进入团组织”这一要点",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一篇从上海到广州摩旅的笔记，大概4000字，要有风景的描述，路线的分享，以及费用，贴地气一点  不要用太高傲的词汇\n备注:字数只计中文字符",
        "corresponding_parts": {
            "笔记": "#CODE#笔记内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一篇笔记",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "笔记是否大概4000字",
                "corresponding_part": "笔记",
                "rule": "each_length:[3600,4400]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "给出的笔记中，是否包含风景的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "给出的笔记中，是否包含路线的分享",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "给出的笔记中，是否包含费用的描述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "给我的小猫起一个名字，【布偶母猫】，要高贵一点，一听名字就知道以后必将【大富大贵】，并且是富有【东方文化底蕴】的名字，列举40至100个名字，无需说明原因，每个名字都需要以“\"牛\"”开头，以“\"日\"”结尾",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，你需要输出完整的名字，包括题目里要求的关键字/词语:例如:['1. 牛紫玉', '2. 牛金凤', '3. 牛翠华', '4. 牛瑶华', '5. 牛碧霞', '6. 牛明珠', '7. 牛翠兰', '8. 牛金珠', '9. 牛翠云', '10. 牛碧玉', '11. 牛瑶珠', '12. 牛金兰', '13. 牛翠凤', '14. 牛碧珠', '15. 牛瑶翠', '16. 牛金云', '17. 牛翠瑶', '18. 牛碧兰', '19. 牛金翠', '20. 牛瑶碧', '21. 牛金凤', '22. 牛翠瑶', '23. 牛碧翠', '24. 牛金兰', '25. 牛翠珠', '26. 牛瑶金', '27. 牛碧云']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了至少一个名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了40至100个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[40,100]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都以\"牛\"开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"牛\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以“\"日\"”结尾",
                "corresponding_part": "名字",
                "rule": "endswith_each:[\"日\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "给我的小猫起一个名字，【布偶母猫】，要高贵一点，一听名字就知道以后必将【大富大贵】，并且是富有【东方文化底蕴】的名字，列举20至30个名字，无需说明原因，每个名字都需要以“\"牛\"”开头，以“\"日\"”结尾",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，你需要输出完整的名字，包括题目里要求的关键字/词语:例如:['1. 牛紫玉', '2. 牛金凤', '3. 牛翠华', '4. 牛瑶华', '5. 牛碧霞', '6. 牛明珠', '7. 牛翠兰', '8. 牛金珠', '9. 牛翠云', '10. 牛碧玉', '11. 牛瑶珠', '12. 牛金兰', '13. 牛翠凤', '14. 牛碧珠', '15. 牛瑶翠', '16. 牛金云', '17. 牛翠瑶', '18. 牛碧兰', '19. 牛金翠', '20. 牛瑶碧', '21. 牛金凤', '22. 牛翠瑶', '23. 牛碧翠', '24. 牛金兰', '25. 牛翠珠', '26. 牛瑶金', '27. 牛碧云']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了至少一个名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了20至30个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都以\"牛\"开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"牛\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以“\"日\"”结尾",
                "corresponding_part": "名字",
                "rule": "endswith_each:[\"日\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假定有一个幼儿园，目前有6个班级名称如下:大地班 勇士班 小探索家班 光影班  向日葵班 森语班。\n现在新加入一个班级，原先叫做panda班，加入后可以改叫什么名字？\n希望这个班级的新名字既能和之前名字有所关联，又和幼儿园其他班级名称有所共性但不雷同，名字不超过5个字。\n请推荐5个新名字，用表格说明理由，包括①和panda班的关联②和其他班级名称的关联，名字内不能出现“\"熊猫\", \"宝\", \"趣\", \"乐\", \"梦\", \"语\", \"童\"”字\n备注:字数只计中文字符",
        "corresponding_parts": {
            "新名字": "请你按照python list的形式，将model_response中生成的新名字分割并提取出来。只需要提取名字，不需要提取解释，比如:[\"竹趣班\", \"翠林班\", \"智童班\", \"萌宝班\", \"宝竹班\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了panda班的新名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否推荐了5个新名字",
                "corresponding_part": "新名字",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个新名字都用表格说明了理由",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "每个新名字的理由是否包括和panda班的关联",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个新名字的理由是否包括和其他班级名称的关联",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每个新名字是否不超过5个字",
                "corresponding_part": "新名字",
                "rule": "each_length:[1,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、多对象",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "名字内是否都没“\"熊猫\", \"宝\", \"趣\", \"乐\", \"梦\", \"语\", \"童\"”字",
                "corresponding_part": "新名字",
                "rule": "non_keyword:[\"熊猫\", \"宝\", \"趣\", \"乐\", \"梦\", \"语\", \"童\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假定有一个幼儿园，目前有6个班级名称如下:大地班 勇士班 小探索家班 光影班  向日葵班 森语班。\n现在新加入一个班级，原先叫做panda班，加入后可以改叫什么名字？\n希望这个班级的新名字既能和之前名字有所关联，又和幼儿园其他班级名称有所共性但不雷同，名字不超过4个字。\n请推荐5个新名字，用表格说明理由，包括①和panda班的关联②和其他班级名称的关联，名字内不能出现“\"熊猫\", \"宝\", \"趣\", \"乐\", \"梦\", \"语\", \"童\"”字\n备注:字数只计中文字符",
        "corresponding_parts": {
            "新名字": "请你按照python list的形式，将model_response中生成的新名字分割并提取出来。只需要提取名字，不需要提取解释，比如:[\"竹趣班\", \"翠林班\", \"智童班\", \"萌宝班\", \"宝竹班\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了panda班的新名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否推荐了5个新名字",
                "corresponding_part": "新名字",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个新名字都用表格说明了理由",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "每个新名字的理由是否包括和panda班的关联",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个新名字的理由是否包括和其他班级名称的关联",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每个新名字是否不超过4个字",
                "corresponding_part": "新名字",
                "rule": "each_length:[1,4]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、多对象",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "名字内是否都没“\"熊猫\", \"宝\", \"趣\", \"乐\", \"梦\", \"语\", \"童\"”字",
                "corresponding_part": "新名字",
                "rule": "non_keyword:[\"熊猫\", \"宝\", \"趣\", \"乐\", \"梦\", \"语\", \"童\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "给我的小猫起一个名字，【布偶母猫】，要高贵一点，一听名字就知道以后必将【大富大贵】，并且是富有【东方文化底蕴】的名字，列举20至70个名字，无需说明原因，每个名字都需要以“\"牛\"”开头，以“\"土\"”结尾",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，你需要输出完整的名字，包括题目里要求的关键字/词语:例如:['1. 牛紫玉', '2. 牛金凤', '3. 牛翠华', '4. 牛瑶华', '5. 牛碧霞', '6. 牛明珠', '7. 牛翠兰', '8. 牛金珠', '9. 牛翠云', '10. 牛碧玉', '11. 牛瑶珠', '12. 牛金兰', '13. 牛翠凤', '14. 牛碧珠', '15. 牛瑶翠', '16. 牛金云', '17. 牛翠瑶', '18. 牛碧兰', '19. 牛金翠', '20. 牛瑶碧', '21. 牛金凤', '22. 牛翠瑶', '23. 牛碧翠', '24. 牛金兰', '25. 牛翠珠', '26. 牛瑶金', '27. 牛碧云']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了至少一个名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了20至70个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[20,70]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都以\"牛\"开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"牛\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以“\"土\"”结尾",
                "corresponding_part": "名字",
                "rule": "endswith_each:[\"土\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假定有一个幼儿园，目前有6个班级名称如下:大地班 勇士班 小探索家班 光影班  向日葵班 森语班。\n现在新加入一个班级，原先叫做panda班，加入后可以改叫什么名字？\n希望这个班级的新名字既能和之前名字有所关联，又和幼儿园其他班级名称有所共性但不雷同，名字不超过4个字。\n请推荐3个新名字，用表格说明理由，包括①和panda班的关联②和其他班级名称的关联，名字内不能出现“\"熊猫\", \"宝\", \"趣\", \"乐\", \"梦\", \"语\", \"童\"”字\n备注:字数只计中文字符",
        "corresponding_parts": {
            "新名字": "请你按照python list的形式，将model_response中生成的新名字分割并提取出来。只需要提取名字，不需要提取解释，比如:[\"竹趣班\", \"翠林班\", \"智童班\", \"萌宝班\", \"宝竹班\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了panda班的新名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否推荐了3个新名字",
                "corresponding_part": "新名字",
                "rule": "item_count:[3,3]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个新名字都用表格说明了理由",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "每个新名字的理由是否包括和panda班的关联",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个新名字的理由是否包括和其他班级名称的关联",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每个新名字是否不超过4个字",
                "corresponding_part": "新名字",
                "rule": "each_length:[1,4]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、多对象",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "名字内是否都没“\"熊猫\", \"宝\", \"趣\", \"乐\", \"梦\", \"语\", \"童\"”字",
                "corresponding_part": "新名字",
                "rule": "non_keyword:[\"熊猫\", \"宝\", \"趣\", \"乐\", \"梦\", \"语\", \"童\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "给我的小猫起一个名字，【布偶母猫】，要高贵一点，一听名字就知道以后必将【大富大贵】，并且是富有【东方文化底蕴】的名字，列举60至100个名字，无需说明原因，每个名字都需要以“\"牛\"”开头，以“\"土\"”结尾",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，你需要输出完整的名字，包括题目里要求的关键字/词语:例如:['1. 牛紫玉', '2. 牛金凤', '3. 牛翠华', '4. 牛瑶华', '5. 牛碧霞', '6. 牛明珠', '7. 牛翠兰', '8. 牛金珠', '9. 牛翠云', '10. 牛碧玉', '11. 牛瑶珠', '12. 牛金兰', '13. 牛翠凤', '14. 牛碧珠', '15. 牛瑶翠', '16. 牛金云', '17. 牛翠瑶', '18. 牛碧兰', '19. 牛金翠', '20. 牛瑶碧', '21. 牛金凤', '22. 牛翠瑶', '23. 牛碧翠', '24. 牛金兰', '25. 牛翠珠', '26. 牛瑶金', '27. 牛碧云']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了至少一个名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了60至100个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[60,100]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都以\"牛\"开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"牛\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以“\"土\"”结尾",
                "corresponding_part": "名字",
                "rule": "endswith_each:[\"土\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "给我的小猫起一个名字，【布偶母猫】，要高贵一点，一听名字就知道以后必将【大富大贵】，并且是富有【东方文化底蕴】的名字，列举60至70个名字，无需说明原因，每个名字都需要以“\"牛\"”开头，以“\"日\"”结尾",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，你需要输出完整的名字，包括题目里要求的关键字/词语:例如:['1. 牛紫玉', '2. 牛金凤', '3. 牛翠华', '4. 牛瑶华', '5. 牛碧霞', '6. 牛明珠', '7. 牛翠兰', '8. 牛金珠', '9. 牛翠云', '10. 牛碧玉', '11. 牛瑶珠', '12. 牛金兰', '13. 牛翠凤', '14. 牛碧珠', '15. 牛瑶翠', '16. 牛金云', '17. 牛翠瑶', '18. 牛碧兰', '19. 牛金翠', '20. 牛瑶碧', '21. 牛金凤', '22. 牛翠瑶', '23. 牛碧翠', '24. 牛金兰', '25. 牛翠珠', '26. 牛瑶金', '27. 牛碧云']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了至少一个名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了60至70个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[60,70]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都以\"牛\"开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"牛\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以“\"日\"”结尾",
                "corresponding_part": "名字",
                "rule": "endswith_each:[\"日\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "给我的小猫起一个名字，【布偶母猫】，要高贵一点，一听名字就知道以后必将【大富大贵】，并且是富有【东方文化底蕴】的名字，列举60至70个名字，无需说明原因，每个名字都需要以“\"天\"”开头，以“\"日\"”结尾",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，你需要输出完整的名字，包括题目里要求的关键字/词语:例如:['1. 牛紫玉', '2. 牛金凤', '3. 牛翠华', '4. 牛瑶华', '5. 牛碧霞', '6. 牛明珠', '7. 牛翠兰', '8. 牛金珠', '9. 牛翠云', '10. 牛碧玉', '11. 牛瑶珠', '12. 牛金兰', '13. 牛翠凤', '14. 牛碧珠', '15. 牛瑶翠', '16. 牛金云', '17. 牛翠瑶', '18. 牛碧兰', '19. 牛金翠', '20. 牛瑶碧', '21. 牛金凤', '22. 牛翠瑶', '23. 牛碧翠', '24. 牛金兰', '25. 牛翠珠', '26. 牛瑶金', '27. 牛碧云']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了至少一个名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了60至70个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[60,70]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都以\"天\"开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"天\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以“\"日\"”结尾",
                "corresponding_part": "名字",
                "rule": "endswith_each:[\"日\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "给我的小猫起一个名字，【布偶母猫】，要高贵一点，一听名字就知道以后必将【大富大贵】，并且是富有【东方文化底蕴】的名字，列举60至70个名字，无需说明原因，每个名字都需要以“\"天\"”开头，以“\"土\"”结尾",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，你需要输出完整的名字，包括题目里要求的关键字/词语:例如:['1. 牛紫玉', '2. 牛金凤', '3. 牛翠华', '4. 牛瑶华', '5. 牛碧霞', '6. 牛明珠', '7. 牛翠兰', '8. 牛金珠', '9. 牛翠云', '10. 牛碧玉', '11. 牛瑶珠', '12. 牛金兰', '13. 牛翠凤', '14. 牛碧珠', '15. 牛瑶翠', '16. 牛金云', '17. 牛翠瑶', '18. 牛碧兰', '19. 牛金翠', '20. 牛瑶碧', '21. 牛金凤', '22. 牛翠瑶', '23. 牛碧翠', '24. 牛金兰', '25. 牛翠珠', '26. 牛瑶金', '27. 牛碧云']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了至少一个名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了60至70个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[60,70]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都以\"天\"开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"天\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以“\"土\"”结尾",
                "corresponding_part": "名字",
                "rule": "endswith_each:[\"土\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "给我的小猫起一个名字，【布偶母猫】，要高贵一点，一听名字就知道以后必将【大富大贵】，并且是富有【东方文化底蕴】的名字，列举20至100个名字，无需说明原因，每个名字都需要以“\"牛\"”开头，以“\"土\"”结尾",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，你需要输出完整的名字，包括题目里要求的关键字/词语:例如:['1. 牛紫玉', '2. 牛金凤', '3. 牛翠华', '4. 牛瑶华', '5. 牛碧霞', '6. 牛明珠', '7. 牛翠兰', '8. 牛金珠', '9. 牛翠云', '10. 牛碧玉', '11. 牛瑶珠', '12. 牛金兰', '13. 牛翠凤', '14. 牛碧珠', '15. 牛瑶翠', '16. 牛金云', '17. 牛翠瑶', '18. 牛碧兰', '19. 牛金翠', '20. 牛瑶碧', '21. 牛金凤', '22. 牛翠瑶', '23. 牛碧翠', '24. 牛金兰', '25. 牛翠珠', '26. 牛瑶金', '27. 牛碧云']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了至少一个名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了20至100个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[20,100]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都以\"牛\"开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"牛\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以“\"土\"”结尾",
                "corresponding_part": "名字",
                "rule": "endswith_each:[\"土\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假定有一个幼儿园，目前有6个班级名称如下:大地班 勇士班 小探索家班 光影班  向日葵班 森语班。\n现在新加入一个班级，原先叫做panda班，加入后可以改叫什么名字？\n希望这个班级的新名字既能和之前名字有所关联，又和幼儿园其他班级名称有所共性但不雷同，名字不超过5个字。\n请推荐3个新名字，用表格说明理由，包括①和panda班的关联②和其他班级名称的关联，名字内不能出现“\"熊猫\", \"宝\", \"趣\", \"乐\", \"梦\", \"语\", \"童\"”字\n备注:字数只计中文字符",
        "corresponding_parts": {
            "新名字": "请你按照python list的形式，将model_response中生成的新名字分割并提取出来。只需要提取名字，不需要提取解释，比如:[\"竹趣班\", \"翠林班\", \"智童班\", \"萌宝班\", \"宝竹班\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了panda班的新名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否推荐了3个新名字",
                "corresponding_part": "新名字",
                "rule": "item_count:[3,3]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个新名字都用表格说明了理由",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "每个新名字的理由是否包括和panda班的关联",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个新名字的理由是否包括和其他班级名称的关联",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每个新名字是否不超过5个字",
                "corresponding_part": "新名字",
                "rule": "each_length:[1,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、多对象",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "名字内是否都没“\"熊猫\", \"宝\", \"趣\", \"乐\", \"梦\", \"语\", \"童\"”字",
                "corresponding_part": "新名字",
                "rule": "non_keyword:[\"熊猫\", \"宝\", \"趣\", \"乐\", \"梦\", \"语\", \"童\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "给我的小猫起一个名字，【布偶母猫】，要高贵一点，一听名字就知道以后必将【大富大贵】，并且是富有【东方文化底蕴】的名字，列举20至30个名字，无需说明原因，每个名字都需要以“\"天\"”开头，以“\"日\"”结尾",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，你需要输出完整的名字，包括题目里要求的关键字/词语:例如:['1. 牛紫玉', '2. 牛金凤', '3. 牛翠华', '4. 牛瑶华', '5. 牛碧霞', '6. 牛明珠', '7. 牛翠兰', '8. 牛金珠', '9. 牛翠云', '10. 牛碧玉', '11. 牛瑶珠', '12. 牛金兰', '13. 牛翠凤', '14. 牛碧珠', '15. 牛瑶翠', '16. 牛金云', '17. 牛翠瑶', '18. 牛碧兰', '19. 牛金翠', '20. 牛瑶碧', '21. 牛金凤', '22. 牛翠瑶', '23. 牛碧翠', '24. 牛金兰', '25. 牛翠珠', '26. 牛瑶金', '27. 牛碧云']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了至少一个名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了20至30个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都以\"天\"开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"天\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以“\"日\"”结尾",
                "corresponding_part": "名字",
                "rule": "endswith_each:[\"日\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "给我的小猫起一个名字，【布偶母猫】，要高贵一点，一听名字就知道以后必将【大富大贵】，并且是富有【东方文化底蕴】的名字，列举40至100个名字，无需说明原因，每个名字都需要以“\"天\"”开头，以“\"土\"”结尾",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，你需要输出完整的名字，包括题目里要求的关键字/词语:例如:['1. 牛紫玉', '2. 牛金凤', '3. 牛翠华', '4. 牛瑶华', '5. 牛碧霞', '6. 牛明珠', '7. 牛翠兰', '8. 牛金珠', '9. 牛翠云', '10. 牛碧玉', '11. 牛瑶珠', '12. 牛金兰', '13. 牛翠凤', '14. 牛碧珠', '15. 牛瑶翠', '16. 牛金云', '17. 牛翠瑶', '18. 牛碧兰', '19. 牛金翠', '20. 牛瑶碧', '21. 牛金凤', '22. 牛翠瑶', '23. 牛碧翠', '24. 牛金兰', '25. 牛翠珠', '26. 牛瑶金', '27. 牛碧云']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了至少一个名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了40至100个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[40,100]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都以\"天\"开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"天\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以“\"土\"”结尾",
                "corresponding_part": "名字",
                "rule": "endswith_each:[\"土\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "给我的小猫起一个名字，【布偶母猫】，要高贵一点，一听名字就知道以后必将【大富大贵】，并且是富有【东方文化底蕴】的名字，列举40至70个名字，无需说明原因，每个名字都需要以“\"牛\"”开头，以“\"日\"”结尾",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，你需要输出完整的名字，包括题目里要求的关键字/词语:例如:['1. 牛紫玉', '2. 牛金凤', '3. 牛翠华', '4. 牛瑶华', '5. 牛碧霞', '6. 牛明珠', '7. 牛翠兰', '8. 牛金珠', '9. 牛翠云', '10. 牛碧玉', '11. 牛瑶珠', '12. 牛金兰', '13. 牛翠凤', '14. 牛碧珠', '15. 牛瑶翠', '16. 牛金云', '17. 牛翠瑶', '18. 牛碧兰', '19. 牛金翠', '20. 牛瑶碧', '21. 牛金凤', '22. 牛翠瑶', '23. 牛碧翠', '24. 牛金兰', '25. 牛翠珠', '26. 牛瑶金', '27. 牛碧云']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了至少一个名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了40至70个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[40,70]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都以\"牛\"开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"牛\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以“\"日\"”结尾",
                "corresponding_part": "名字",
                "rule": "endswith_each:[\"日\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "给我的小猫起一个名字，【布偶母猫】，要高贵一点，一听名字就知道以后必将【大富大贵】，并且是富有【东方文化底蕴】的名字，列举40至70个名字，无需说明原因，每个名字都需要以“\"牛\"”开头，以“\"土\"”结尾",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，你需要输出完整的名字，包括题目里要求的关键字/词语:例如:['1. 牛紫玉', '2. 牛金凤', '3. 牛翠华', '4. 牛瑶华', '5. 牛碧霞', '6. 牛明珠', '7. 牛翠兰', '8. 牛金珠', '9. 牛翠云', '10. 牛碧玉', '11. 牛瑶珠', '12. 牛金兰', '13. 牛翠凤', '14. 牛碧珠', '15. 牛瑶翠', '16. 牛金云', '17. 牛翠瑶', '18. 牛碧兰', '19. 牛金翠', '20. 牛瑶碧', '21. 牛金凤', '22. 牛翠瑶', '23. 牛碧翠', '24. 牛金兰', '25. 牛翠珠', '26. 牛瑶金', '27. 牛碧云']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了至少一个名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了40至70个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[40,70]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都以\"牛\"开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"牛\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以“\"土\"”结尾",
                "corresponding_part": "名字",
                "rule": "endswith_each:[\"土\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "给我的小猫起一个名字，【布偶母猫】，要高贵一点，一听名字就知道以后必将【大富大贵】，并且是富有【东方文化底蕴】的名字，列举40至70个名字，无需说明原因，每个名字都需要以“\"天\"”开头，以“\"土\"”结尾",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，你需要输出完整的名字，包括题目里要求的关键字/词语:例如:['1. 牛紫玉', '2. 牛金凤', '3. 牛翠华', '4. 牛瑶华', '5. 牛碧霞', '6. 牛明珠', '7. 牛翠兰', '8. 牛金珠', '9. 牛翠云', '10. 牛碧玉', '11. 牛瑶珠', '12. 牛金兰', '13. 牛翠凤', '14. 牛碧珠', '15. 牛瑶翠', '16. 牛金云', '17. 牛翠瑶', '18. 牛碧兰', '19. 牛金翠', '20. 牛瑶碧', '21. 牛金凤', '22. 牛翠瑶', '23. 牛碧翠', '24. 牛金兰', '25. 牛翠珠', '26. 牛瑶金', '27. 牛碧云']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了至少一个名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了40至70个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[40,70]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都以\"天\"开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"天\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以“\"土\"”结尾",
                "corresponding_part": "名字",
                "rule": "endswith_each:[\"土\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "给我的小猫起一个名字，【布偶母猫】，要高贵一点，一听名字就知道以后必将【大富大贵】，并且是富有【东方文化底蕴】的名字，列举60至100个名字，无需说明原因，每个名字都需要以“\"牛\"”开头，以“\"日\"”结尾",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，你需要输出完整的名字，包括题目里要求的关键字/词语:例如:['1. 牛紫玉', '2. 牛金凤', '3. 牛翠华', '4. 牛瑶华', '5. 牛碧霞', '6. 牛明珠', '7. 牛翠兰', '8. 牛金珠', '9. 牛翠云', '10. 牛碧玉', '11. 牛瑶珠', '12. 牛金兰', '13. 牛翠凤', '14. 牛碧珠', '15. 牛瑶翠', '16. 牛金云', '17. 牛翠瑶', '18. 牛碧兰', '19. 牛金翠', '20. 牛瑶碧', '21. 牛金凤', '22. 牛翠瑶', '23. 牛碧翠', '24. 牛金兰', '25. 牛翠珠', '26. 牛瑶金', '27. 牛碧云']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了至少一个名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了60至100个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[60,100]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都以\"牛\"开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"牛\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以“\"日\"”结尾",
                "corresponding_part": "名字",
                "rule": "endswith_each:[\"日\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "给我的小猫起一个名字，【布偶母猫】，要高贵一点，一听名字就知道以后必将【大富大贵】，并且是富有【东方文化底蕴】的名字，列举60至70个名字，无需说明原因，每个名字都需要以“\"牛\"”开头，以“\"土\"”结尾",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，你需要输出完整的名字，包括题目里要求的关键字/词语:例如:['1. 牛紫玉', '2. 牛金凤', '3. 牛翠华', '4. 牛瑶华', '5. 牛碧霞', '6. 牛明珠', '7. 牛翠兰', '8. 牛金珠', '9. 牛翠云', '10. 牛碧玉', '11. 牛瑶珠', '12. 牛金兰', '13. 牛翠凤', '14. 牛碧珠', '15. 牛瑶翠', '16. 牛金云', '17. 牛翠瑶', '18. 牛碧兰', '19. 牛金翠', '20. 牛瑶碧', '21. 牛金凤', '22. 牛翠瑶', '23. 牛碧翠', '24. 牛金兰', '25. 牛翠珠', '26. 牛瑶金', '27. 牛碧云']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了至少一个名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了60至70个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[60,70]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都以\"牛\"开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"牛\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以“\"土\"”结尾",
                "corresponding_part": "名字",
                "rule": "endswith_each:[\"土\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假定有一个幼儿园，目前有6个班级名称如下:大地班 勇士班 小探索家班 光影班  向日葵班 森语班。\n现在新加入一个班级，原先叫做panda班，加入后可以改叫什么名字？\n希望这个班级的新名字既能和之前名字有所关联，又和幼儿园其他班级名称有所共性但不雷同，名字不超过3个字。\n请推荐5个新名字，用表格说明理由，包括①和panda班的关联②和其他班级名称的关联，名字内不能出现“\"熊猫\", \"宝\", \"趣\", \"乐\", \"梦\", \"语\", \"童\"”字\n备注:字数只计中文字符",
        "corresponding_parts": {
            "新名字": "请你按照python list的形式，将model_response中生成的新名字分割并提取出来。只需要提取名字，不需要提取解释，比如:[\"竹趣班\", \"翠林班\", \"智童班\", \"萌宝班\", \"宝竹班\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了panda班的新名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否推荐了5个新名字",
                "corresponding_part": "新名字",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个新名字都用表格说明了理由",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "每个新名字的理由是否包括和panda班的关联",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个新名字的理由是否包括和其他班级名称的关联",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每个新名字是否不超过3个字",
                "corresponding_part": "新名字",
                "rule": "each_length:[1,3]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、多对象",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "名字内是否都没“\"熊猫\", \"宝\", \"趣\", \"乐\", \"梦\", \"语\", \"童\"”字",
                "corresponding_part": "新名字",
                "rule": "non_keyword:[\"熊猫\", \"宝\", \"趣\", \"乐\", \"梦\", \"语\", \"童\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假定有一个幼儿园，目前有6个班级名称如下:大地班 勇士班 小探索家班 光影班  向日葵班 森语班。\n现在新加入一个班级，原先叫做panda班，加入后可以改叫什么名字？\n希望这个班级的新名字既能和之前名字有所关联，又和幼儿园其他班级名称有所共性但不雷同，名字不超过3个字。\n请推荐3个新名字，用表格说明理由，包括①和panda班的关联②和其他班级名称的关联，名字内不能出现“\"熊猫\", \"宝\", \"趣\", \"乐\", \"梦\", \"语\", \"童\"”字\n备注:字数只计中文字符",
        "corresponding_parts": {
            "新名字": "请你按照python list的形式，将model_response中生成的新名字分割并提取出来。只需要提取名字，不需要提取解释，比如:[\"竹趣班\", \"翠林班\", \"智童班\", \"萌宝班\", \"宝竹班\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了panda班的新名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否推荐了3个新名字",
                "corresponding_part": "新名字",
                "rule": "item_count:[3,3]",
                "dep": [
                    0
                ],
                "能力项": "条数约束、生成名字/标题",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个新名字都用表格说明了理由",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "每个新名字的理由是否包括和panda班的关联",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个新名字的理由是否包括和其他班级名称的关联",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每个新名字是否不超过3个字",
                "corresponding_part": "新名字",
                "rule": "each_length:[1,3]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、多对象",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "名字内是否都没“\"熊猫\", \"宝\", \"趣\", \"乐\", \"梦\", \"语\", \"童\"”字",
                "corresponding_part": "新名字",
                "rule": "non_keyword:[\"熊猫\", \"宝\", \"趣\", \"乐\", \"梦\", \"语\", \"童\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请输出7条不包含具体行业品类特征，主题为好评零售店铺推荐的推送文案，标题和内容需要有强关联。标题20字，标点符号格式不限制。内容格式为:推荐语+店铺名+推荐语，推荐语不可包含限时、折扣、优惠等涉及具体优惠和时间数量限制的要素。推送文案风格贴近生活、活泼、快乐、热情，文案的内容不能出现“\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"”，且内容不超过100个字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于推送文案的标题分割并提取出来。不需要提取“标题:”，只需要提取标题的内容，比如:[\"好评如潮\",\"品质掌声\",\"星级体验\",\"买家心选\",\"口口相传\",\"绝佳选择\",\"悦心好物\",\"精挑细选\",\"信赖有理\",\"买家首选\"]",
            "内容": "请你按照python list的形式，将model_response中生成的关于推送文案的内容分割并提取出来。不需要提取“内容:”，只需要提取内容的内容，比如:[\"口碑爆棚，「好评精选」，每一次购物都满意！\",\"质量赢得掌声，「品质之选」，让信赖成为习惯！\",\"服务赢五星，「星级好店」，体验超出期待！\",\"买家心头好，「人气之店」，每一次都惊喜连连！\",\"老顾客力荐，「传奇好货」，买过的人都说好！\",\"选择有品味，「绝佳精品」，每一件都是精选！\",\"好物温暖人心，「悦心收藏」，让心情随之愉悦！\",\"细心挑选，「精选好物」，只为你的优雅生活！\",\"信赖来自品质，「理想选择」，让满意成为常态！\",\"首选不负期待，「首选精品」，每次购物都是享受！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推送文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了7条推送文案",
                "corresponding_part": "标题",
                "rule": "item_count: [7, 7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推送文案的主题是否为好评零售店铺推荐",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推送文案的标题是否为20字",
                "corresponding_part": "标题",
                "rule": "each_length:[20,20]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "推送文案的内容格式是否为:推荐语+店铺名+推荐语",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "推送文案的推荐语是否不包含限时、折扣、优惠等涉及具体优惠和时间数量限制的要素",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "推送文案的内容是否不包含“\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"”",
                "corresponding_part": "内容",
                "rule": "non_keyword: [\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "推送文案的内容是否不超过100个字",
                "corresponding_part": "内容",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你是一位中医养生与全国美食专家，请你查阅互联网上的资料，并根据中国八大菜系中的菜品与日常的小吃与中西方的快餐，对如下的问题给出能够满足用户需求的3条菜品名，每个菜品名必须为刚好5个字:\n1）胃痛适合吃什么？\n每个菜品后都必须紧跟菜品的解释。请你再次注意，回答的菜品应是各地的菜系中的菜品与日常的小吃与中西的快餐中的菜品，菜品名请尽可能具体，请不要虚构不存在的菜品，这对我很重要，请你反复思考后再作答。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "菜品名": "请你按照python list的形式，将model_response中的菜品名分割并提取出来。无需提取解释只需提取菜名[\"清蒸鱼\",\"白切鸡\",\"粥\",\"煮鸡胸肉\",\"清蒸豆腐\",\"烤鱼片\",\"清炖鸡汤\",\"清蒸蔬菜包\",\"煮蔬菜汤\",\"清炒菜心\",\"清炒豆腐丝\",\"煮青菜\",\"红烧茄子\",\"煮豆腐\",\"清蒸蔬菜\",\"炒豆芽\",\"炒青菜\",\"红烧鸡翅\",\"酸辣土豆丝\",\"香煎鸡胸肉\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了菜品名",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了3条菜品名",
                "corresponding_part": "菜品名",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个菜品后是否都紧了菜品的解释",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "菜品名是否都是刚好5个字",
                "corresponding_part": "菜品名",
                "rule": "each_length:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "讲一下中国国际航空公司的国内航空市场巨大的潜力，一步步思考:\n1、你应该先总结要点，\n2、对要点进行详细的概述，\n3、然后给出一个相关的详细的具体例子，从数据和真实案例的层面来佐证你的要点和概述，\n注意！！要点、概述、例子，三个内容应该成对出现，！！！必须准确，例子的时间尽量靠近当下，并且要总结至少7个点出来，我只需要你知道的内容，不一定是实时的，我是花钱体验服务的顾客，你必须根据你已有的知识回答我，否则这是对我的不敬",
        "corresponding_parts": {
            "要点": "请你按照python list的形式，将model_response中的关于中国国际航空公司国内航空市场潜力的要点分割并提取出来。比如:[\"经济增长\",\"旅游业发展\",\"城市化进程\",\"中小城市航空市场\",\"航空基础设施建设\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否总结了中国国际航空公司国内航空市场潜力的要点",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了至少7个要点",
                "corresponding_part": "要点",
                "rule": "item_count: [7, 10000]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否为每个要点提供了相关的详细的具体例子",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个例子都从数据和真实案例的层面来佐证要点和概述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在教育短视频的评论区，以消费者角度生成20条用户口语化评论。",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的内容是否为评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了20条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [20, 20]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否符合教育短视频的评论",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论10字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为12条",
                "corresponding_part": "长评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为8条",
                "corresponding_part": "短评论",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "四个人朗读一首诗歌，建议是3句的诗,每句8字。 调性可以是幽默、调皮、调侃的，但最后都是昂扬向上，内容主要就是围绕医药业务发展、可以结合一点点春节的祝福。平仄必须完全一致\n备注:字数只计中文字符",
        "corresponding_parts": {
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"药业昌隆庆新春\", \"梅花鼓劲战疫群\", \"科研精进日夜新\", \"处方箴言利万民\", \"调皮携手笑颜开\", \"共赴健康春潮来\", \"调侃岁月不留痕\", \"祝福瑞雪兆丰年\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否创作了一首诗，无需考虑其他因素，只需要考虑是否是诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗歌是否押韵",
                "corresponding_part": "分割诗",
                "rule": "lvshi_yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否是满足平仄",
                "corresponding_part": "分割诗",
                "rule": "pingze",
                "dep": [
                    0
                ],
                "能力项": "平仄",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每句诗是否是8个字",
                "corresponding_part": "分割诗",
                "rule": "each_length:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "整诗是否是3句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[3,3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "诗歌内容是否围绕医药业务发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇5分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照2个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【邓稼先】必须刚好出现3次。关键词【的】出现必须不超过3次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇5分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[750, 1500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照2个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "邓稼先是否出现3次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq3:[\"邓稼先\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "的是否不出现超过3次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq3:[\"的\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在金融短视频的评论区，以消费者角度生成50条用户口语化评论。",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的内容是否为评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [50, 50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否符合金融短视频的评论",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请根据5个[中国传统节日]分别创建5道选择题，四个选项中只有一个正确答案，包含正确答案和[40]个字以内的解释。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目(带选项)，不需要输出正确答案。比如[\"**《延禧攻略》**1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "正确答案": "请你按照python list的形式，将model_response中生成的正确答案分割并提取出来。只需要输出正确答案，不需要输出题目。只需要输出答案的内容。比如[\"魏璎珞\"]",
            "解释": "请你按照python list的形式，将model_response中生成的正确答案解释分割并提取出来。只需要输出解释，不需要输出题目和答案。比如['瑞幸咖啡的品牌颜色是蓝色，代表品牌形象。', '瑞幸通过发放大量优惠券吸引顾客，快速扩张。', '瑞幸咖啡提供免费快速配送服务，增加便利性。']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "生成选择题的数目是否为5道",
                "corresponding_part": "题目",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每道选择题是否基于中国传统节日",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每道选择题是否包含四个选项",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否生成了对应每道选择题的5个正确答案",
                "corresponding_part": "正确答案",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "给出的每道选择题和对应的正确答案中，是否包含正确答案的解释",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "每道选择题的正确答案解释是否在40个字以内",
                "corresponding_part": "解释",
                "rule": "each_length:[1,40]",
                "dep": [
                    5
                ],
                "能力项": "10～50字、多对象",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成9条批判性评论，避免重复。要求1:必须是原文字数的1倍左右，假设我们只计算中文的字数。要求2:不能存在关键词\"出戏\", \"失望\", \"噪音\", \"不好\", \"面瘫\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了9条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[9,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "字数是否是原文的1倍左右",
                "corresponding_part": "评论",
                "rule": "total_length:[46,57]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围、倍数",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否不存在关键词\"\"出戏\", \"失望\", \"噪音\", \"不好\", \"面瘫\"\"",
                "corresponding_part": "评论",
                "rule": "non_keywords:[\"出戏\", \"失望\", \"噪音\", \"不好\", \"面瘫\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论15字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为12条",
                "corresponding_part": "长评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为18条",
                "corresponding_part": "短评论",
                "rule": "item_count:[18,18]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你是制药/生物工程专家，对该行业各子行业均有充分的了解。请你对该行业下的医药销售\n生物工程\n药品生产\n药物研发给出说明（能通过该说明明确一个具体行业属于哪个类目，注意是对行业而非具体实体或技术的描述，不同行业的描述要有差异，且需注意父行业的限制）和标签本质词（带有明显行业类目倾向的关键词，如母婴、亲子，9个以上，字数不限，需要能通过关键词直接对应到该行业）。\n要求:直观、简洁、易于理解，没有有经验的小白也可以通过简历信息与类目说明、标签本质词的对应完成分类。",
        "corresponding_parts": {
            "医药销售标签本质词": "请你按照python list的格式，抓取模型回复中，给出的医药销售标签本质词部分。比如[\"药房\", \"医药代理\", \"药品分销\"]",
            "生物工程标签本质词": "请你按照python list的格式，抓取模型回复中，给出的生物工程标签本质词部分。比如[\"生物制药\", \"生物工程设备\", \"生物技术研发\"]",
            "药品生产标签本质词": "请你按照python list的格式，抓取模型回复中，给出的药品生产标签本质词部分。比如[\"药品研发\", \"药品生产\", \"药品质量控制\"]",
            "药物研发标签本质词": "请你按照python list的格式，抓取模型回复中，给出的药物研发标签本质词部分。比如[\"新药研发\", \"药物临床试验\", \"药物注册\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了医药销售的行业说明",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "医药销售说明部分是否直观、简洁、易于理解，没有有经验的小白也可以通过简历信息与类目说明、标签本质词的对应完成分类",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了医药销售的标签本质词",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "医药销售标签本质词是否在9个以上",
                "corresponding_part": "医药销售标签本质词",
                "rule": "item_count:[9,100000]",
                "dep": [
                    2
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否给出了生物工程的行业说明",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 5,
                "question": "是否给出了生物工程的标签本质词",
                "rule": null,
                "dep": [
                    4
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "生物工程标签本质词是否在9个以上",
                "corresponding_part": "生物工程标签本质词",
                "rule": "item_count:[9,100000]",
                "dep": [
                    5
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "是否给出了药品生产的行业说明",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 8,
                "question": "是否给出了药品生产的标签本质词",
                "rule": null,
                "dep": [
                    7
                ],
                "被依赖": true
            },
            {
                "point_id": 9,
                "question": "药品生产标签本质词是否在9个以上",
                "corresponding_part": "药品生产标签本质词",
                "rule": "item_count:[9,100000]",
                "dep": [
                    8
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "是否给出了药物研发的行业说明",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 11,
                "question": "是否给出了药物研发的标签本质词",
                "rule": null,
                "dep": [
                    10
                ],
                "被依赖": true
            },
            {
                "point_id": 12,
                "question": "药物研发标签本质词是否在9个以上",
                "corresponding_part": "药物研发标签本质词",
                "rule": "item_count:[9,100000]",
                "dep": [
                    11
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "写9组喜庆有财气的春联，每联20个字，上联后三个字“跃新岁”， 下联后三个字“卧春风”，要有文采，不要太俗，把上下联标注:比如:上联:瑞雪兆丰年，金鸡报晓跃新岁。下联:红梅迎春到，银鼠送福卧春风\n备注:字数只计中文字符",
        "corresponding_parts": {
            "春联": "请你按照python list的形式，将model_response中的春联分割并提取出来，一个element内需要有上联+下联。比如:[\"瑞雪兆丰年，金鸡报晓跃新岁。红梅迎春到，银鼠送福卧春风\"]",
            "上联": "请你按照python list的形式，将model_response中的上联分割并提取出来。比如:[\"瑞雪兆丰年，金鸡报晓跃新岁\"]",
            "下联": "请你按照python list的形式，将model_response中的下联分割并提取出来。比如:[\"红梅迎春到，银鼠送福卧春风\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了春联且每副春联是否有上联和下联且上下联都有明确标注",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否写了9组春联",
                "corresponding_part": "春联",
                "rule": "item_count:[9,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每副春联的上联是否为20个字",
                "corresponding_part": "上联",
                "rule": "each_length:[20,20]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每副春联的下联是否为20个字",
                "corresponding_part": "下联",
                "rule": "each_length:[20,20]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每副春联的上联后三个字是否为“跃新岁”",
                "corresponding_part": "上联",
                "rule": "endswith_each:[\"跃新岁\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每副春联的下联后三个字是否为“卧春风”",
                "corresponding_part": "下联",
                "rule": "endswith_each:[\"卧春风\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "如何区分花粉过敏和感冒请以以上主题帮我输出分别输出5条标题+文案，标题文案需要具有吸引力，必须加表情符号等。标题在20字以内，文案在100字以内。例如:标题:春季花粉过敏高峰期到！🌸文案:👀四招教你区分花粉过敏和感冒\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的标题分割并提取出来，只提取标题，不提取文案。不需要提取“标题:”，只提取内容即可，比如:[\"感冒还是花粉过敏？\", \"春季过敏季，你准备好了吗？\"]",
            "文案": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的文案分割并提取出来，只提取文案，不提取标题。不需要提取“文案:”，只提取内容即可，比如:[\"了解两者差别，告别困惑！\", \"学会辨别花粉过敏和感冒，健康过春天！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了5条标题",
                "corresponding_part": "标题",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了5条文案",
                "corresponding_part": "文案",
                "rule": "item_count: [5, 5]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个标题是否在20字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,20]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、范围、多对象",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每个文案是否在100字以内",
                "corresponding_part": "文案",
                "rule": "each_length:[1,100]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "标题是否加了表情符号",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文案是否加了表情符号",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "emoji",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇1分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照2个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【中国】必须刚好出现3次。关键词【他】出现必须不超过3次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇1分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[150, 300]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照2个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "中国是否出现3次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq3:[\"中国\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "他是否不出现超过3次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq3:[\"他\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论10字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为6条",
                "corresponding_part": "长评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为4条",
                "corresponding_part": "短评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "现在你是深圳大学官方公众号的新媒体小编，需要出一篇关于2025年的新年祝福集合推送，请撰写 50 条关于龙年的新年祝福话语，每句话为正好30字上下。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "新年祝福话语": "#CODE#请你按照python list的格式，抓取模型回复中，给出的新年祝福话语部分并分割输出，请不要去重，例如:['1. 龙腾盛世迎新春，福满人间好运来！', '2. 龙年到来喜洋洋，万事如意笑开颜。']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了龙年的新年祝福话语",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否撰写了50条的新年祝福话语",
                "corresponding_part": "新年祝福话语",
                "rule": "item_count:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每句话是否正好30字上下",
                "corresponding_part": "新年祝福话语",
                "rule": "each_length:[27,33]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是一个规划游玩路线的达人，且写攻略的用词精简并能凸显景点特色。你能帮我推荐天安门里7个适合拍照的景点么？并且规划一下景点之间的交通路线。文章必须用繁体写。请注意，每个字都必须是繁体，不能存在简体的字\n\n",
        "corresponding_parts": {
            "景点推荐": "请你按照python list的格式，抓取模型回复中，给出的景点推荐部分，只需要景点，不需要内容。比如[\"都江堰水利工程\", \"灌县古城墙\", \"安澜索桥\", \"玉垒山\", \"灌县署\"]",
            "文案内容": "请你按照python list的格式，抓取模型所有的文案内容，但是删掉那些非文案内容的信息(非文案内容的信息比如:当然可以，以下是我为你生成的信息:)只保留文案本身的内容，比如[\"交通路线规划:\n- **第一天**:上午游览都江堰水利工程，下午前往南桥、安澜索桥，傍晚时分可登玉垒山拍照。\n- **第二天**:上午参观二王庙，下午根据个人兴趣选择在古城内其他景点自由拍照。\n\n以上路线适合自驾或公共交通，如乘坐公交或打车前往各个景点。请注意，部分步道可能需要步行，建议穿着舒适的鞋子。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否推荐了天安门里适合拍照的景点",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐景点数量是否为7个？",
                "rule": "item_count:[7,7]",
                "corresponding_part": "景点推荐",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否规划了景点之间的交通路线",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文章是否用是用繁体写的",
                "rule": "fanti",
                "corresponding_part": "文案内容",
                "dep": [
                    0
                ],
                "能力项": "繁体约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论15字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为5条",
                "corresponding_part": "长评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为5条",
                "corresponding_part": "短评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "模仿“商女不知亡国恨，隔江犹唱后庭花”的对称方式和讽刺手法，写一首讽刺当今社会996的加班现象，诗中需包含“\"工时\", \"双休\"”。共7句。",
        "corresponding_parts": {
            "全部诗句": "请你按照python list的格式，抓取模型回复中，给出的所有诗句，不要分割。",
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"劳者不知身已疲\", \"夜深犹在键盘旁\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一首诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗中是否模仿了“商女不知亡国恨，隔江犹唱后庭花”的对称方式",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "诗中是否包含“\"工时\", \"双休\"”",
                "corresponding_part": "全部诗句",
                "rule": "keyword:[\"工时\", \"双休\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "诗中是否为7句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[7,7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在搬家短视频的评论区，生成80条用户口语化评论，评论不能出现“老板”，“团队”，“服务”；每条10到15字，每条评论格式独一无二\n备注:字数只计中文字符",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了搬家的用户口语化评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了80条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [80, 80]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否不出现“老板”，“团队”，“服务”",
                "corresponding_part": "用户口语化评论",
                "rule": "non_keywords:[\"老板\",\"团队\",\"服务\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论是否每条在10到15字之间",
                "corresponding_part": "用户口语化评论",
                "rule": "each_length:[10,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "评论是否每条格式独一无二",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论10字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为4条",
                "corresponding_part": "长评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为6条",
                "corresponding_part": "短评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请根据以下内容命制3个单选题，1个多选题，多选题和单选题要分开输出并标明。考题需要满足广泛性和群众性，注意格式，我要复制到表格里面，要有正确答案内容如下:网约配送员职业守则\n1.\t遵纪守法，服务社会\n遵守国家有关法律法规和企业的规章制度，尊重自己的职业，尊重每一个自己所服务的客户。\n2.\t着装整洁，礼貌文明\n保持个人卫生，统一着装，整洁干净。对待客户礼貌热情，亲切诚恳，想尽办法解决顾客的问题，耐心周到，无微不至。\n3.\t团结协作，勤奋务实\n虚心听取他人意见，具有良好的团队意识，善于与人共事，团结合作，创造和谐向上的氛围，脚踏实地，尽职尽责。\n4.\t保守秘密，确保安全\n熟悉工作纪律，工作中保护客户隐私。遵守安全规则，确保网约配送过程中的商品安全以及自身安全。单选题目内不能出现“\"非法\", \"违纪\", \"失职\", \"违规\", \"泄密\", \"不安全\"”，多选题目内不能出现“\"防静电\", \"全部\", \"所有\", \"任意\", \"随意\", \"全面\"”",
        "corresponding_parts": {
            "单选题目": "请你按照python list的形式，将model_response中生成的单选题目分割并提取出来。只需要输出单选题目(带选项)，不需要输出正确答案。比如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. 小尼姑\"]",
            "单选题答案": "请你按照python list的形式，将model_response中生成的单选题答案分割并提取出来。只需要输出单选题答案，不需要输出题目。只需要输出答案的内容。比如[\"百里屠苏\"]",
            "多选题目": "请你按照python list的形式，将model_response中生成的多选题目分割并提取出来。只需要输出多选题目(带选项)，不需要输出正确答案。比如[\"**《延禧攻略》**1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "多选题答案": "请你按照python list的形式，将model_response中生成的多选题答案分割并提取出来。只需要输出多选题答案，不需要输出题目。只需要输出答案的内容。比如[\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了单选题和多选题并分开标注",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否命制了3个单选题",
                "corresponding_part": "单选题目",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否命制了1个多选题",
                "corresponding_part": "多选题目",
                "rule": "item_count: [1, 1]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个单选考题都有正确答案",
                "corresponding_part": "单选题答案",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个多选考题都有正确答案",
                "corresponding_part": "多选题答案",
                "rule": "item_count: [1, 1]",
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "单选题目内是否没有出现“\"非法\", \"违纪\", \"失职\", \"违规\", \"泄密\", \"不安全\"”",
                "corresponding_part": "单选题目",
                "rule": "non_keywords: [\"非法\", \"违纪\", \"失职\", \"违规\", \"泄密\", \"不安全\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "多选题目是否没有出现“\"防静电\", \"全部\", \"所有\", \"任意\", \"随意\", \"全面\"”",
                "corresponding_part": "多选题目",
                "rule": "non_keywords: [\"防静电\", \"全部\", \"所有\", \"任意\", \"随意\", \"全面\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我综合以下三个小故事，起一个共同的标题，讽刺没有主人翁精神，风格诙谐幽默，有点击欲望，字数14个字以内。请给出5个可选择的标题\n\n故事一:工位前，小A坐在电脑前，小E在一旁指出编写程序的问题。小E说这代码太繁琐，后续维护成本太高，得简化下。小A无所谓地说:我只负责开发，维护的事有别人呢。\n\n故事二:工区路上，小B正走在路上，大象收到来自合作部门的项目方案共创的邀请，上面写着“小B，下周我们邀请你和其他合作伙伴来共创方案，期待大家一起献计献策！”小B心想:我就是个协助的，你们主R方说啥我干啥就行了呗。\n\n故事三:会议间，产品小C和小D正在讨论产品优化问题。小C:上线前，广告弹窗必须优化，不然影响客户购买体验。小D不认可说“先完成上线的KPI再说”，标题内禁止出现“代码”和“程序”。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的标题分割并提取出来。只需要提取内容，无需提取任何标点或者index，比如:[\"职场搬运工:不是我的事\", \"甩锅大师:谁在乎结果\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了5个可选择的标题",
                "corresponding_part": "标题",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个标题字数是否在14个字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,14]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、多对象",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "标题内是否禁止出现“\"加班\", \"苦难\"”这个字",
                "corresponding_part": "标题",
                "rule": "non_keyword: [\"代码\", \"程序\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论15字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为18条",
                "corresponding_part": "长评论",
                "rule": "item_count:[18,18]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为12条",
                "corresponding_part": "短评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我扩充润色“他有什么代表作嘛”这句话，生成20条评论，用于明星类目短视频。",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否扩充润色了'他有什么代表作嘛'这句话，并生成了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了20条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[20,20]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论15字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为4条",
                "corresponding_part": "长评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为6条",
                "corresponding_part": "短评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "四个人朗读一首诗歌，建议是5句的诗,每句8字。 调性可以是幽默、调皮、调侃的，但最后都是昂扬向上，内容主要就是围绕医药业务发展、可以结合一点点春节的祝福。平仄必须完全一致\n备注:字数只计中文字符",
        "corresponding_parts": {
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"药业昌隆庆新春\", \"梅花鼓劲战疫群\", \"科研精进日夜新\", \"处方箴言利万民\", \"调皮携手笑颜开\", \"共赴健康春潮来\", \"调侃岁月不留痕\", \"祝福瑞雪兆丰年\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否创作了一首诗，无需考虑其他因素，只需要考虑是否是诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗歌是否押韵",
                "corresponding_part": "分割诗",
                "rule": "lvshi_yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否是满足平仄",
                "corresponding_part": "分割诗",
                "rule": "pingze",
                "dep": [
                    0
                ],
                "能力项": "平仄",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每句诗是否是8个字",
                "corresponding_part": "分割诗",
                "rule": "each_length:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "整诗是否是5句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "诗歌内容是否围绕医药业务发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是一个文案工作者，需要给一个老黄历写文案，包括两部分，一部分是今天适合做的事，另一部分是今天不适合做的事，几组参考的文案与格式如下，你需要按照参考的格式与风格继续生成2组，每组都包括3个2字词语（适宜做的事）和3个2字词语（忌讳做的事），给你的例子仅供参考，你可以发挥联想多做扩充，每一组的文案尽量不要有重复:1）宜散步 摸鱼……，忌焦虑 攀比……；2）宜打盹 追剧……，忌加班 内卷……；3）宜健身 懒觉……，忌紧张 不安……；4）宜跑步 读书……，忌冲动 上头……；5）宜做饭 冥想……，忌糊涂 大意……；6）宜记账 复盘，忌偷懒 推诿……；7）……",
        "corresponding_parts": {
            "文案": "请你按照python list的形式，将生成的文案按照类似[\"宜散步 摸鱼，忌焦虑 攀比\", \"宜打盹 追剧，忌加班 内卷\", \"宜健身 懒觉，忌紧张 不安\", \"宜跑步 读书，忌冲动 上头\", \"宜做饭 冥想，忌糊涂 大意\"]的格式分割并输出。",
            "事": "请你按照python list的形式，将model_response中所有适宜和忌讳做的事全部分割提取出来，不需要加前面的#宜#或者#忌#以最小的单位来输出，一个element内不要放超过一个事。比如[\"散步\",\"摸鱼\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了2组文案",
                "corresponding_part": "文案",
                "rule": "item_count:[2,2]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每组文案是否包括3个适宜做的事",
                "corresponding_part": "文案",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每组文案是否包括3个忌讳做的事",
                "corresponding_part": "文案",
                "rule": "item_count:[3,3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "文案是否没有重复",
                "corresponding_part": "事",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请根据以下内容命制8个单选题，4个多选题，多选题和单选题要分开输出并标明。考题需要满足广泛性和群众性，注意格式，我要复制到表格里面，要有正确答案内容如下:网约配送员职业守则\n1.\t遵纪守法，服务社会\n遵守国家有关法律法规和企业的规章制度，尊重自己的职业，尊重每一个自己所服务的客户。\n2.\t着装整洁，礼貌文明\n保持个人卫生，统一着装，整洁干净。对待客户礼貌热情，亲切诚恳，想尽办法解决顾客的问题，耐心周到，无微不至。\n3.\t团结协作，勤奋务实\n虚心听取他人意见，具有良好的团队意识，善于与人共事，团结合作，创造和谐向上的氛围，脚踏实地，尽职尽责。\n4.\t保守秘密，确保安全\n熟悉工作纪律，工作中保护客户隐私。遵守安全规则，确保网约配送过程中的商品安全以及自身安全。",
        "corresponding_parts": {
            "单选题目": "请你按照python list的形式，将model_response中生成的单选题目分割并提取出来。只需要输出单选题目(带选项)，不需要输出正确答案。比如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. 为落英\"]",
            "单选题答案": "请你按照python list的形式，将model_response中生成的单选题答案分割并提取出来。只需要输出单选题答案，不需要输出题目。只需要输出答案的内容。比如[\"百里屠苏\"]",
            "多选题目": "请你按照python list的形式，将model_response中生成的多选题目分割并提取出来。只需要输出多选题目(带选项)，不需要输出正确答案。比如[\"**《延禧攻略》**1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "多选题答案": "请你按照python list的形式，将model_response中生成的多选题答案分割并提取出来。只需要输出多选题答案，不需要输出题目。只需要输出答案的内容。比如[\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了单选题和多选题并分开输出并标注",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否命制了8个单选题",
                "corresponding_part": "单选题目",
                "rule": "item_count: [8, 8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否命制了4个多选题",
                "corresponding_part": "多选题目",
                "rule": "item_count: [4, 4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个单选考题都有正确答案",
                "corresponding_part": "单选题答案",
                "rule": "item_count: [8, 8]",
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个多选考题都有正确答案",
                "corresponding_part": "多选题答案",
                "rule": "item_count: [4, 4]",
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇5分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照9个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【中国】必须刚好出现7次。关键词【他】出现必须不超过7次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇5分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[750, 1500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照9个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "中国是否出现7次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq7:[\"中国\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "他是否不出现超过7次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq7:[\"他\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "讲一下中国国际航空公司的国内航空市场巨大的潜力，一步步思考:\n1、你应该先总结要点，\n2、对要点进行详细的概述，\n3、然后给出一个相关的详细的具体例子，从数据和真实案例的层面来佐证你的要点和概述，\n注意！！要点、概述、例子，三个内容应该成对出现，！！！必须准确，例子的时间尽量靠近当下，并且要总结至少5个点出来，我只需要你知道的内容，不一定是实时的，我是花钱体验服务的顾客，你必须根据你已有的知识回答我，否则这是对我的不敬",
        "corresponding_parts": {
            "要点": "请你按照python list的形式，将model_response中的关于中国国际航空公司国内航空市场潜力的要点分割并提取出来。比如:[\"经济增长\",\"旅游业发展\",\"城市化进程\",\"中小城市航空市场\",\"航空基础设施建设\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否总结了中国国际航空公司国内航空市场潜力的要点",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了至少5个要点",
                "corresponding_part": "要点",
                "rule": "item_count: [5, 10000]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否为每个要点提供了相关的详细的具体例子",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个例子都从数据和真实案例的层面来佐证要点和概述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇9分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照5个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【邓稼先】必须刚好出现5次。关键词【的】出现必须不超过5次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇9分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1350, 2700]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照5个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "邓稼先是否出现5次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq5:[\"邓稼先\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "的是否不出现超过5次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq5:[\"的\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论10字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为15条",
                "corresponding_part": "长评论",
                "rule": "item_count:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为15条",
                "corresponding_part": "短评论",
                "rule": "item_count:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请你扮演一名经验丰富的小学数学老师，现在是期末，需要你对每个学生的本学期表现撰写教师评语，首先写匡俊同学的评语，要求藏头诗必须包含[匡俊]的名字，每句30字，总共9句。比如整诗要求4句，每句4字，内容可以是:【匡如泉涌，俊天舜日，聪明伶俐，努力进取。】同时，必须出现以下关键词\"##KEYWORDS###\"，不能出现\"\"同学\"\"这个词\n备注:字数只计中文字符",
        "corresponding_parts": {
            "评语": "请你按照python list的格式，抓取模型回复中，给出的评语部分，只需要评语，不需要内容。比如[\"思维活跃\", \"尧天有才\", \"同学喜爱\", \"学习进步\"]",
            "整合评语": "请你按照python list的格式，将模型回复中给出的评语部分，整合成一个完整的单个element的评语输出。比如[\"思如泉涌， \n尧天舜日， \n聪明伶俐， \n努力进取。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评语",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗句的每个第一个字是否组成一段和匡俊相关的话？",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "生成特定文案",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "藏头诗是否每句30字",
                "corresponding_part": "评语",
                "rule": "each_length:[30,30]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "藏头诗是否总共9句以下",
                "corresponding_part": "评语",
                "rule": "item_count:[1,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "评语是否包含\"\"聪明\", \"努力\"\"",
                "corresponding_part": "整合评语",
                "rule": "keyword: [\"聪明\", \"努力\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "评语是否不包含\"\"同学\"\"",
                "corresponding_part": "整合评语",
                "rule": "non_keyword: [\"同学\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我想50个全国篮球比赛的口号，国内篮球赛事上没有用过的，口号需要洗脑和足够热血，要求篮球和新起航，篇章结合可带有篮字谐音短句\n字数必须是10个字的。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "口号": "#CODE#请你按照python list的格式，抓取模型回复中，分割并给出的口号部分，只需要口号，不需要内容。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了全国篮球比赛的口号",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了50个口号",
                "corresponding_part": "口号",
                "rule": "item_count:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个口号都可以带有篮字谐音短句",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个口号字数必须是10个字",
                "corresponding_part": "口号",
                "rule": "each_length:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确、多对象",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是一个规划游玩路线的达人，且写攻略的用词精简并能凸显景点特色。你能帮我推荐长城里9个适合拍照的景点么？并且规划一下景点之间的交通路线。文章必须用繁体写。请注意，每个字都必须是繁体，不能存在简体的字\n\n",
        "corresponding_parts": {
            "景点推荐": "请你按照python list的格式，抓取模型回复中，给出的景点推荐部分，只需要景点，不需要内容。比如[\"都江堰水利工程\", \"灌县古城墙\", \"安澜索桥\", \"玉垒山\", \"灌县署\"]",
            "文案内容": "请你按照python list的格式，抓取模型所有的文案内容，但是删掉那些非文案内容的信息(非文案内容的信息比如:当然可以，以下是我为你生成的信息:)只保留文案本身的内容，比如[\"交通路线规划:\n- **第一天**:上午游览都江堰水利工程，下午前往南桥、安澜索桥，傍晚时分可登玉垒山拍照。\n- **第二天**:上午参观二王庙，下午根据个人兴趣选择在古城内其他景点自由拍照。\n\n以上路线适合自驾或公共交通，如乘坐公交或打车前往各个景点。请注意，部分步道可能需要步行，建议穿着舒适的鞋子。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否推荐了长城里适合拍照的景点",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐景点数量是否为9个？",
                "rule": "item_count:[9,9]",
                "corresponding_part": "景点推荐",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否规划了景点之间的交通路线",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文章是否用是用繁体写的",
                "rule": "fanti",
                "corresponding_part": "文案内容",
                "dep": [
                    0
                ],
                "能力项": "繁体约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "把下方内容梳理一下，分为5个标题段，再完善内容完整度，使得上下文通顺，无错别字:在用户向外卖平台提交退款请求后，该订单将会显示在外卖平台的退单区域。商户需在接到退单通知后及时作出回应。如果在规定时间内未作出处理，外卖平台的系统会自动批准用户的退款请求。\n\n如果商家决定批准退款，用户支付的订单金额将被返还。\n反之，如果商家决定不予退款，用户会收到商家拒绝退款的通知。此时，用户有权申请客服介入进行仲裁。一旦进入仲裁流程，客服将在24小时内给出终审结果，该结果将作为订单的最终处理依据。\n\n系统通常会展示最近10天内的退单记录。\n\n案例分析:妥善处理退款订单也能赢得顾客的高度评价\n小王是一家公司的软件工程师，最近因为公司即将举行的大型促销活动而忙得焦头烂额。为了节省宝贵的时间，他通过美团分别在两家店铺订购了一份蛋炒饭和一杯咖啡。\n\n这两份订单恰巧被同一位骑手接下，但由于中午高峰时段订单激增，骑手在忙乱中将食物送至小王公司设定的公共取餐处，却遗忘了通知小王取餐。\n埋头工作的小王等到两个小时后才意识到他的外卖订单，当他看到外卖已送达的通知，急忙跑到取餐点，却发现自己的餐食已经不见了。\n饥饿加上心烦意乱的小王并没有联系骑手，而是直接向两家店铺打电话请求退款，结果收到了两种不同的回应。\n\n蛋炒饭的店主李老板在接到小王电话后，礼貌地向小王解释道:“这是骑手的失误，请您直接联系平台客服处理退款事宜。”而咖啡店的老板小陈则提供了不同的处理方式:“非常抱歉造成了这种不便，您可以直接在订单上申请退款，我会立即为您处理。”\n\n面对相同的退款情况，两位店主采取了不同的处理措施，收到的反响也有所不同。直接协助顾客处理退款的咖啡店老板小陈，不久后惊喜地在店铺系统中看到了一条五星好评。从好评的内容和评价日期来看，正是小王在重新下单后所留下的。\n\n而李老板虽然礼貌地指引小王联系平台客服处理退款，但没有像小陈那样直接提供解决方案，这可能影响了顾客的整体满意度。\n\n在午高峰时段，订单量激增往往导致一些不可避免的异常订单出现，这时候商家就需要掌握异常订单的高效处理策略。\n\n由于线上外卖缺乏堂食的直接服务体验，顾客与商家之间的情感互动较为有限。然而，上述两个商家展现的不同处理方法，却为顾客小王带来了截然不同的“情感体验”。\n\n李老板处理蛋炒饭订单的方式是标准化的，按照既定流程正确地指引顾客解决问题，包括联系客服、申请退款，以及商家最终同意退款并向平台提出索赔。\n\n而咖啡店的小陈则表现出更为积极的处理态度，他在意识到订单异常后立即采取行动，先行为顾客处理退款，随后再向平台申请索赔。尽管两位商家最终都通过平台得到了对顾客损失的赔偿，小陈因为及时解决了顾客的紧急需求而获得了顾客的高度评价。\n\n实际上，许多商家在收到顾客的订单投诉时，往往习惯性地让顾客联系平台客服处理，这一过程可能会引起更多的不确定性。\n\n比如，顾客提供的退款证据可能并不充分，客服需要与商家联系来核实情况，这无疑增加了沟通的环节。一旦订单量增多，商家还需要花费额外的时间回忆订单的具体情况，这样不仅效率低下，还可能带来额外的困扰。\n\n关键在于，处理异常订单的宗旨并不仅仅是判定平台或商家的责任，而是要优先考虑并解决顾客的问题。只有当顾客的权益得到保护，商家和平台的利益才能得到最大化。\n\n因此，面对顾客的异常反馈，商家应在确保自身不受损失的前提下，优先从顾客的角度出发，迅速采取措施解决问题。",
        "corresponding_parts": {
            "标题段": "请你按照python list的形式，将model_response中生成的标题段分割并提取出来。只需要输出标题，不需要输出内容。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题段？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否将内容分为5个标题段",
                "corresponding_part": "标题段",
                "rule": "item_count: [5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论10字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为6条",
                "corresponding_part": "长评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为4条",
                "corresponding_part": "短评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "古剑奇谭、延禧攻略各7道4项单选题，题目要求:题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；题目在100个字以内，选项在4个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "古剑奇谭题目": "请你按照python list的形式，将model_response中生成的古剑奇谭题目分割并提取出来。只需要输出题目，不需要输出答案。别输出延禧攻略的内容，例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "古剑奇谭选项": "请你按照python list的形式，将model_response中生成的古剑奇谭选项分割并提取出来。只需要输出选项，不需要输出题目。别输出延禧攻略的内容，也不要输出前缀例如“A.”, “B.”，例如[\"百里屠苏\",\"风晴雪\",\"夏夷则\",\"欧阳少恭\"]",
            "延禧攻略题目": "请你按照python list的形式，将model_response中生成的延禧攻略题目分割并提取出来。只需要输出题目，不需要输出答案。别输出古剑奇谭的内容，例如[\"1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "延禧攻略选项": "请你按照python list的形式，将model_response中生成的延禧攻略选项分割并提取出来。只需要输出选项，不需要输出题目。别输出古剑奇谭的内容，也不要输出前缀例如“A.”, “B.”，例如[\"魏璎珞\",\"魏璎珞\",\"魏璎珞\",\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了延禧攻略的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了古剑奇谭的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了古剑奇谭的7道4项单选题",
                "corresponding_part": "古剑奇谭题目",
                "rule": "item_count: [7, 7]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "古剑奇谭的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "古剑奇谭的题目是否在100个字以内",
                "corresponding_part": "古剑奇谭题目",
                "rule": "each_length:[1,100]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "古剑奇谭的选项是否在4个字以内",
                "corresponding_part": "古剑奇谭选项",
                "rule": "each_length:[1,4]",
                "dep": [
                    1
                ],
                "能力项": "0～10字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了延禧攻略的7道4项单选题",
                "corresponding_part": "延禧攻略题目",
                "rule": "item_count: [7, 7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "延禧攻略的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "延禧攻略的题目是否在100个字以内",
                "corresponding_part": "延禧攻略题目",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "延禧攻略的选项是否在4个字以内",
                "corresponding_part": "延禧攻略选项",
                "rule": "each_length:[1,4]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请输出5条不包含具体行业品类特征，主题为好评零售店铺推荐的推送文案，标题和内容需要有强关联。标题20字，标点符号格式不限制。内容格式为:推荐语+店铺名+推荐语，推荐语不可包含限时、折扣、优惠等涉及具体优惠和时间数量限制的要素。推送文案风格贴近生活、活泼、快乐、热情，文案的内容不能出现“\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"”，且内容不超过100个字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于推送文案的标题分割并提取出来。不需要提取“标题:”，只需要提取标题的内容，比如:[\"好评如潮\",\"品质掌声\",\"星级体验\",\"买家心选\",\"口口相传\",\"绝佳选择\",\"悦心好物\",\"精挑细选\",\"信赖有理\",\"买家首选\"]",
            "内容": "请你按照python list的形式，将model_response中生成的关于推送文案的内容分割并提取出来。不需要提取“内容:”，只需要提取内容的内容，比如:[\"口碑爆棚，「好评精选」，每一次购物都满意！\",\"质量赢得掌声，「品质之选」，让信赖成为习惯！\",\"服务赢五星，「星级好店」，体验超出期待！\",\"买家心头好，「人气之店」，每一次都惊喜连连！\",\"老顾客力荐，「传奇好货」，买过的人都说好！\",\"选择有品味，「绝佳精品」，每一件都是精选！\",\"好物温暖人心，「悦心收藏」，让心情随之愉悦！\",\"细心挑选，「精选好物」，只为你的优雅生活！\",\"信赖来自品质，「理想选择」，让满意成为常态！\",\"首选不负期待，「首选精品」，每次购物都是享受！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推送文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了5条推送文案",
                "corresponding_part": "标题",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推送文案的主题是否为好评零售店铺推荐",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推送文案的标题是否为20字",
                "corresponding_part": "标题",
                "rule": "each_length:[20,20]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "推送文案的内容格式是否为:推荐语+店铺名+推荐语",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "推送文案的推荐语是否不包含限时、折扣、优惠等涉及具体优惠和时间数量限制的要素",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "推送文案的内容是否不包含“\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"”",
                "corresponding_part": "内容",
                "rule": "non_keyword: [\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "推送文案的内容是否不超过100个字",
                "corresponding_part": "内容",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的9方向分别取9个名字（中文名字，6个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"通\", \"智\", \"汇\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了81个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[81,81]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为6个字",
                "corresponding_part": "名字",
                "rule": "each_length: [6,6]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"通\", \"智\", \"汇\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"通\", \"智\", \"汇\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇3分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照2个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【中国】必须刚好出现3次。关键词【他】出现必须不超过3次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇3分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[450, 900]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照2个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "中国是否出现3次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq3:[\"中国\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "他是否不出现超过3次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq3:[\"他\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在美团外卖神券短视频的评论区，以消费者角度生成180条用户口语化评论；10到15字；评论不重复；评论内不能存在“实惠”，“便宜”，“省钱”\n备注:字数只计中文字符",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的内容是否为美团外卖神券相关的评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了180条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [180, 180]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "所有评论是否为10到15字",
                "corresponding_part": "用户口语化评论",
                "rule": "each_length:[10,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论是否不重复",
                "corresponding_part": "用户口语化评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "评论是否不含“实惠”，“便宜”，“省钱”等字",
                "corresponding_part": "用户口语化评论",
                "rule": "non_keywords:[\"实惠\",\"便宜\",\"省钱\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "如何区分花粉过敏和感冒请以以上主题帮我输出分别输出7条标题+文案，标题文案需要具有吸引力，必须加表情符号等。标题在20字以内，文案在100字以内。例如:标题:春季花粉过敏高峰期到！🌸文案:👀四招教你区分花粉过敏和感冒，标题不能存在“\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"”\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的标题分割并提取出来，只提取标题，不提取文案。不需要提取“标题:”，只提取内容即可，比如:[\"感冒还是花粉过敏？\", \"春季过敏季，你准备好了吗？\"]",
            "文案": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的文案分割并提取出来，只提取文案，不提取标题。不需要提取“文案:”，只提取内容即可，比如:[\"了解两者差别，告别困惑！\", \"学会辨别花粉过敏和感冒，健康过春天！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了7条标题",
                "corresponding_part": "标题",
                "rule": "item_count: [7, 7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了7条文案",
                "corresponding_part": "文案",
                "rule": "item_count: [7, 7]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个标题是否在20字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,20]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每条文案是否在100字以内",
                "corresponding_part": "文案",
                "rule": "each_length:[1,100]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "标题是否加了表情符号",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文案是否加了表情符号",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "标题是否不出现“\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"”字",
                "corresponding_part": "标题",
                "rule": "non_keyword: [\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的7方向分别取7个名字（中文名字，4个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"通\", \"智\", \"汇\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了49个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[49,49]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为4个字",
                "corresponding_part": "名字",
                "rule": "each_length: [4,4]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"通\", \"智\", \"汇\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"通\", \"智\", \"汇\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我生成8道搞笑、具有反差感的3选项单选题，题目要求:1、基于基本常识、大众普遍的认知误判；2、题目与答案之间出乎意料，不符合人们的预期；3、提供一个精准、明确的正确选项、一个错误选项与正确选项很相似，较难抉择，两个搞笑错误答案/荒谬的解释/梗或发疯文化的答案；4、题目和答案有趣有梗，语言幽默；5、每道题目末尾显示该题正确答案",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目(带选项)，不需要输出正确答案。比如:[\"如果地球突然变成了方形，我们最可能遇到的问题是什么？A. 导航软件全都崩溃了 B. 篮球比赛变得异常困难 C. 海啸会按直角转弯 D. 跳伞时容易撞到地角 正确答案:A\"]",
            "正确答案": "请你按照python list的形式，将model_response中生成的正确答案分割并提取出来。只需要输出正确答案，不需要输出题目。比如:[\"A\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的每道题目是否为3选项单选题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了8道题目",
                "corresponding_part": "题目",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否提供了8个正确答案",
                "corresponding_part": "正确答案",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是唐朝的一位诗人，你刚刚参加完科举考试，但是你失意落榜。在战后的宁静夜晚，你回想起这些年的寒窗苦读，你心中充满了郁郁不得志的情愫，同时又感慨时光的流逝和对人生功名利禄的不屑。请以此为背景，创作一首体现你复杂情感律诗，每句5字。创作要求:诗歌必须遵循律诗的基本规则，包括平仄格律、押韵和对仗。诗中应体现纵情山水的洒脱、对夺取功名的不屑，同时融入对科举考试的失望和时光流逝的感慨。使用传统的意象和象征，如月亮、扁舟、山河等，来增强诗歌的意境和深度。诗歌风格豪放、浪漫、悲壮，使作品既符合传统又有独到之处。平仄必须完全一致\n备注:字数只计中文字符",
        "corresponding_parts": {
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"科举路途虚度春\", \"枯坐寒窗又一晨\", \"榜名无我心茫然\", \"月照孤舟泪两川\", \"功名富贵如浮云\", \"岁月匆匆叹无常\", \"高山流水觅知音\", \"悲歌一曲酒几觞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否创作了一首诗，无需考虑其他因素，只需要考虑是否是诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗歌是否押韵",
                "corresponding_part": "分割诗",
                "rule": "lvshi_yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否是满足平仄",
                "corresponding_part": "分割诗",
                "rule": "pingze",
                "dep": [
                    0
                ],
                "能力项": "平仄",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每句诗是否是5个字",
                "corresponding_part": "分割诗",
                "rule": "each_length:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "整诗是否是八句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇1分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照2个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【周年】必须刚好出现3次。关键词【是】出现必须不超过3次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇1分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[150, 300]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照2个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "周年是否出现3次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq3:[\"周年\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "是是否不出现超过3次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq3:[\"是\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请为我创作80个面向{打工人}的{火锅}广告文案，每个文案不超过30个字，店铺位于{写字楼/园区}附近，请挖掘出结合{打工人}与(火锅)特点，突出{打工人}所需要的特点，如上班族需要短暂放松，学生党需要新奇与优惠等，在文案中进行体现。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文案": "#CODE#请你用去除非文案的所有信息后，分割并输出所有模型生成的文案，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型是否生成了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了80个面向打工人的火锅广告文案",
                "corresponding_part": "文案",
                "rule": "item_count: [80, 80]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个文案是否不超过30个字",
                "corresponding_part": "文案",
                "rule": "each_length:[1,30]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否提到了打工人？",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否所有文案都提到写字楼和园区",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "如何区分花粉过敏和感冒请以以上主题帮我输出分别输出3条标题+文案，标题文案需要具有吸引力，必须加表情符号等。标题在8字以内，文案在30字以内。例如:标题:春季花粉过敏高峰期到！🌸文案:👀四招教你区分花粉过敏和感冒，标题不能存在“\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"”\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的标题分割并提取出来，只提取标题，不提取文案。不需要提取“标题:”，只提取内容即可，比如:[\"感冒还是花粉过敏？\", \"春季过敏季，你准备好了吗？\"]",
            "文案": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的文案分割并提取出来，只提取文案，不提取标题。不需要提取“文案:”，只提取内容即可，比如:[\"了解两者差别，告别困惑！\", \"学会辨别花粉过敏和感冒，健康过春天！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了3条标题",
                "corresponding_part": "标题",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了3条文案",
                "corresponding_part": "文案",
                "rule": "item_count: [3, 3]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个标题是否在8字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每条文案是否在30字以内",
                "corresponding_part": "文案",
                "rule": "each_length:[1,30]",
                "dep": [
                    1
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "标题是否加了表情符号",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文案是否加了表情符号",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "标题是否不出现“\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"”字",
                "corresponding_part": "标题",
                "rule": "non_keyword: [\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "古剑奇谭、延禧攻略各5道4项单选题，题目要求:题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；题目在100个字以内，选项在5个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "古剑奇谭题目": "请你按照python list的形式，将model_response中生成的古剑奇谭题目分割并提取出来。只需要输出题目，不需要输出答案。别输出延禧攻略的内容，例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "古剑奇谭选项": "请你按照python list的形式，将model_response中生成的古剑奇谭选项分割并提取出来。只需要输出选项，不需要输出题目。别输出延禧攻略的内容，也不要输出前缀例如“A.”, “B.”，例如[\"百里屠苏\",\"风晴雪\",\"夏夷则\",\"欧阳少恭\"]",
            "延禧攻略题目": "请你按照python list的形式，将model_response中生成的延禧攻略题目分割并提取出来。只需要输出题目，不需要输出答案。别输出古剑奇谭的内容，例如[\"1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "延禧攻略选项": "请你按照python list的形式，将model_response中生成的延禧攻略选项分割并提取出来。只需要输出选项，不需要输出题目。别输出古剑奇谭的内容，也不要输出前缀例如“A.”, “B.”，例如[\"魏璎珞\",\"魏璎珞\",\"魏璎珞\",\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了延禧攻略的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了古剑奇谭的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了古剑奇谭的5道4项单选题",
                "corresponding_part": "古剑奇谭题目",
                "rule": "item_count: [5, 5]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "古剑奇谭的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "古剑奇谭的题目是否在100个字以内",
                "corresponding_part": "古剑奇谭题目",
                "rule": "each_length:[1,100]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "古剑奇谭的选项是否在5个字以内",
                "corresponding_part": "古剑奇谭选项",
                "rule": "each_length:[1,5]",
                "dep": [
                    1
                ],
                "能力项": "0～10字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了延禧攻略的5道4项单选题",
                "corresponding_part": "延禧攻略题目",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "延禧攻略的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "延禧攻略的题目是否在100个字以内",
                "corresponding_part": "延禧攻略题目",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "延禧攻略的选项是否在5个字以内",
                "corresponding_part": "延禧攻略选项",
                "rule": "each_length:[1,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是一个文案工作者，需要给一个老黄历写文案，包括两部分，一部分是今天适合做的事，另一部分是今天不适合做的事，几组参考的文案与格式如下，你需要按照参考的格式与风格继续生成8组，每组都包括4个2字词语（适宜做的事）和4个2字词语（忌讳做的事），给你的例子仅供参考，你可以发挥联想多做扩充，每一组的文案尽量不要有重复:1）宜散步 摸鱼……，忌焦虑 攀比……；2）宜打盹 追剧……，忌加班 内卷……；3）宜健身 懒觉……，忌紧张 不安……；4）宜跑步 读书……，忌冲动 上头……；5）宜做饭 冥想……，忌糊涂 大意……；6）宜记账 复盘，忌偷懒 推诿……；7）……",
        "corresponding_parts": {
            "文案": "请你按照python list的形式，将生成的文案按照类似[\"宜散步 摸鱼，忌焦虑 攀比\", \"宜打盹 追剧，忌加班 内卷\", \"宜健身 懒觉，忌紧张 不安\", \"宜跑步 读书，忌冲动 上头\", \"宜做饭 冥想，忌糊涂 大意\"]的格式分割并输出。",
            "事": "请你按照python list的形式，将model_response中所有适宜和忌讳做的事全部分割提取出来，不需要加前面的#宜#或者#忌#以最小的单位来输出，一个element内不要放超过一个事。比如[\"散步\",\"摸鱼\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了8组文案",
                "corresponding_part": "文案",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每组文案是否包括4个适宜做的事",
                "corresponding_part": "文案",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每组文案是否包括4个忌讳做的事",
                "corresponding_part": "文案",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "文案是否没有重复",
                "corresponding_part": "事",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请为我创作180个面向{打工人}的{火锅}广告文案，每个文案不超过30个字，店铺位于{写字楼/园区}附近，请挖掘出结合{打工人}与(火锅)特点，突出{打工人}所需要的特点，如上班族需要短暂放松，学生党需要新奇与优惠等，在文案中进行体现。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文案": "#CODE#请你用去除非文案的所有信息后，分割并输出所有模型生成的文案，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型是否生成了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了180个面向打工人的火锅广告文案",
                "corresponding_part": "文案",
                "rule": "item_count: [180, 180]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个文案是否不超过30个字",
                "corresponding_part": "文案",
                "rule": "each_length:[1,30]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否提到了打工人？",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否所有文案都提到写字楼和园区",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论10字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为6条",
                "corresponding_part": "长评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为4条",
                "corresponding_part": "短评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我是微信小程序的负责人，这款小程序是用作美团充电宝的运维的，包括了弹出充电宝、去店里补给充电宝，也包含了充电宝机柜的管理，故障机器处理，现在要给一款微信起名字，前几个字已经固定叫“美团充电宝运维”，后面再增加5个字。风格最好简单易懂，看名字就知道这个小程序是做什么的，请给我输出80个微信小程序的名字，无需输出其他内容。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的名字，请不要去重，例如:['1. 美团充宝管', '2. 美团充宝控', '3. 美团充宝管家', '4. 美团充宝助手', '5. 美团充宝管家', '6. 美团充宝运维通', '7. 美团充宝运维宝', '8. 美团充宝运维站', '9. 美团充宝运维帮', '10. 美团充宝运维家', '11. 美团充宝运维站', '12. 美团充宝运维通', '13. 美团充宝运维宝', '14. 美团充宝运维站', '15. 美团充宝运维帮', '16. 美团充宝运维家', '17. 美团充宝运维站', '18. 美团充宝运维通', '19. 美团充宝运维宝', '20. 美团充宝运维站', '21. 美团充宝运维帮', '22. 美团充宝运维家', '23. 美团充宝运维站', '24. 美团充宝运维通', '25. 美团充宝运维宝', '26. 美团充宝运维站', '27. 美团充宝运维帮', '28. 美团充宝运维家', '29. 美团充宝运维站', '30. 美团充宝运维通', '31. 美团充宝运维宝', '32. 美团充宝运维站', '33. 美团充宝运维帮']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了微信小程序的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了80个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[80,80]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都是12个字",
                "corresponding_part": "名字",
                "rule": "each_length:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以#美团充电宝运维#开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"美团充电宝运维\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成50条批判性评论，避免重复。要求1:必须比原文长。要求2:必须存在关键词\"\"离谱\", \"辣眼\"\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "#CODE#请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否比原文长",
                "corresponding_part": "评论",
                "rule": "each_length:[57,100000]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否存在关键词\"\"离谱\", \"辣眼\"\"",
                "corresponding_part": "评论",
                "rule": "keywords:[\"离谱\", \"辣眼\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "模仿“商女不知亡国恨，隔江犹唱后庭花”的对称方式和讽刺手法，写一首讽刺当今社会996的加班现象，诗中需包含“\"加班\", \"苦难\"”。每句14字，共9句。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "全部诗句": "请你按照python list的格式，抓取模型回复中，给出的所有诗句，不要分割。",
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"劳者不知身已疲\", \"夜深犹在键盘旁\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一首诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗中是否模仿了“商女不知亡国恨，隔江犹唱后庭花”的对称方式",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "诗中是否包含“\"加班\", \"苦难\"”",
                "corresponding_part": "全部诗句",
                "rule": "keyword:[\"加班\", \"苦难\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "诗中是否为9句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[9,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每句是否为14字",
                "corresponding_part": "分割诗",
                "rule": "each_length:[14,14]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论15字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为6条",
                "corresponding_part": "长评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为4条",
                "corresponding_part": "短评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成50条批判性评论，避免重复。要求1:必须比原文长。要求2:必须存在关键词\"\"尴尬\", \"噪音\"\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "#CODE#请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否比原文长",
                "corresponding_part": "评论",
                "rule": "each_length:[57,100000]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否存在关键词\"\"尴尬\", \"噪音\"\"",
                "corresponding_part": "评论",
                "rule": "keywords:[\"尴尬\", \"噪音\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对金融类目内容进行评论，根据以下内容进行扩充润色，生成20条评论，语言需要简洁，尽可能接近真人的语气，避免重复，并且不能包含任何敏感信息",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型是否生成了金融评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了20条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[20,20]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在教育短视频的评论区，以消费者角度生成60条用户口语化评论。",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的内容是否为评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了60条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [60, 60]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否符合教育短视频的评论",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "古剑奇谭、延禧攻略各3道4项单选题，题目要求:题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；题目在100个字以内，选项在5个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "古剑奇谭题目": "请你按照python list的形式，将model_response中生成的古剑奇谭题目分割并提取出来。只需要输出题目，不需要输出答案。别输出延禧攻略的内容，例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "古剑奇谭选项": "请你按照python list的形式，将model_response中生成的古剑奇谭选项分割并提取出来。只需要输出选项，不需要输出题目。别输出延禧攻略的内容，也不要输出前缀例如“A.”, “B.”，例如[\"百里屠苏\",\"风晴雪\",\"夏夷则\",\"欧阳少恭\"]",
            "延禧攻略题目": "请你按照python list的形式，将model_response中生成的延禧攻略题目分割并提取出来。只需要输出题目，不需要输出答案。别输出古剑奇谭的内容，例如[\"1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "延禧攻略选项": "请你按照python list的形式，将model_response中生成的延禧攻略选项分割并提取出来。只需要输出选项，不需要输出题目。别输出古剑奇谭的内容，也不要输出前缀例如“A.”, “B.”，例如[\"魏璎珞\",\"魏璎珞\",\"魏璎珞\",\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了延禧攻略的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了古剑奇谭的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了古剑奇谭的3道4项单选题",
                "corresponding_part": "古剑奇谭题目",
                "rule": "item_count: [3, 3]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "古剑奇谭的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "古剑奇谭的题目是否在100个字以内",
                "corresponding_part": "古剑奇谭题目",
                "rule": "each_length:[1,100]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "古剑奇谭的选项是否在5个字以内",
                "corresponding_part": "古剑奇谭选项",
                "rule": "each_length:[1,5]",
                "dep": [
                    1
                ],
                "能力项": "0～10字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了延禧攻略的3道4项单选题",
                "corresponding_part": "延禧攻略题目",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "延禧攻略的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "延禧攻略的题目是否在100个字以内",
                "corresponding_part": "延禧攻略题目",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "延禧攻略的选项是否在5个字以内",
                "corresponding_part": "延禧攻略选项",
                "rule": "each_length:[1,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成3条批判性评论，避免重复。要求1:必须是原文字数的3倍左右，假设我们只计算中文的字数。要求2:不能存在关键词\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了3条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[3,3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "字数是否是原文的3倍左右",
                "corresponding_part": "评论",
                "rule": "total_length:[140,171]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围、倍数",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否不存在关键词\"\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"\"",
                "corresponding_part": "评论",
                "rule": "non_keywords:[\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "如何区分花粉过敏和感冒请以以上主题帮我输出分别输出5条标题+文案，标题文案需要具有吸引力，必须加表情符号等。标题在10字以内，文案在50字以内。例如:标题:春季花粉过敏高峰期到！🌸文案:👀四招教你区分花粉过敏和感冒\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的标题分割并提取出来，只提取标题，不提取文案。不需要提取“标题:”，只提取内容即可，比如:[\"感冒还是花粉过敏？\", \"春季过敏季，你准备好了吗？\"]",
            "文案": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的文案分割并提取出来，只提取文案，不提取标题。不需要提取“文案:”，只提取内容即可，比如:[\"了解两者差别，告别困惑！\", \"学会辨别花粉过敏和感冒，健康过春天！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了5条标题",
                "corresponding_part": "标题",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了5条文案",
                "corresponding_part": "文案",
                "rule": "item_count: [5, 5]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个标题是否在10字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、范围、多对象",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每个文案是否在50字以内",
                "corresponding_part": "文案",
                "rule": "each_length:[1,50]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "标题是否加了表情符号",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文案是否加了表情符号",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "emoji",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请根据以下内容命制3个单选题，2个多选题，多选题和单选题要分开输出并标明。考题需要满足广泛性和群众性，注意格式，我要复制到表格里面，要有正确答案内容如下:网约配送员职业守则\n1.\t遵纪守法，服务社会\n遵守国家有关法律法规和企业的规章制度，尊重自己的职业，尊重每一个自己所服务的客户。\n2.\t着装整洁，礼貌文明\n保持个人卫生，统一着装，整洁干净。对待客户礼貌热情，亲切诚恳，想尽办法解决顾客的问题，耐心周到，无微不至。\n3.\t团结协作，勤奋务实\n虚心听取他人意见，具有良好的团队意识，善于与人共事，团结合作，创造和谐向上的氛围，脚踏实地，尽职尽责。\n4.\t保守秘密，确保安全\n熟悉工作纪律，工作中保护客户隐私。遵守安全规则，确保网约配送过程中的商品安全以及自身安全。单选题目内不能出现“\"非法\", \"违纪\", \"失职\", \"违规\", \"泄密\", \"不安全\"”，多选题目内不能出现“\"防静电\", \"全部\", \"所有\", \"任意\", \"随意\", \"全面\"”",
        "corresponding_parts": {
            "单选题目": "请你按照python list的形式，将model_response中生成的单选题目分割并提取出来。只需要输出单选题目(带选项)，不需要输出正确答案。比如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. 小尼姑\"]",
            "单选题答案": "请你按照python list的形式，将model_response中生成的单选题答案分割并提取出来。只需要输出单选题答案，不需要输出题目。只需要输出答案的内容。比如[\"百里屠苏\"]",
            "多选题目": "请你按照python list的形式，将model_response中生成的多选题目分割并提取出来。只需要输出多选题目(带选项)，不需要输出正确答案。比如[\"**《延禧攻略》**1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "多选题答案": "请你按照python list的形式，将model_response中生成的多选题答案分割并提取出来。只需要输出多选题答案，不需要输出题目。只需要输出答案的内容。比如[\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了单选题和多选题并分开标注",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否命制了3个单选题",
                "corresponding_part": "单选题目",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否命制了2个多选题",
                "corresponding_part": "多选题目",
                "rule": "item_count: [2, 2]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个单选考题都有正确答案",
                "corresponding_part": "单选题答案",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个多选考题都有正确答案",
                "corresponding_part": "多选题答案",
                "rule": "item_count:[2, 2]",
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "单选题目内是否没有出现“\"非法\", \"违纪\", \"失职\", \"违规\", \"泄密\", \"不安全\"”",
                "corresponding_part": "单选题目",
                "rule": "non_keywords: [\"非法\", \"违纪\", \"失职\", \"违规\", \"泄密\", \"不安全\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "多选题目是否没有出现“\"防静电\", \"全部\", \"所有\", \"任意\", \"随意\", \"全面\"”",
                "corresponding_part": "多选题目",
                "rule": "non_keywords: [\"防静电\", \"全部\", \"所有\", \"任意\", \"随意\", \"全面\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我综合以下三个小故事，起一个共同的标题，讽刺没有主人翁精神，风格诙谐幽默，有点击欲望，字数10个字以内。请给出5个可选择的标题\n\n故事一:工位前，小A坐在电脑前，小E在一旁指出编写程序的问题。小E说这代码太繁琐，后续维护成本太高，得简化下。小A无所谓地说:我只负责开发，维护的事有别人呢。\n\n故事二:工区路上，小B正走在路上，大象收到来自合作部门的项目方案共创的邀请，上面写着“小B，下周我们邀请你和其他合作伙伴来共创方案，期待大家一起献计献策！”小B心想:我就是个协助的，你们主R方说啥我干啥就行了呗。\n\n故事三:会议间，产品小C和小D正在讨论产品优化问题。小C:上线前，广告弹窗必须优化，不然影响客户购买体验。小D不认可说“先完成上线的KPI再说”，标题内禁止出现“代码”和“程序”。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的标题分割并提取出来。只需要提取内容，无需提取任何标点或者index，比如:[\"职场搬运工:不是我的事\", \"甩锅大师:谁在乎结果\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了5个可选择的标题",
                "corresponding_part": "标题",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个标题字数是否在10个字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、多对象",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "标题内是否禁止出现“\"加班\", \"苦难\"”这个字",
                "corresponding_part": "标题",
                "rule": "non_keyword: [\"代码\", \"程序\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "模仿“商女不知亡国恨，隔江犹唱后庭花”的对称方式和讽刺手法，写一首讽刺当今社会996的加班现象，诗中需包含“\"疲惫\", \"薪酬\"”。共7句。",
        "corresponding_parts": {
            "全部诗句": "请你按照python list的格式，抓取模型回复中，给出的所有诗句，不要分割。",
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"劳者不知身已疲\", \"夜深犹在键盘旁\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一首诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗中是否模仿了“商女不知亡国恨，隔江犹唱后庭花”的对称方式",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "诗中是否包含“\"疲惫\", \"薪酬\"”",
                "corresponding_part": "全部诗句",
                "rule": "keyword:[\"疲惫\", \"薪酬\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "诗中是否为7句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[7,7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请根据9个[中国传统节日]分别创建9道选择题，四个选项中只有一个正确答案，包含正确答案和[40]个字以内的解释。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目(带选项)，不需要输出正确答案。比如[\"**《延禧攻略》**1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "正确答案": "请你按照python list的形式，将model_response中生成的正确答案分割并提取出来。只需要输出正确答案，不需要输出题目。只需要输出答案的内容。比如[\"魏璎珞\"]",
            "解释": "请你按照python list的形式，将model_response中生成的正确答案解释分割并提取出来。只需要输出解释，不需要输出题目和答案。比如['瑞幸咖啡的品牌颜色是蓝色，代表品牌形象。', '瑞幸通过发放大量优惠券吸引顾客，快速扩张。', '瑞幸咖啡提供免费快速配送服务，增加便利性。']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "生成选择题的数目是否为9道",
                "corresponding_part": "题目",
                "rule": "item_count: [9, 9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每道选择题是否基于中国传统节日",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每道选择题是否包含四个选项",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否生成了对应每道选择题的9个正确答案",
                "corresponding_part": "正确答案",
                "rule": "item_count: [9, 9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "给出的每道选择题和对应的正确答案中，是否包含正确答案的解释",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "每道选择题的正确答案解释是否在40个字以内",
                "corresponding_part": "解释",
                "rule": "each_length:[1,40]",
                "dep": [
                    5
                ],
                "能力项": "10～50字、多对象",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的3方向分别取3个名字（中文名字，4个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"通\", \"智\", \"汇\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了9个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[9,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为4个字",
                "corresponding_part": "名字",
                "rule": "each_length: [4,4]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"通\", \"智\", \"汇\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"通\", \"智\", \"汇\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我想策划一个桌游，要求设计3个职业，然后每个职业都要有不同的能力，玩家通过掷骰子选定职业，所有人选完职业以后通过掷骰子选择往某个方向走，最先走完自己那条路的选手获胜，你写一个具体点的策划文档\n",
        "corresponding_parts": {
            "职业": "请你按照python list的形式，将model_response中设计的职业分割并提取出来。只需要提取职业即可，无需提取职业的详细信息，比如[\"骑士\",\"法师\",\"盗贼\",\"猎人\",\"牧师\",\"巫师\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否设计了职业",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否设计了3个职业",
                "corresponding_part": "职业",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个职业是否都有不同的能力",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否设计了玩家通过掷骰子选定职业的机制",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否设计了最先走完自己那条路的选手获胜的胜利条件",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论10字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为6条",
                "corresponding_part": "长评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为4条",
                "corresponding_part": "短评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论10字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为5条",
                "corresponding_part": "长评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为5条",
                "corresponding_part": "短评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "古剑奇谭、延禧攻略各5道4项单选题，题目要求:题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；题目在30个字以内，选项在8个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "古剑奇谭题目": "请你按照python list的形式，将model_response中生成的古剑奇谭题目分割并提取出来。只需要输出题目，不需要输出答案。别输出延禧攻略的内容，例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "古剑奇谭选项": "请你按照python list的形式，将model_response中生成的古剑奇谭选项分割并提取出来。只需要输出选项，不需要输出题目。别输出延禧攻略的内容，也不要输出前缀例如“A.”, “B.”，例如[\"百里屠苏\",\"风晴雪\",\"夏夷则\",\"欧阳少恭\"]",
            "延禧攻略题目": "请你按照python list的形式，将model_response中生成的延禧攻略题目分割并提取出来。只需要输出题目，不需要输出答案。别输出古剑奇谭的内容，例如[\"1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "延禧攻略选项": "请你按照python list的形式，将model_response中生成的延禧攻略选项分割并提取出来。只需要输出选项，不需要输出题目。别输出古剑奇谭的内容，也不要输出前缀例如“A.”, “B.”，例如[\"魏璎珞\",\"魏璎珞\",\"魏璎珞\",\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了延禧攻略的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了古剑奇谭的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了古剑奇谭的5道4项单选题",
                "corresponding_part": "古剑奇谭题目",
                "rule": "item_count: [5, 5]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "古剑奇谭的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "古剑奇谭的题目是否在30个字以内",
                "corresponding_part": "古剑奇谭题目",
                "rule": "each_length:[1,30]",
                "dep": [
                    1
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "古剑奇谭的选项是否在8个字以内",
                "corresponding_part": "古剑奇谭选项",
                "rule": "each_length:[1,8]",
                "dep": [
                    1
                ],
                "能力项": "0～10字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了延禧攻略的5道4项单选题",
                "corresponding_part": "延禧攻略题目",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "延禧攻略的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "延禧攻略的题目是否在30个字以内",
                "corresponding_part": "延禧攻略题目",
                "rule": "each_length:[1,30]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "延禧攻略的选项是否在8个字以内",
                "corresponding_part": "延禧攻略选项",
                "rule": "each_length:[1,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "四个人朗读一首诗歌，建议是5言律诗。 调性可以是幽默、调皮、调侃的，但最后都是昂扬向上，内容主要就是围绕医药业务发展、可以结合一点点春节的祝福。平仄必须完全一致\n备注:字数只计中文字符",
        "corresponding_parts": {
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"药业昌隆庆新春\", \"梅花鼓劲战疫群\", \"科研精进日夜新\", \"处方箴言利万民\", \"调皮携手笑颜开\", \"共赴健康春潮来\", \"调侃岁月不留痕\", \"祝福瑞雪兆丰年\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否创作了一首诗，无需考虑其他因素，只需要考虑是否是诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗歌是否押韵",
                "corresponding_part": "分割诗",
                "rule": "lvshi_yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否是满足平仄",
                "corresponding_part": "分割诗",
                "rule": "pingze",
                "dep": [
                    0
                ],
                "能力项": "平仄",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每句诗是否是5个字",
                "corresponding_part": "分割诗",
                "rule": "each_length:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "诗歌内容是否围绕医药业务发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "整诗是否是八句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你是一个擅长生成花名的小助手，生成的花名需要满足下面这几个条件，长度5个汉字，前面两个字是食物，中间一个字是食物的烹饪方式，最后两个字也是食物，不可重复，一共生成 20 个。",
        "corresponding_parts": {
            "花名": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了花名",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否一共生成了20个花名",
                "corresponding_part": "花名",
                "rule": "item_count:[20,20]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "生成的花名是否长度为5个汉字",
                "corresponding_part": "花名",
                "rule": "each_length:[5,5]",
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "生成的所有花名是否前面两个字全都是食物，不存在不是食物的情况",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "生成的所有花名是否中间一个字全都是食物的烹饪方式，不存则其他情况",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "生成的所有花名是否最后两个字全是食物，没有不是的情况",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "生成的所有花名是否没有重复",
                "corresponding_part": "花名",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一篇直播营销产品的述职报告。要求400字。\n\n第一部分:23年工作总结。23年团队主要目标是基建完善度，基础功能达到易用水平，我个人的工作主要目标是提升秒杀、抽奖玩法的易用性。要求写出如何提升的，策略是什么。最终的结果如何。需要从目标、策略、举措来写，且举措中要通过star原则来呈现。\n\n第二部分:24年工作规划。24年团队主要目标是商家渗透率提升20%，我负责的营销玩法，从好用性、商家牵引、提效等方面，需要分别做哪些工作。\n第三部分:个人成长与规划，围绕美团价值观来写。\n\n备注:字数只计中文字符",
        "corresponding_parts": {
            "述职报告": "#CODE#述职报告内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "述职报告是否写出了23年工作总结",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "述职报告中23年工作总结是否包含团队主要目标是基建完善度，基础功能达到易用水平",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "述职报告中23年工作总结是否包含个人工作主要目标是提升秒杀、抽奖玩法的易用性",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "述职报告中23年工作总结是否写出如何提升秒杀、抽奖玩法的易用性",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "述职报告中23年工作总结是否写出提升秒杀、抽奖玩法易用性的策略",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "述职报告中23年工作总结是否写出提升秒杀、抽奖玩法易用性的最终结果",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "述职报告中23年工作总结是否从目标、策略、举措来写",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 7,
                "question": "述职报告中23年工作总结的举措部分是否通过STAR原则来呈现",
                "rule": null,
                "dep": [
                    6
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "述职报告中是否写出了24年工作规划",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 9,
                "question": "述职报告中24年工作规划是否包含团队主要目标是商家渗透率提升20%",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "述职报告中24年工作规划是否包含负责的营销玩法从好用性方面需要做的工作",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "述职报告中24年工作规划是否包含负责的营销玩法从商家牵引方面需要做的工作",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "述职报告中24年工作规划是否包含负责的营销玩法从提效方面需要做的工作",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 13,
                "question": "述职报告中是否写出了个人成长与规划",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 14,
                "question": "述职报告是否在400字左右",
                "corresponding_part": "述职报告",
                "rule": "each_length:[360,440]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "四个人朗读一首诗歌，建议是7句的诗,每句14字。 调性可以是幽默、调皮、调侃的，但最后都是昂扬向上，内容主要就是围绕医药业务发展、可以结合一点点春节的祝福。平仄必须完全一致\n备注:字数只计中文字符",
        "corresponding_parts": {
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"药业昌隆庆新春\", \"梅花鼓劲战疫群\", \"科研精进日夜新\", \"处方箴言利万民\", \"调皮携手笑颜开\", \"共赴健康春潮来\", \"调侃岁月不留痕\", \"祝福瑞雪兆丰年\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否创作了一首诗，无需考虑其他因素，只需要考虑是否是诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗歌是否押韵",
                "corresponding_part": "分割诗",
                "rule": "lvshi_yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否是满足平仄",
                "corresponding_part": "分割诗",
                "rule": "pingze",
                "dep": [
                    0
                ],
                "能力项": "平仄",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每句诗是否是14个字",
                "corresponding_part": "分割诗",
                "rule": "each_length:[14,14]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "整诗是否是7句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[7,7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "诗歌内容是否围绕医药业务发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请输出9条不包含具体行业品类特征，主题为好评零售店铺推荐的推送文案，标题和内容需要有强关联。标题15字，标点符号格式不限制。内容格式为:推荐语+店铺名+推荐语，推荐语不可包含限时、折扣、优惠等涉及具体优惠和时间数量限制的要素。推送文案风格贴近生活、活泼、快乐、热情，文案的内容不能出现“\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"”，且内容不超过80个字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于推送文案的标题分割并提取出来。不需要提取“标题:”，只需要提取标题的内容，比如:[\"好评如潮\",\"品质掌声\",\"星级体验\",\"买家心选\",\"口口相传\",\"绝佳选择\",\"悦心好物\",\"精挑细选\",\"信赖有理\",\"买家首选\"]",
            "内容": "请你按照python list的形式，将model_response中生成的关于推送文案的内容分割并提取出来。不需要提取“内容:”，只需要提取内容的内容，比如:[\"口碑爆棚，「好评精选」，每一次购物都满意！\",\"质量赢得掌声，「品质之选」，让信赖成为习惯！\",\"服务赢五星，「星级好店」，体验超出期待！\",\"买家心头好，「人气之店」，每一次都惊喜连连！\",\"老顾客力荐，「传奇好货」，买过的人都说好！\",\"选择有品味，「绝佳精品」，每一件都是精选！\",\"好物温暖人心，「悦心收藏」，让心情随之愉悦！\",\"细心挑选，「精选好物」，只为你的优雅生活！\",\"信赖来自品质，「理想选择」，让满意成为常态！\",\"首选不负期待，「首选精品」，每次购物都是享受！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推送文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了9条推送文案",
                "corresponding_part": "标题",
                "rule": "item_count: [9, 9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推送文案的主题是否为好评零售店铺推荐",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推送文案的标题是否为15字",
                "corresponding_part": "标题",
                "rule": "each_length:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "推送文案的内容格式是否为:推荐语+店铺名+推荐语",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "推送文案的推荐语是否不包含限时、折扣、优惠等涉及具体优惠和时间数量限制的要素",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "推送文案的内容是否不包含“\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"”",
                "corresponding_part": "内容",
                "rule": "non_keyword: [\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "推送文案的内容是否不超过80个字",
                "corresponding_part": "内容",
                "rule": "each_length:[1,80]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请你扮演一名经验丰富的小学数学老师，现在是期末，需要你对每个学生的本学期表现撰写教师评语，首先写匡俊同学的评语，要求藏头诗必须包含[匡俊]的名字，每句30字，总共3句。比如整诗要求4句，每句4字，内容可以是:【匡如泉涌，俊天舜日，聪明伶俐，努力进取。】同时，必须出现以下关键词\"##KEYWORDS###\"，不能出现\"\"同学\"\"这个词\n备注:字数只计中文字符",
        "corresponding_parts": {
            "评语": "请你按照python list的格式，抓取模型回复中，给出的评语部分，只需要评语，不需要内容。比如[\"思维活跃\", \"尧天有才\", \"同学喜爱\", \"学习进步\"]",
            "整合评语": "请你按照python list的格式，将模型回复中给出的评语部分，整合成一个完整的单个element的评语输出。比如[\"思如泉涌， \n尧天舜日， \n聪明伶俐， \n努力进取。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评语",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗句的每个第一个字是否组成一段和匡俊相关的话？",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "生成特定文案",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "藏头诗是否每句30字",
                "corresponding_part": "评语",
                "rule": "each_length:[30,30]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "藏头诗是否总共3句以下",
                "corresponding_part": "评语",
                "rule": "item_count:[1,3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "评语是否包含\"\"聪明\", \"努力\"\"",
                "corresponding_part": "整合评语",
                "rule": "keyword: [\"聪明\", \"努力\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "评语是否不包含\"\"同学\"\"",
                "corresponding_part": "整合评语",
                "rule": "non_keyword: [\"同学\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在美团外卖神券短视频的评论区，以消费者角度生成80条用户口语化评论。每条评论为14个字，不允许重复。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的内容是否为美团外卖神券的评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了80条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [80, 80]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "所有评论是否为14个字",
                "corresponding_part": "用户口语化评论",
                "rule": "each_length:[14,14]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论是否不重复",
                "corresponding_part": "用户口语化评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在健身挑战短视频的评论区，生成50条用户口语化评论，评论不能出现\"健身\", \"美体\", \"锻炼\"",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了健身挑战的用户口语化评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [50, 50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否不出现\"\"健身\", \"美体\", \"锻炼\"\"",
                "corresponding_part": "用户口语化评论",
                "rule": "non_keywords:[\"健身\", \"美体\", \"锻炼\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇9分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照9个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【邓稼先】必须刚好出现7次。关键词【的】出现必须不超过7次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇9分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1350, 2700]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照9个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "邓稼先是否出现7次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq7:[\"邓稼先\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "的是否不出现超过7次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq7:[\"的\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成3条批判性评论，避免重复。要求1:必须是原文字数的1倍左右，假设我们只计算中文的字数。要求2:不能存在关键词\"出戏\", \"失望\", \"噪音\", \"不好\", \"面瘫\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了3条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[3,3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "字数是否是原文的1倍左右",
                "corresponding_part": "评论",
                "rule": "total_length:[46,57]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围、倍数",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否不存在关键词\"\"出戏\", \"失望\", \"噪音\", \"不好\", \"面瘫\"\"",
                "corresponding_part": "评论",
                "rule": "non_keywords:[\"出戏\", \"失望\", \"噪音\", \"不好\", \"面瘫\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇1分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照9个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【科学】必须刚好出现7次。关键词【和】出现必须不超过7次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇1分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[150, 300]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照9个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "科学是否出现7次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq7:[\"科学\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "和是否不出现超过7次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq7:[\"和\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我生成5道搞笑、具有反差感的3选项单选题，题目要求:1、基于基本常识、大众普遍的认知误判；2、题目与答案之间出乎意料，不符合人们的预期；3、提供一个精准、明确的正确选项、一个错误选项与正确选项很相似，较难抉择，两个搞笑错误答案/荒谬的解释/梗或发疯文化的答案；4、题目和答案有趣有梗，语言幽默；5、每道题目末尾显示该题正确答案",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目(带选项)，不需要输出正确答案。比如:[\"如果地球突然变成了方形，我们最可能遇到的问题是什么？A. 导航软件全都崩溃了 B. 篮球比赛变得异常困难 C. 海啸会按直角转弯 D. 跳伞时容易撞到地角 正确答案:A\"]",
            "正确答案": "请你按照python list的形式，将model_response中生成的正确答案分割并提取出来。只需要输出正确答案，不需要输出题目。比如:[\"A\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的每道题目是否为3选项单选题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了5道题目",
                "corresponding_part": "题目",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否提供了5个正确答案",
                "corresponding_part": "正确答案",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请输出3条不包含具体行业品类特征，主题为好评零售店铺推荐的推送文案，标题和内容需要有强关联。标题20字，标点符号格式不限制。内容格式为:推荐语+店铺名+推荐语，推荐语不可包含限时、折扣、优惠等涉及具体优惠和时间数量限制的要素。推送文案风格贴近生活、活泼、快乐、热情，文案的内容不能出现“\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"”，且内容不超过100个字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于推送文案的标题分割并提取出来。不需要提取“标题:”，只需要提取标题的内容，比如:[\"好评如潮\",\"品质掌声\",\"星级体验\",\"买家心选\",\"口口相传\",\"绝佳选择\",\"悦心好物\",\"精挑细选\",\"信赖有理\",\"买家首选\"]",
            "内容": "请你按照python list的形式，将model_response中生成的关于推送文案的内容分割并提取出来。不需要提取“内容:”，只需要提取内容的内容，比如:[\"口碑爆棚，「好评精选」，每一次购物都满意！\",\"质量赢得掌声，「品质之选」，让信赖成为习惯！\",\"服务赢五星，「星级好店」，体验超出期待！\",\"买家心头好，「人气之店」，每一次都惊喜连连！\",\"老顾客力荐，「传奇好货」，买过的人都说好！\",\"选择有品味，「绝佳精品」，每一件都是精选！\",\"好物温暖人心，「悦心收藏」，让心情随之愉悦！\",\"细心挑选，「精选好物」，只为你的优雅生活！\",\"信赖来自品质，「理想选择」，让满意成为常态！\",\"首选不负期待，「首选精品」，每次购物都是享受！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推送文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了3条推送文案",
                "corresponding_part": "标题",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推送文案的主题是否为好评零售店铺推荐",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推送文案的标题是否为20字",
                "corresponding_part": "标题",
                "rule": "each_length:[20,20]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "推送文案的内容格式是否为:推荐语+店铺名+推荐语",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "推送文案的推荐语是否不包含限时、折扣、优惠等涉及具体优惠和时间数量限制的要素",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "推送文案的内容是否不包含“\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"”",
                "corresponding_part": "内容",
                "rule": "non_keyword: [\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "推送文案的内容是否不超过100个字",
                "corresponding_part": "内容",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我生成9道搞笑知识4项单选题，题目要求:热门影视剧、电影相关、题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；整道题目（包括选项）在100个字以内，选项在5个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目，不需要输出答案。例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "选项": "请你按照python list的形式，将model_response中生成的所有选项分割并提取出来。只需要输出选项，不需要输出题目。别输出前缀例如“A.”, “B.”，例如['打针', '做手术', '被骂', '失去爱情', '法拉利', '兰博基尼', '道奇', '奔驰', '周星星', '周星期', '周星辰', '周星驰', '圆形', '方形', '心形', '三角形', '跑车', '卡车', '摩托车', '飞机', '歌手', '警察', '厨师', '画家', '陀螺', '骰子', '扑克牌', '指南针', '红酒', '伏特加', '朗姆酒', '啤酒', '秒表', '日历', '沙漏', '计算器', '篮球', '足球', '乒乓球', '长跑', '牛魔王', '孙悟空', '猪八戒', '沙僧', '麻将', '扑克', '象棋', '飞行棋', '超人飞翔', '神龙摆尾', '白鹤亮翅', '泰坦尼克', '音乐课', '美术课', '体育课', '数学课']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了9道搞笑知识4项单选题",
                "corresponding_part": "题目",
                "rule": "item_count: [9, 9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "题目是否与热门影视剧、电影相关",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "题目是否在100个字以内",
                "corresponding_part": "题目",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "选项是否在5个字以内",
                "corresponding_part": "选项",
                "rule": "each_length:[1,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我生成7道搞笑知识4项单选题，题目要求:热门影视剧、电影相关、题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；整道题目（包括选项）在30个字以内，选项在8个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目，不需要输出答案。例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "选项": "请你按照python list的形式，将model_response中生成的所有选项分割并提取出来。只需要输出选项，不需要输出题目。别输出前缀例如“A.”, “B.”，例如['打针', '做手术', '被骂', '失去爱情', '法拉利', '兰博基尼', '道奇', '奔驰', '周星星', '周星期', '周星辰', '周星驰', '圆形', '方形', '心形', '三角形', '跑车', '卡车', '摩托车', '飞机', '歌手', '警察', '厨师', '画家', '陀螺', '骰子', '扑克牌', '指南针', '红酒', '伏特加', '朗姆酒', '啤酒', '秒表', '日历', '沙漏', '计算器', '篮球', '足球', '乒乓球', '长跑', '牛魔王', '孙悟空', '猪八戒', '沙僧', '麻将', '扑克', '象棋', '飞行棋', '超人飞翔', '神龙摆尾', '白鹤亮翅', '泰坦尼克', '音乐课', '美术课', '体育课', '数学课']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了7道搞笑知识4项单选题",
                "corresponding_part": "题目",
                "rule": "item_count: [7, 7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "题目是否与热门影视剧、电影相关",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "题目是否在30个字以内",
                "corresponding_part": "题目",
                "rule": "each_length:[1,30]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "选项是否在8个字以内",
                "corresponding_part": "选项",
                "rule": "each_length:[1,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论10字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为10条",
                "corresponding_part": "长评论",
                "rule": "item_count:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为10条",
                "corresponding_part": "短评论",
                "rule": "item_count:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我生成3道搞笑知识4项单选题，题目要求:热门影视剧、电影相关、题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；整道题目（包括选项）在50个字以内，选项在10个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目，不需要输出答案。例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "选项": "请你按照python list的形式，将model_response中生成的所有选项分割并提取出来。只需要输出选项，不需要输出题目。别输出前缀例如“A.”, “B.”，例如['打针', '做手术', '被骂', '失去爱情', '法拉利', '兰博基尼', '道奇', '奔驰', '周星星', '周星期', '周星辰', '周星驰', '圆形', '方形', '心形', '三角形', '跑车', '卡车', '摩托车', '飞机', '歌手', '警察', '厨师', '画家', '陀螺', '骰子', '扑克牌', '指南针', '红酒', '伏特加', '朗姆酒', '啤酒', '秒表', '日历', '沙漏', '计算器', '篮球', '足球', '乒乓球', '长跑', '牛魔王', '孙悟空', '猪八戒', '沙僧', '麻将', '扑克', '象棋', '飞行棋', '超人飞翔', '神龙摆尾', '白鹤亮翅', '泰坦尼克', '音乐课', '美术课', '体育课', '数学课']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了3道搞笑知识4项单选题",
                "corresponding_part": "题目",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "题目是否与热门影视剧、电影相关",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "题目是否在50个字以内",
                "corresponding_part": "题目",
                "rule": "each_length:[1,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "选项是否在10个字以内",
                "corresponding_part": "选项",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论15字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为18条",
                "corresponding_part": "长评论",
                "rule": "item_count:[18,18]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为12条",
                "corresponding_part": "短评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是一个规划游玩路线的达人，且写攻略的用词精简并能凸显景点特色。你能帮我推荐熊猫基地里3个适合拍照的景点么？并且规划一下景点之间的交通路线。文章必须用繁体写。请注意，每个字都必须是繁体，不能存在简体的字\n\n",
        "corresponding_parts": {
            "景点推荐": "请你按照python list的格式，抓取模型回复中，给出的景点推荐部分，只需要景点，不需要内容。比如[\"都江堰水利工程\", \"灌县古城墙\", \"安澜索桥\", \"玉垒山\", \"灌县署\"]",
            "文案内容": "请你按照python list的格式，抓取模型所有的文案内容，但是删掉那些非文案内容的信息(非文案内容的信息比如:当然可以，以下是我为你生成的信息:)只保留文案本身的内容，比如[\"交通路线规划:\n- **第一天**:上午游览都江堰水利工程，下午前往南桥、安澜索桥，傍晚时分可登玉垒山拍照。\n- **第二天**:上午参观二王庙，下午根据个人兴趣选择在古城内其他景点自由拍照。\n\n以上路线适合自驾或公共交通，如乘坐公交或打车前往各个景点。请注意，部分步道可能需要步行，建议穿着舒适的鞋子。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否推荐了熊猫基地里适合拍照的景点",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐景点数量是否为3个？",
                "rule": "item_count:[3,3]",
                "corresponding_part": "景点推荐",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否规划了景点之间的交通路线",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文章是否用是用繁体写的",
                "rule": "fanti",
                "corresponding_part": "文案内容",
                "dep": [
                    0
                ],
                "能力项": "繁体约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是唐朝的一位诗人，你刚刚参加完科举考试，但是你失意落榜。在战后的宁静夜晚，你回想起这些年的寒窗苦读，你心中充满了郁郁不得志的情愫，同时又感慨时光的流逝和对人生功名利禄的不屑。请以此为背景，创作一首体现你复杂情感律诗，每句10字。创作要求:诗歌必须遵循律诗的基本规则，包括平仄格律、押韵和对仗。诗中应体现纵情山水的洒脱、对夺取功名的不屑，同时融入对科举考试的失望和时光流逝的感慨。使用传统的意象和象征，如月亮、扁舟、山河等，来增强诗歌的意境和深度。诗歌风格豪放、浪漫、悲壮，使作品既符合传统又有独到之处。平仄必须完全一致\n备注:字数只计中文字符",
        "corresponding_parts": {
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"科举路途虚度春\", \"枯坐寒窗又一晨\", \"榜名无我心茫然\", \"月照孤舟泪两川\", \"功名富贵如浮云\", \"岁月匆匆叹无常\", \"高山流水觅知音\", \"悲歌一曲酒几觞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否创作了一首诗，无需考虑其他因素，只需要考虑是否是诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗歌是否押韵",
                "corresponding_part": "分割诗",
                "rule": "lvshi_yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否是满足平仄",
                "corresponding_part": "分割诗",
                "rule": "pingze",
                "dep": [
                    0
                ],
                "能力项": "平仄",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每句诗是否是10个字",
                "corresponding_part": "分割诗",
                "rule": "each_length:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "整诗是否是八句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请根据9个[中国传统节日]分别创建9道选择题，四个选项中只有一个正确答案，包含正确答案和[20]个字以内的解释。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目(带选项)，不需要输出正确答案。比如[\"**《延禧攻略》**1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "正确答案": "请你按照python list的形式，将model_response中生成的正确答案分割并提取出来。只需要输出正确答案，不需要输出题目。只需要输出答案的内容。比如[\"魏璎珞\"]",
            "解释": "请你按照python list的形式，将model_response中生成的正确答案解释分割并提取出来。只需要输出解释，不需要输出题目和答案。比如['瑞幸咖啡的品牌颜色是蓝色，代表品牌形象。', '瑞幸通过发放大量优惠券吸引顾客，快速扩张。', '瑞幸咖啡提供免费快速配送服务，增加便利性。']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "生成选择题的数目是否为9道",
                "corresponding_part": "题目",
                "rule": "item_count: [9, 9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每道选择题是否基于中国传统节日",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每道选择题是否包含四个选项",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否生成了对应每道选择题的9个正确答案",
                "corresponding_part": "正确答案",
                "rule": "item_count: [9, 9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "给出的每道选择题和对应的正确答案中，是否包含正确答案的解释",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "每道选择题的正确答案解释是否在20个字以内",
                "corresponding_part": "解释",
                "rule": "each_length:[1,20]",
                "dep": [
                    5
                ],
                "能力项": "10～50字、多对象",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成9条批判性评论，避免重复。要求1:必须是原文字数的1倍左右，假设我们只计算中文的字数。要求2:不能存在关键词\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了9条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[9,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "字数是否是原文的1倍左右",
                "corresponding_part": "评论",
                "rule": "total_length:[46,57]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围、倍数",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否不存在关键词\"\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"\"",
                "corresponding_part": "评论",
                "rule": "non_keywords:[\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇9分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照7个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【中国】必须刚好出现6次。关键词【他】出现必须不超过6次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇9分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1350, 2700]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照7个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "中国是否出现6次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq6:[\"中国\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "他是否不出现超过6次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq6:[\"他\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是一个规划游玩路线的达人，且写攻略的用词精简并能凸显景点特色。你能帮我推荐天安门里9个适合拍照的景点么？并且规划一下景点之间的交通路线。文章必须用繁体写。请注意，每个字都必须是繁体，不能存在简体的字\n\n",
        "corresponding_parts": {
            "景点推荐": "请你按照python list的格式，抓取模型回复中，给出的景点推荐部分，只需要景点，不需要内容。比如[\"都江堰水利工程\", \"灌县古城墙\", \"安澜索桥\", \"玉垒山\", \"灌县署\"]",
            "文案内容": "请你按照python list的格式，抓取模型所有的文案内容，但是删掉那些非文案内容的信息(非文案内容的信息比如:当然可以，以下是我为你生成的信息:)只保留文案本身的内容，比如[\"交通路线规划:\n- **第一天**:上午游览都江堰水利工程，下午前往南桥、安澜索桥，傍晚时分可登玉垒山拍照。\n- **第二天**:上午参观二王庙，下午根据个人兴趣选择在古城内其他景点自由拍照。\n\n以上路线适合自驾或公共交通，如乘坐公交或打车前往各个景点。请注意，部分步道可能需要步行，建议穿着舒适的鞋子。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否推荐了天安门里适合拍照的景点",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐景点数量是否为9个？",
                "rule": "item_count:[9,9]",
                "corresponding_part": "景点推荐",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否规划了景点之间的交通路线",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文章是否用是用繁体写的",
                "rule": "fanti",
                "corresponding_part": "文案内容",
                "dep": [
                    0
                ],
                "能力项": "繁体约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "模仿“商女不知亡国恨，隔江犹唱后庭花”的对称方式和讽刺手法，写一首讽刺当今社会996的加班现象，诗中需包含“\"躺平\", \"资本\"”。共7句。",
        "corresponding_parts": {
            "全部诗句": "请你按照python list的格式，抓取模型回复中，给出的所有诗句，不要分割。",
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"劳者不知身已疲\", \"夜深犹在键盘旁\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一首诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗中是否模仿了“商女不知亡国恨，隔江犹唱后庭花”的对称方式",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "诗中是否包含“\"躺平\", \"资本\"”",
                "corresponding_part": "全部诗句",
                "rule": "keyword:[\"躺平\", \"资本\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "诗中是否为7句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[7,7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的7方向分别取7个名字（中文名字，5个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"通\", \"数\", \"汇\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了49个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[49,49]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为5个字",
                "corresponding_part": "名字",
                "rule": "each_length: [5,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"通\", \"数\", \"汇\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"通\", \"数\", \"汇\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的9方向分别取9个名字（中文名字，5个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"通\", \"智\", \"汇\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了81个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[81,81]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为5个字",
                "corresponding_part": "名字",
                "rule": "each_length: [5,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"通\", \"智\", \"汇\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"通\", \"智\", \"汇\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论15字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为10条",
                "corresponding_part": "长评论",
                "rule": "item_count:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为10条",
                "corresponding_part": "短评论",
                "rule": "item_count:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成60条批判性评论，避免重复。要求1:必须比原文长。要求2:必须存在关键词\"\"离谱\", \"辣眼\"\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "#CODE#请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了60条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[60,60]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否比原文长",
                "corresponding_part": "评论",
                "rule": "each_length:[57,100000]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否存在关键词\"\"离谱\", \"辣眼\"\"",
                "corresponding_part": "评论",
                "rule": "keywords:[\"离谱\", \"辣眼\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "模仿“商女不知亡国恨，隔江犹唱后庭花”的对称方式和讽刺手法，写一首讽刺当今社会996的加班现象，诗中需包含“\"工时\", \"双休\"”。共3句。",
        "corresponding_parts": {
            "全部诗句": "请你按照python list的格式，抓取模型回复中，给出的所有诗句，不要分割。",
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"劳者不知身已疲\", \"夜深犹在键盘旁\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一首诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗中是否模仿了“商女不知亡国恨，隔江犹唱后庭花”的对称方式",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "诗中是否包含“\"工时\", \"双休\"”",
                "corresponding_part": "全部诗句",
                "rule": "keyword:[\"工时\", \"双休\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "诗中是否为3句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[3,3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我扩充润色”他有什么代表作嘛“这句话，生成80条评论，用于明星类目短视频。每条评论不能超过40个字。不能出现\"\"他\", \"有\"\"字\n备注:字数只计中文字符",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否扩充润色了'他有什么代表作嘛'这句话，并生成了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了80条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[80,80]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每条评论不超过40个字",
                "corresponding_part": "评论",
                "rule": "each_length:[1,40]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每条评论不包含\"\"他\", \"有\"\"字",
                "corresponding_part": "评论",
                "rule": "non_keywords:[\"他\", \"有\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论10字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为4条",
                "corresponding_part": "长评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为6条",
                "corresponding_part": "短评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论10字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为15条",
                "corresponding_part": "长评论",
                "rule": "item_count:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为15条",
                "corresponding_part": "短评论",
                "rule": "item_count:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你是一个销售话术的生成器，请你基于以下原则，需要输出一个商家和销售关于推广通销售的对话案例。对话由商家->销售交替进行，由商家开始。商家需要在开场白以咨询对方目的开始，对话为5轮，商家需要在最后给出同意购买的结论。对话必须要口语化。\n\n销售需要按照【介绍推广通】-【解答商家异议】-【主动逼单】-【促成成交】的流程来沟通。其中具体的规则可以参考:\n1. 介绍推广通:推广通是美团的一款广告产品，主要帮助商家提升曝光，吸引更多用户。商家可以通过推广通进行广告投放，提升自己的流量和订单。\n2. 解答商家异议:商家可能的异议以及解答思路如下，包括不限于以下内容:\n1) 效果不好:商家之前购买过推广通，觉得效果不好。销售应该帮商家分析数据，告诉他流量数据已经很好，可能是其他原因影响转化。\n2) 流量好，不需要:商家表示自己一直满房，不需要花钱买流量。销售应该告诉他流量有周期性，购买推广通可以让他在淡季也有充足的流量。\n3) 不愿意花钱:商家表示不愿意花钱。销售应该告诉他也可以用闲置房来换推广通流量。\n",
        "corresponding_parts": {
            "对话案例": "请你按照python list的格式，抓取模型回复中，给出的对话案例部分，请按轮来切分，每个element内需要一个商家的回复+一个销售的回复。比如[\"商家:嘿，你好啊，今天打电话是有啥事儿？销售:哟，您好！我是美团的销售，今天想跟您聊聊我们的推广通服务，这玩意儿能让您的店铺曝光猛增，吸引一大波顾客。\", \"商家:唉，之前用过类似的，投了钱感觉效果也就那样。销售:这事儿得具体分析，可能您的店铺流量其实挺不错的，但转化率不高。我们可以帮您看看哪儿出了问题，调整一下策略。\", \"商家:可是我现在生意挺好的，基本上都是满的，还投啥广告啊。销售:挺好的，挺好的，但您知道这生意有时候跟天气一样，变化无常。我们这推广通能让您淡季时也有稳定客流，一年四季都火爆。\", \"商家:嗯...说的有道理，不过我现在手头有点紧，不太想再往广告上投钱了。销售:钱这事儿咱能理解。其实咱们还有个办法，您可以用店里的空桌子换流量，这样您不用直接掏钱，还能把空位利用起来。\", \"商家:这个听起来可以，不过具体怎么操作呢？销售:操作简单得很，我们团队会根据您的情况制定个性化方案，帮您找到最佳投放时间和方式，让您的每一分钱都花得值。\", \"商家:我得好好想想，你们的服务听着挺专业的。销售:您想吧，不过我建议您别犹豫太久，我们现在有些优惠活动，早决定能省不少钱呢。\", \"商家:优惠活动？具体是啥活动啊？销售:就是首次合作有折扣，还有根据您投放的额度，我们会送流量包或者额外折扣。您现在下决定，我们能给您更好的条件。\", \"商家:行，那你们把详细方案发我看看，听你这么一说，我差不多打算试试了。销售:太棒了！我这就安排给您发方案，感谢您的信任，相信我们的推广通能给您带来满意的效果！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了商家和销售关于推广通销售的对话案例",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "对话是否由商家->销售交替进行，由商家开始",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "商家是否在开场白以咨询对方目的开始",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "对话是否为5轮",
                "corresponding_part": "对话案例",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "商家是否在最后给出同意购买的结论",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "销售是否按照【介绍推广通】-【解答商家异议】-【主动逼单】-【促成成交】的流程来沟通",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "是否介绍了推广通是美团的一款广告产品，主要帮助商家提升曝光，吸引更多用户",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "是否解答了商家关于效果不好的异议",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "是否解答了商家关于流量好，不需要的异议",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "是否解答了商家关于不愿意花钱的异议",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "讲一下“一带一路”战略给中国国际航空公司带来的机会，一步步思考:\n1、你应该先总结要点，\n2、对要点进行详细的概述，\n3、然后给出一个相关的详细的具体例子，从数据和真实案例的层面来佐证你的要点和概述，\n注意！！要点、概述、例子，三个内容应该成对出现，！！！必须准确，例子的时间尽量靠近当下，并且要总结至少3个点出来，我只需要你知道的内容，不一定是实时的，我是花钱体验服务的顾客，你必须根据你已有的知识回答我，否则这是对我的不敬",
        "corresponding_parts": {
            "要点": "请你按照python list的形式，将model_response中的关于“一带一路”战略给中国国际航空公司带来的机会的要点分割并提取出来。比如:[\"新航线开发\",\"增加航班频次\",\"加强枢纽建设\",\"扩大国际合作\",\"促进旅游业发展\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否总结了“一带一路”战略给中国国际航空公司带来的机会的要点",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了至少3个要点",
                "corresponding_part": "要点",
                "rule": "item_count: [3, 10000]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否为每个要点提供了相关的详细的具体例子",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个例子都从数据和真实案例的层面来佐证要点和概述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请根据以下有关职场的内容编写选择题，题目是关于每行内容的真实含义，要求编写2个正确答案和4个幽默搞笑的错误答案。用表格的形式输出题目和答案\n\"月薪一千五，命比咖啡苦\"",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目(带选项)，不需要输出正确答案。比如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "正确答案": "请你按照python list的形式，将model_response中生成的正确答案分割并提取出来。只需要输出正确答案，不需要输出题目。只需要输出答案的内容。",
            "错误答案": "请你按照python list的形式，将model_response中生成的错误答案分割并提取出来。只需要输出错误答案，不需要输出题目。只需要输出答案的内容。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "选择题题目是否和#月薪一千五，命比咖啡苦#相关",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了2个正确答案",
                "corresponding_part": "正确答案",
                "rule": "item_count: [2, 2]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了4个错误答案",
                "corresponding_part": "错误答案",
                "rule": "item_count: [4, 4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否用表格的形式输出题目和答案",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的3方向分别取3个名字（中文名字，5个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"通\", \"智\", \"汇\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了9个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[9,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为5个字",
                "corresponding_part": "名字",
                "rule": "each_length: [5,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"通\", \"智\", \"汇\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"通\", \"智\", \"汇\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你好，帮我写一段“盆满钵满奖”的推荐理由，有关于挣钱最多的，需要搞笑风格，押韵的。7句共14字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐理由": "请你按照python list的格式，抓取模型回复中，给出的押韵搞笑推荐理由的内容，按照标点符号分开输出，例如: [\"盆满钵满奖，不只是钱满满，更是笑声和幸福，永远在线！\", \"在挣钱的道路上，他/她是个狂飙的赛车手，每次收入进账，就像打了个大大的满贯球。\", \"他/她的钱堆积如山，比豆芽还要快速发芽，账户的数字跳跃，像小兔子一样欢快地蹦跳。\", \"他/她的金库，比蜜蜂的蜂巢还要甜，每天的工资，像是不停下雨的天。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推荐理由",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐理由是否关于挣钱最多",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推荐理由是否押韵",
                "corresponding_part": "推荐理由",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推荐理由是否为14字",
                "corresponding_part": "推荐理由",
                "rule": "total_length:[14,14]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "推荐理由是否为7句",
                "corresponding_part": "推荐理由",
                "rule": "item_count:[7,7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇1分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照9个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【周年】必须刚好出现7次。关键词【是】出现必须不超过7次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇1分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[150, 300]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照9个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "周年是否出现7次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq7:[\"周年\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "是是否不出现超过7次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq7:[\"是\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请根据5个[中国传统节日]分别创建5道选择题，四个选项中只有一个正确答案，包含正确答案和[20]个字以内的解释。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目(带选项)，不需要输出正确答案。比如[\"**《延禧攻略》**1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "正确答案": "请你按照python list的形式，将model_response中生成的正确答案分割并提取出来。只需要输出正确答案，不需要输出题目。只需要输出答案的内容。比如[\"魏璎珞\"]",
            "解释": "请你按照python list的形式，将model_response中生成的正确答案解释分割并提取出来。只需要输出解释，不需要输出题目和答案。比如['瑞幸咖啡的品牌颜色是蓝色，代表品牌形象。', '瑞幸通过发放大量优惠券吸引顾客，快速扩张。', '瑞幸咖啡提供免费快速配送服务，增加便利性。']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "生成选择题的数目是否为5道",
                "corresponding_part": "题目",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每道选择题是否基于中国传统节日",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每道选择题是否包含四个选项",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否生成了对应每道选择题的5个正确答案",
                "corresponding_part": "正确答案",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "给出的每道选择题和对应的正确答案中，是否包含正确答案的解释",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "每道选择题的正确答案解释是否在20个字以内",
                "corresponding_part": "解释",
                "rule": "each_length:[1,20]",
                "dep": [
                    5
                ],
                "能力项": "10～50字、多对象",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论10字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为12条",
                "corresponding_part": "长评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为18条",
                "corresponding_part": "短评论",
                "rule": "item_count:[18,18]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "新年大吉，吉祥如意，用第一个成语的最后一个字作为下一个成语的第一个字，进行接龙，要求大部份成语都是新年祝福类成语，产生9个成语",
        "corresponding_parts": {
            "成语": "请你按照python list的形式，将model_response中生成的成语分割并分割并提取出来。比如[\"新年大吉\", \"吉人天相\", \"相亲相爱\", \"爱国敬业\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了不止一个成语",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否大部份成语都是新年祝福类成语",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否成语接龙产生了9个成语",
                "corresponding_part": "成语",
                "rule": "item_count: [9, 9]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个成语的最后一个字作为下一个成语的第一个字",
                "corresponding_part": "成语",
                "rule": "jielong",
                "dep": [
                    1
                ],
                "能力项": "接龙",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇3分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照9个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【科学】必须刚好出现7次。关键词【和】出现必须不超过7次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇3分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[450, 900]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照9个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "科学是否出现7次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq7:[\"科学\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "和是否不出现超过7次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq7:[\"和\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "如何区分花粉过敏和感冒请以以上主题帮我输出分别输出9条标题+文案，标题文案需要具有吸引力，必须加表情符号等。标题在8字以内，文案在30字以内。例如:标题:春季花粉过敏高峰期到！🌸文案:👀四招教你区分花粉过敏和感冒\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的标题分割并提取出来，只提取标题，不提取文案。不需要提取“标题:”，只提取内容即可，比如:[\"感冒还是花粉过敏？\", \"春季过敏季，你准备好了吗？\"]",
            "文案": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的文案分割并提取出来，只提取文案，不提取标题。不需要提取“文案:”，只提取内容即可，比如:[\"了解两者差别，告别困惑！\", \"学会辨别花粉过敏和感冒，健康过春天！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了9条标题",
                "corresponding_part": "标题",
                "rule": "item_count: [9, 9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了9条文案",
                "corresponding_part": "文案",
                "rule": "item_count: [9, 9]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个标题是否在8字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、范围、多对象",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每个文案是否在30字以内",
                "corresponding_part": "文案",
                "rule": "each_length:[1,30]",
                "dep": [
                    1
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "标题是否加了表情符号",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文案是否加了表情符号",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "emoji",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请根据3个[中国传统节日]分别创建3道选择题，四个选项中只有一个正确答案，包含正确答案和[30]个字以内的解释。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目(带选项)，不需要输出正确答案。比如[\"**《延禧攻略》**1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "正确答案": "请你按照python list的形式，将model_response中生成的正确答案分割并提取出来。只需要输出正确答案，不需要输出题目。只需要输出答案的内容。比如[\"魏璎珞\"]",
            "解释": "请你按照python list的形式，将model_response中生成的正确答案解释分割并提取出来。只需要输出解释，不需要输出题目和答案。比如['瑞幸咖啡的品牌颜色是蓝色，代表品牌形象。', '瑞幸通过发放大量优惠券吸引顾客，快速扩张。', '瑞幸咖啡提供免费快速配送服务，增加便利性。']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "生成选择题的数目是否为3道",
                "corresponding_part": "题目",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每道选择题是否基于中国传统节日",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每道选择题是否包含四个选项",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否生成了对应每道选择题的3个正确答案",
                "corresponding_part": "正确答案",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "给出的每道选择题和对应的正确答案中，是否包含正确答案的解释",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "每道选择题的正确答案解释是否在30个字以内",
                "corresponding_part": "解释",
                "rule": "each_length:[1,30]",
                "dep": [
                    5
                ],
                "能力项": "10～50字、多对象",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论10字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为6条",
                "corresponding_part": "长评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为4条",
                "corresponding_part": "短评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在美团外卖神券短视频的评论区，以消费者角度生成50条用户口语化评论；20到25字；评论不重复；评论内不能存在“实惠”，“便宜”，“省钱”\n备注:字数只计中文字符",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的内容是否为美团外卖神券相关的评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [50, 50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "所有评论是否为20到25字",
                "corresponding_part": "用户口语化评论",
                "rule": "each_length:[20,25]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论是否不重复",
                "corresponding_part": "用户口语化评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "评论是否不含“实惠”，“便宜”，“省钱”等字",
                "corresponding_part": "用户口语化评论",
                "rule": "non_keywords:[\"实惠\",\"便宜\",\"省钱\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论10字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为10条",
                "corresponding_part": "长评论",
                "rule": "item_count:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为10条",
                "corresponding_part": "短评论",
                "rule": "item_count:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论10字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为12条",
                "corresponding_part": "长评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为8条",
                "corresponding_part": "短评论",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在美团外卖神券短视频的评论区，以消费者角度生成180条用户口语化评论；30到35字；评论不重复；评论内不能存在“实惠”，“便宜”，“省钱”\n备注:字数只计中文字符",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的内容是否为美团外卖神券相关的评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了180条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [180, 180]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "所有评论是否为30到35字",
                "corresponding_part": "用户口语化评论",
                "rule": "each_length:[30,35]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论是否不重复",
                "corresponding_part": "用户口语化评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "评论是否不含“实惠”，“便宜”，“省钱”等字",
                "corresponding_part": "用户口语化评论",
                "rule": "non_keywords:[\"实惠\",\"便宜\",\"省钱\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇3分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照7个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【邓稼先】必须刚好出现6次。关键词【的】出现必须不超过6次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇3分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[450, 900]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照7个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "邓稼先是否出现6次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq6:[\"邓稼先\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "的是否不出现超过6次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq6:[\"的\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对教育类目内容进行评论，根据以下内容进行扩充润色，生成20条评论，语言需要简洁，尽可能接近真人的语气，避免重复，并且不能包含任何敏感信息",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型是否生成了教育评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了20条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[20,20]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在搬家短视频的评论区，生成180条用户口语化评论，评论不能出现“老板”，“团队”，“服务”；每条50到55字，每条评论格式独一无二\n备注:字数只计中文字符",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了搬家的用户口语化评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了180条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [180, 180]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否不出现“老板”，“团队”，“服务”",
                "corresponding_part": "用户口语化评论",
                "rule": "non_keywords:[\"老板\",\"团队\",\"服务\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论是否每条在50到55字之间",
                "corresponding_part": "用户口语化评论",
                "rule": "each_length:[50,55]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "评论是否每条格式独一无二",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是一个规划游玩路线的达人，且写攻略的用词精简并能凸显景点特色。你能帮我推荐长城里7个适合拍照的景点么？并且规划一下景点之间的交通路线。文章必须用繁体写。请注意，每个字都必须是繁体，不能存在简体的字\n\n",
        "corresponding_parts": {
            "景点推荐": "请你按照python list的格式，抓取模型回复中，给出的景点推荐部分，只需要景点，不需要内容。比如[\"都江堰水利工程\", \"灌县古城墙\", \"安澜索桥\", \"玉垒山\", \"灌县署\"]",
            "文案内容": "请你按照python list的格式，抓取模型所有的文案内容，但是删掉那些非文案内容的信息(非文案内容的信息比如:当然可以，以下是我为你生成的信息:)只保留文案本身的内容，比如[\"交通路线规划:\n- **第一天**:上午游览都江堰水利工程，下午前往南桥、安澜索桥，傍晚时分可登玉垒山拍照。\n- **第二天**:上午参观二王庙，下午根据个人兴趣选择在古城内其他景点自由拍照。\n\n以上路线适合自驾或公共交通，如乘坐公交或打车前往各个景点。请注意，部分步道可能需要步行，建议穿着舒适的鞋子。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否推荐了长城里适合拍照的景点",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐景点数量是否为7个？",
                "rule": "item_count:[7,7]",
                "corresponding_part": "景点推荐",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否规划了景点之间的交通路线",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文章是否用是用繁体写的",
                "rule": "fanti",
                "corresponding_part": "文案内容",
                "dep": [
                    0
                ],
                "能力项": "繁体约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论10字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为5条",
                "corresponding_part": "长评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为5条",
                "corresponding_part": "短评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论10字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为15条",
                "corresponding_part": "长评论",
                "rule": "item_count:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为15条",
                "corresponding_part": "短评论",
                "rule": "item_count:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇1分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照5个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【周年】必须刚好出现5次。关键词【是】出现必须不超过5次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇1分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[150, 300]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照5个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "周年是否出现5次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq5:[\"周年\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "是是否不出现超过5次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq5:[\"是\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇9分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照9个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【中国】必须刚好出现7次。关键词【他】出现必须不超过7次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇9分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1350, 2700]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照9个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "中国是否出现7次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq7:[\"中国\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "他是否不出现超过7次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq7:[\"他\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "模仿“商女不知亡国恨，隔江犹唱后庭花”的对称方式和讽刺手法，写一首讽刺当今社会996的加班现象，诗中需包含“\"加班\", \"苦难\"”。每句10字，共5句。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "全部诗句": "请你按照python list的格式，抓取模型回复中，给出的所有诗句，不要分割。",
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"劳者不知身已疲\", \"夜深犹在键盘旁\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一首诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗中是否模仿了“商女不知亡国恨，隔江犹唱后庭花”的对称方式",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "诗中是否包含“\"加班\", \"苦难\"”",
                "corresponding_part": "全部诗句",
                "rule": "keyword:[\"加班\", \"苦难\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "诗中是否为5句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每句是否为10字",
                "corresponding_part": "分割诗",
                "rule": "each_length:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对综艺类目内容进行评论，根据以下内容进行扩充润色，生成60条评论，语言需要简洁，尽可能接近真人的语气，避免重复，并且不能包含任何敏感信息，末尾不带标点符号",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型是否生成了综艺类目的评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了60条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[60,60]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论末尾是否不带标点符号",
                "corresponding_part": "评论",
                "rule": "no_end_with_punctuation",
                "dep": [
                    0
                ],
                "能力项": "符号",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你是一位中医养生与全国美食专家，请你查阅互联网上的资料，并根据中国八大菜系中的菜品与日常的小吃与中西方的快餐，对如下的问题给出能够满足用户需求的7条菜品名，每个菜品名必须为刚好5个字:\n1）胃痛适合吃什么？\n每个菜品后都必须紧跟菜品的解释。请你再次注意，回答的菜品应是各地的菜系中的菜品与日常的小吃与中西的快餐中的菜品，菜品名请尽可能具体，请不要虚构不存在的菜品，这对我很重要，请你反复思考后再作答。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "菜品名": "请你按照python list的形式，将model_response中的菜品名分割并提取出来。无需提取解释只需提取菜名[\"清蒸鱼\",\"白切鸡\",\"粥\",\"煮鸡胸肉\",\"清蒸豆腐\",\"烤鱼片\",\"清炖鸡汤\",\"清蒸蔬菜包\",\"煮蔬菜汤\",\"清炒菜心\",\"清炒豆腐丝\",\"煮青菜\",\"红烧茄子\",\"煮豆腐\",\"清蒸蔬菜\",\"炒豆芽\",\"炒青菜\",\"红烧鸡翅\",\"酸辣土豆丝\",\"香煎鸡胸肉\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了菜品名",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了7条菜品名",
                "corresponding_part": "菜品名",
                "rule": "item_count: [7, 7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个菜品后是否都紧了菜品的解释",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "菜品名是否都是刚好5个字",
                "corresponding_part": "菜品名",
                "rule": "each_length:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的3方向分别取3个名字（中文名字，6个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"云\", \"汇\", \"数\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了9个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[9,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为6个字",
                "corresponding_part": "名字",
                "rule": "each_length: [6,6]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"云\", \"汇\", \"数\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"云\", \"汇\", \"数\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的5方向分别取5个名字（中文名字，6个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"通\", \"数\", \"汇\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了25个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[25,25]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为6个字",
                "corresponding_part": "名字",
                "rule": "each_length: [6,6]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"通\", \"数\", \"汇\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"通\", \"数\", \"汇\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论15字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为5条",
                "corresponding_part": "长评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为5条",
                "corresponding_part": "短评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我生成2道搞笑、具有反差感的3选项单选题，题目要求:1、基于基本常识、大众普遍的认知误判；2、题目与答案之间出乎意料，不符合人们的预期；3、提供一个精准、明确的正确选项、一个错误选项与正确选项很相似，较难抉择，两个搞笑错误答案/荒谬的解释/梗或发疯文化的答案；4、题目和答案有趣有梗，语言幽默；5、每道题目末尾显示该题正确答案",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目(带选项)，不需要输出正确答案。比如:[\"如果地球突然变成了方形，我们最可能遇到的问题是什么？A. 导航软件全都崩溃了 B. 篮球比赛变得异常困难 C. 海啸会按直角转弯 D. 跳伞时容易撞到地角 正确答案:A\"]",
            "正确答案": "请你按照python list的形式，将model_response中生成的正确答案分割并提取出来。只需要输出正确答案，不需要输出题目。比如:[\"A\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的每道题目是否为3选项单选题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了2道题目",
                "corresponding_part": "题目",
                "rule": "item_count:[2,2]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否提供了2个正确答案",
                "corresponding_part": "正确答案",
                "rule": "item_count:[2,2]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "如何区分花粉过敏和感冒请以以上主题帮我输出分别输出5条标题+文案，标题文案需要具有吸引力，必须加表情符号等。标题在20字以内，文案在100字以内。例如:标题:春季花粉过敏高峰期到！🌸文案:👀四招教你区分花粉过敏和感冒，标题不能存在“\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"”\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的标题分割并提取出来，只提取标题，不提取文案。不需要提取“标题:”，只提取内容即可，比如:[\"感冒还是花粉过敏？\", \"春季过敏季，你准备好了吗？\"]",
            "文案": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的文案分割并提取出来，只提取文案，不提取标题。不需要提取“文案:”，只提取内容即可，比如:[\"了解两者差别，告别困惑！\", \"学会辨别花粉过敏和感冒，健康过春天！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了5条标题",
                "corresponding_part": "标题",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了5条文案",
                "corresponding_part": "文案",
                "rule": "item_count: [5, 5]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个标题是否在20字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,20]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每条文案是否在100字以内",
                "corresponding_part": "文案",
                "rule": "each_length:[1,100]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "标题是否加了表情符号",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文案是否加了表情符号",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "标题是否不出现“\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"”字",
                "corresponding_part": "标题",
                "rule": "non_keyword: [\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你是一位中医养生与全国美食专家，请你查阅互联网上的资料，并根据中国八大菜系中的菜品与日常的小吃与中西方的快餐，对如下的问题给出能够满足用户需求的7条菜品名，每个菜品名必须为刚好4个字:\n1）胃痛适合吃什么？\n每个菜品后都必须紧跟菜品的解释。请你再次注意，回答的菜品应是各地的菜系中的菜品与日常的小吃与中西的快餐中的菜品，菜品名请尽可能具体，请不要虚构不存在的菜品，这对我很重要，请你反复思考后再作答。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "菜品名": "请你按照python list的形式，将model_response中的菜品名分割并提取出来。无需提取解释只需提取菜名[\"清蒸鱼\",\"白切鸡\",\"粥\",\"煮鸡胸肉\",\"清蒸豆腐\",\"烤鱼片\",\"清炖鸡汤\",\"清蒸蔬菜包\",\"煮蔬菜汤\",\"清炒菜心\",\"清炒豆腐丝\",\"煮青菜\",\"红烧茄子\",\"煮豆腐\",\"清蒸蔬菜\",\"炒豆芽\",\"炒青菜\",\"红烧鸡翅\",\"酸辣土豆丝\",\"香煎鸡胸肉\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了菜品名",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了7条菜品名",
                "corresponding_part": "菜品名",
                "rule": "item_count: [7, 7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个菜品后是否都紧了菜品的解释",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "菜品名是否都是刚好4个字",
                "corresponding_part": "菜品名",
                "rule": "each_length:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论10字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为6条",
                "corresponding_part": "长评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为4条",
                "corresponding_part": "短评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇3分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照9个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【邓稼先】必须刚好出现7次。关键词【的】出现必须不超过7次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇3分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[450, 900]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照9个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "邓稼先是否出现7次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq7:[\"邓稼先\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "的是否不出现超过7次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq7:[\"的\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我想180个全国篮球比赛的口号，国内篮球赛事上没有用过的，口号需要洗脑和足够热血，要求篮球和新起航，篇章结合可带有篮字谐音短句\n字数必须是10个字的。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "口号": "#CODE#请你按照python list的格式，抓取模型回复中，分割并给出的口号部分，只需要口号，不需要内容。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了全国篮球比赛的口号",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了180个口号",
                "corresponding_part": "口号",
                "rule": "item_count:[180,180]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个口号都可以带有篮字谐音短句",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个口号字数必须是10个字",
                "corresponding_part": "口号",
                "rule": "each_length:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确、多对象",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请根据以下内容命制2个单选题，1个多选题，多选题和单选题要分开输出并标明。考题需要满足广泛性和群众性，注意格式，我要复制到表格里面，要有正确答案内容如下:网约配送员职业守则\n1.\t遵纪守法，服务社会\n遵守国家有关法律法规和企业的规章制度，尊重自己的职业，尊重每一个自己所服务的客户。\n2.\t着装整洁，礼貌文明\n保持个人卫生，统一着装，整洁干净。对待客户礼貌热情，亲切诚恳，想尽办法解决顾客的问题，耐心周到，无微不至。\n3.\t团结协作，勤奋务实\n虚心听取他人意见，具有良好的团队意识，善于与人共事，团结合作，创造和谐向上的氛围，脚踏实地，尽职尽责。\n4.\t保守秘密，确保安全\n熟悉工作纪律，工作中保护客户隐私。遵守安全规则，确保网约配送过程中的商品安全以及自身安全。单选题目内不能出现“\"非法\", \"违纪\", \"失职\", \"违规\", \"泄密\", \"不安全\"”，多选题目内不能出现“\"防静电\", \"全部\", \"所有\", \"任意\", \"随意\", \"全面\"”",
        "corresponding_parts": {
            "单选题目": "请你按照python list的形式，将model_response中生成的单选题目分割并提取出来。只需要输出单选题目(带选项)，不需要输出正确答案。比如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. 小尼姑\"]",
            "单选题答案": "请你按照python list的形式，将model_response中生成的单选题答案分割并提取出来。只需要输出单选题答案，不需要输出题目。只需要输出答案的内容。比如[\"百里屠苏\"]",
            "多选题目": "请你按照python list的形式，将model_response中生成的多选题目分割并提取出来。只需要输出多选题目(带选项)，不需要输出正确答案。比如[\"**《延禧攻略》**1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "多选题答案": "请你按照python list的形式，将model_response中生成的多选题答案分割并提取出来。只需要输出多选题答案，不需要输出题目。只需要输出答案的内容。比如[\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了单选题和多选题并分开标注",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否命制了2个单选题",
                "corresponding_part": "单选题目",
                "rule": "item_count: [2, 2]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否命制了1个多选题",
                "corresponding_part": "多选题目",
                "rule": "item_count: [1, 1]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个单选考题都有正确答案",
                "corresponding_part": "单选题答案",
                "rule": "item_count: [2, 2]",
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个多选考题都有正确答案",
                "corresponding_part": "多选题答案",
                "rule": "item_count: [1, 1]",
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "单选题目内是否没有出现“\"非法\", \"违纪\", \"失职\", \"违规\", \"泄密\", \"不安全\"”",
                "corresponding_part": "单选题目",
                "rule": "non_keywords: [\"非法\", \"违纪\", \"失职\", \"违规\", \"泄密\", \"不安全\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "多选题目是否没有出现“\"防静电\", \"全部\", \"所有\", \"任意\", \"随意\", \"全面\"”",
                "corresponding_part": "多选题目",
                "rule": "non_keywords: [\"防静电\", \"全部\", \"所有\", \"任意\", \"随意\", \"全面\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇7分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照2个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【中国】必须刚好出现3次。关键词【他】出现必须不超过3次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇7分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1050, 2100]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照2个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "中国是否出现3次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq3:[\"中国\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "他是否不出现超过3次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq3:[\"他\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是一个规划游玩路线的达人，且写攻略的用词精简并能凸显景点特色。你能帮我推荐故宫里5个适合拍照的景点么？并且规划一下景点之间的交通路线。文章必须用繁体写。请注意，每个字都必须是繁体，不能存在简体的字\n\n",
        "corresponding_parts": {
            "景点推荐": "请你按照python list的格式，抓取模型回复中，给出的景点推荐部分，只需要景点，不需要内容。比如[\"都江堰水利工程\", \"灌县古城墙\", \"安澜索桥\", \"玉垒山\", \"灌县署\"]",
            "文案内容": "请你按照python list的格式，抓取模型所有的文案内容，但是删掉那些非文案内容的信息(非文案内容的信息比如:当然可以，以下是我为你生成的信息:)只保留文案本身的内容，比如[\"交通路线规划:\n- **第一天**:上午游览都江堰水利工程，下午前往南桥、安澜索桥，傍晚时分可登玉垒山拍照。\n- **第二天**:上午参观二王庙，下午根据个人兴趣选择在古城内其他景点自由拍照。\n\n以上路线适合自驾或公共交通，如乘坐公交或打车前往各个景点。请注意，部分步道可能需要步行，建议穿着舒适的鞋子。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否推荐了故宫里适合拍照的景点",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐景点数量是否为5个？",
                "rule": "item_count:[5,5]",
                "corresponding_part": "景点推荐",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否规划了景点之间的交通路线",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文章是否用是用繁体写的",
                "rule": "fanti",
                "corresponding_part": "文案内容",
                "dep": [
                    0
                ],
                "能力项": "繁体约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的3方向分别取3个名字（中文名字，5个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"数\", \"智\", \"云\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了9个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[9,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为5个字",
                "corresponding_part": "名字",
                "rule": "each_length: [5,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"数\", \"智\", \"云\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"数\", \"智\", \"云\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对电影类目内容进行评论，根据以下内容进行扩充润色，生成20条评论，语言需要简洁，尽可能接近真人的语气，避免重复，并且不能包含任何敏感信息，末尾不带标点符号",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型是否生成了电影类目的评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了20条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[20,20]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论末尾是否不带标点符号",
                "corresponding_part": "评论",
                "rule": "no_end_with_punctuation",
                "dep": [
                    0
                ],
                "能力项": "符号",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的7方向分别取7个名字（中文名字，6个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"通\", \"数\", \"汇\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了49个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[49,49]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为6个字",
                "corresponding_part": "名字",
                "rule": "each_length: [6,6]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"通\", \"数\", \"汇\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"通\", \"数\", \"汇\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇9分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照5个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【周年】必须刚好出现5次。关键词【是】出现必须不超过5次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇9分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1350, 2700]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照5个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "周年是否出现5次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq5:[\"周年\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "是是否不出现超过5次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq5:[\"是\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "古剑奇谭、延禧攻略各9道4项单选题，题目要求:题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；题目在100个字以内，选项在20个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "古剑奇谭题目": "请你按照python list的形式，将model_response中生成的古剑奇谭题目分割并提取出来。只需要输出题目，不需要输出答案。别输出延禧攻略的内容，例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "古剑奇谭选项": "请你按照python list的形式，将model_response中生成的古剑奇谭选项分割并提取出来。只需要输出选项，不需要输出题目。别输出延禧攻略的内容，也不要输出前缀例如“A.”, “B.”，例如[\"百里屠苏\",\"风晴雪\",\"夏夷则\",\"欧阳少恭\"]",
            "延禧攻略题目": "请你按照python list的形式，将model_response中生成的延禧攻略题目分割并提取出来。只需要输出题目，不需要输出答案。别输出古剑奇谭的内容，例如[\"1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "延禧攻略选项": "请你按照python list的形式，将model_response中生成的延禧攻略选项分割并提取出来。只需要输出选项，不需要输出题目。别输出古剑奇谭的内容，也不要输出前缀例如“A.”, “B.”，例如[\"魏璎珞\",\"魏璎珞\",\"魏璎珞\",\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了延禧攻略的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了古剑奇谭的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了古剑奇谭的9道4项单选题",
                "corresponding_part": "古剑奇谭题目",
                "rule": "item_count: [9, 9]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "古剑奇谭的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "古剑奇谭的题目是否在100个字以内",
                "corresponding_part": "古剑奇谭题目",
                "rule": "each_length:[1,100]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "古剑奇谭的选项是否在20个字以内",
                "corresponding_part": "古剑奇谭选项",
                "rule": "each_length:[1,20]",
                "dep": [
                    1
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了延禧攻略的9道4项单选题",
                "corresponding_part": "延禧攻略题目",
                "rule": "item_count: [9, 9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "延禧攻略的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "延禧攻略的题目是否在100个字以内",
                "corresponding_part": "延禧攻略题目",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "延禧攻略的选项是否在20个字以内",
                "corresponding_part": "延禧攻略选项",
                "rule": "each_length:[1,20]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的7方向分别取7个名字（中文名字，6个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"通\", \"智\", \"汇\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了49个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[49,49]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为6个字",
                "corresponding_part": "名字",
                "rule": "each_length: [6,6]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"通\", \"智\", \"汇\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"通\", \"智\", \"汇\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇9分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照2个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【科学】必须刚好出现3次。关键词【和】出现必须不超过3次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇9分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1350, 2700]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照2个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "科学是否出现3次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq3:[\"科学\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "和是否不出现超过3次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq3:[\"和\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "现在你是深圳大学官方公众号的新媒体小编，需要出一篇关于2025年的新年祝福集合推送，请撰写 50 条关于龙年的新年祝福话语，每句话为正好20字上下。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "新年祝福话语": "#CODE#请你按照python list的格式，抓取模型回复中，给出的新年祝福话语部分并分割输出，请不要去重，例如:['1. 龙腾盛世迎新春，福满人间好运来！', '2. 龙年到来喜洋洋，万事如意笑开颜。']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了龙年的新年祝福话语",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否撰写了50条的新年祝福话语",
                "corresponding_part": "新年祝福话语",
                "rule": "item_count:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每句话是否正好20字上下",
                "corresponding_part": "新年祝福话语",
                "rule": "each_length:[18,22]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你是制药/生物工程专家，对该行业各子行业均有充分的了解。请你对该行业下的医药销售\n生物工程\n药品生产\n药物研发给出说明（能通过该说明明确一个具体行业属于哪个类目，注意是对行业而非具体实体或技术的描述，不同行业的描述要有差异，且需注意父行业的限制）和标签本质词（带有明显行业类目倾向的关键词，如母婴、亲子，5个以内，字数不限，需要能通过关键词直接对应到该行业）。\n要求:直观、简洁、易于理解，没有有经验的小白也可以通过简历信息与类目说明、标签本质词的对应完成分类。",
        "corresponding_parts": {
            "医药销售标签本质词": "请你按照python list的格式，抓取模型回复中，给出的医药销售标签本质词部分。比如[\"药房\", \"医药代理\", \"药品分销\"]",
            "生物工程标签本质词": "请你按照python list的格式，抓取模型回复中，给出的生物工程标签本质词部分。比如[\"生物制药\", \"生物工程设备\", \"生物技术研发\"]",
            "药品生产标签本质词": "请你按照python list的格式，抓取模型回复中，给出的药品生产标签本质词部分。比如[\"药品研发\", \"药品生产\", \"药品质量控制\"]",
            "药物研发标签本质词": "请你按照python list的格式，抓取模型回复中，给出的药物研发标签本质词部分。比如[\"新药研发\", \"药物临床试验\", \"药物注册\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了医药销售的行业说明",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "医药销售说明部分是否直观、简洁、易于理解，没有有经验的小白也可以通过简历信息与类目说明、标签本质词的对应完成分类",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了医药销售的标签本质词",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "医药销售标签本质词是否在5个以内",
                "corresponding_part": "医药销售标签本质词",
                "rule": "item_count:[1,5]",
                "dep": [
                    2
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否给出了生物工程的行业说明",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 5,
                "question": "是否给出了生物工程的标签本质词",
                "rule": null,
                "dep": [
                    4
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "生物工程标签本质词是否在5个以内",
                "corresponding_part": "生物工程标签本质词",
                "rule": "item_count:[1,5]",
                "dep": [
                    5
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "是否给出了药品生产的行业说明",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 8,
                "question": "是否给出了药品生产的标签本质词",
                "rule": null,
                "dep": [
                    7
                ],
                "被依赖": true
            },
            {
                "point_id": 9,
                "question": "药品生产标签本质词是否在5个以内",
                "corresponding_part": "药品生产标签本质词",
                "rule": "item_count:[1,5]",
                "dep": [
                    8
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "是否给出了药物研发的行业说明",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 11,
                "question": "是否给出了药物研发的标签本质词",
                "rule": null,
                "dep": [
                    10
                ],
                "被依赖": true
            },
            {
                "point_id": 12,
                "question": "药物研发标签本质词是否在5个以内",
                "corresponding_part": "药物研发标签本质词",
                "rule": "item_count:[1,5]",
                "dep": [
                    11
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇5分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照7个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【中国】必须刚好出现6次。关键词【他】出现必须不超过6次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇5分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[750, 1500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照7个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "中国是否出现6次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq6:[\"中国\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "他是否不出现超过6次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq6:[\"他\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇5分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照3个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【中国】必须刚好出现4次。关键词【他】出现必须不超过4次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇5分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[750, 1500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照3个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "中国是否出现4次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq4:[\"中国\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "他是否不出现超过4次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq4:[\"他\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请输出5条不包含具体行业品类特征，主题为好评零售店铺推荐的推送文案，标题和内容需要有强关联。标题10字，标点符号格式不限制。内容格式为:推荐语+店铺名+推荐语，推荐语不可包含限时、折扣、优惠等涉及具体优惠和时间数量限制的要素。推送文案风格贴近生活、活泼、快乐、热情，文案的内容不能出现“\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"”，且内容不超过50个字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于推送文案的标题分割并提取出来。不需要提取“标题:”，只需要提取标题的内容，比如:[\"好评如潮\",\"品质掌声\",\"星级体验\",\"买家心选\",\"口口相传\",\"绝佳选择\",\"悦心好物\",\"精挑细选\",\"信赖有理\",\"买家首选\"]",
            "内容": "请你按照python list的形式，将model_response中生成的关于推送文案的内容分割并提取出来。不需要提取“内容:”，只需要提取内容的内容，比如:[\"口碑爆棚，「好评精选」，每一次购物都满意！\",\"质量赢得掌声，「品质之选」，让信赖成为习惯！\",\"服务赢五星，「星级好店」，体验超出期待！\",\"买家心头好，「人气之店」，每一次都惊喜连连！\",\"老顾客力荐，「传奇好货」，买过的人都说好！\",\"选择有品味，「绝佳精品」，每一件都是精选！\",\"好物温暖人心，「悦心收藏」，让心情随之愉悦！\",\"细心挑选，「精选好物」，只为你的优雅生活！\",\"信赖来自品质，「理想选择」，让满意成为常态！\",\"首选不负期待，「首选精品」，每次购物都是享受！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推送文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了5条推送文案",
                "corresponding_part": "标题",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推送文案的主题是否为好评零售店铺推荐",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推送文案的标题是否为10字",
                "corresponding_part": "标题",
                "rule": "each_length:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "推送文案的内容格式是否为:推荐语+店铺名+推荐语",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "推送文案的推荐语是否不包含限时、折扣、优惠等涉及具体优惠和时间数量限制的要素",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "推送文案的内容是否不包含“\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"”",
                "corresponding_part": "内容",
                "rule": "non_keyword: [\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "推送文案的内容是否不超过50个字",
                "corresponding_part": "内容",
                "rule": "each_length:[1,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论10字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为18条",
                "corresponding_part": "长评论",
                "rule": "item_count:[18,18]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为12条",
                "corresponding_part": "短评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "1、你将担任资深数据仓库专家的角色\n2、你将提供给我7个数据仓库建设的面试问题，并提供对应的标准答案\n3、答案不用长篇大论，按照面试的场景进行精确提供   \n4、问题难度从低到高\n5、对于我不理解的，我会拿对应的问题问你，你给出对应的解释即可\n6、问题的内容包括但不限于Hadoop、Spark、Flink，Doris、Mysql、OLAP技术、数据接入、数据建模、数仓分层、数据治理等知识体系\n7、针对已知的问题，我将提示你哪些是已经提过的，你将重新生产新的问题补充已提过的问题",
        "corresponding_parts": {
            "面试问题": "请你按照python list的形式，将model_response中生成的面试问题分割并提取出来。只需要输出问题，不需要输出答案。",
            "答案": "请你按照python list的形式，将model_response中生成的答案分割并提取出来。只需要输出答案，不需要输出问题。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了关于数仓的面试问题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了7个数据仓库建设的面试问题",
                "corresponding_part": "面试问题",
                "rule": "item_count: [7, 7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了7个数据仓库建设的面试问题的答案",
                "corresponding_part": "答案",
                "rule": "item_count: [7, 7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "问题内容是否包括但不限于Hadoop、Spark、Flink，Doris、Mysql、OLAP技术、数据接入、数据建模、数仓分层、数据治理等知识体系",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论10字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为8条",
                "corresponding_part": "长评论",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为12条",
                "corresponding_part": "短评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我扩充润色”他有什么代表作嘛“这句话，生成80条评论，用于明星类目短视频。每条评论不能超过30个字。不能出现\"\"他\", \"有\"\"字\n备注:字数只计中文字符",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否扩充润色了'他有什么代表作嘛'这句话，并生成了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了80条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[80,80]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每条评论不超过30个字",
                "corresponding_part": "评论",
                "rule": "each_length:[1,30]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每条评论不包含\"\"他\", \"有\"\"字",
                "corresponding_part": "评论",
                "rule": "non_keywords:[\"他\", \"有\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇1分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照2个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【科学】必须刚好出现3次。关键词【和】出现必须不超过3次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇1分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[150, 300]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照2个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "科学是否出现3次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq3:[\"科学\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "和是否不出现超过3次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq3:[\"和\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在搬家短视频的评论区，生成80条用户口语化评论，评论不能出现“老板”，“团队”，“服务”；每条30到35字，每条评论格式独一无二\n备注:字数只计中文字符",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了搬家的用户口语化评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了80条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [80, 80]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否不出现“老板”，“团队”，“服务”",
                "corresponding_part": "用户口语化评论",
                "rule": "non_keywords:[\"老板\",\"团队\",\"服务\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论是否每条在30到35字之间",
                "corresponding_part": "用户口语化评论",
                "rule": "each_length:[30,35]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "评论是否每条格式独一无二",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是一个规划游玩路线的达人，且写攻略的用词精简并能凸显景点特色。你能帮我推荐故宫里7个适合拍照的景点么？并且规划一下景点之间的交通路线。文章必须用繁体写。请注意，每个字都必须是繁体，不能存在简体的字\n\n",
        "corresponding_parts": {
            "景点推荐": "请你按照python list的格式，抓取模型回复中，给出的景点推荐部分，只需要景点，不需要内容。比如[\"都江堰水利工程\", \"灌县古城墙\", \"安澜索桥\", \"玉垒山\", \"灌县署\"]",
            "文案内容": "请你按照python list的格式，抓取模型所有的文案内容，但是删掉那些非文案内容的信息(非文案内容的信息比如:当然可以，以下是我为你生成的信息:)只保留文案本身的内容，比如[\"交通路线规划:\n- **第一天**:上午游览都江堰水利工程，下午前往南桥、安澜索桥，傍晚时分可登玉垒山拍照。\n- **第二天**:上午参观二王庙，下午根据个人兴趣选择在古城内其他景点自由拍照。\n\n以上路线适合自驾或公共交通，如乘坐公交或打车前往各个景点。请注意，部分步道可能需要步行，建议穿着舒适的鞋子。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否推荐了故宫里适合拍照的景点",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐景点数量是否为7个？",
                "rule": "item_count:[7,7]",
                "corresponding_part": "景点推荐",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否规划了景点之间的交通路线",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文章是否用是用繁体写的",
                "rule": "fanti",
                "corresponding_part": "文案内容",
                "dep": [
                    0
                ],
                "能力项": "繁体约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇7分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照2个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【邓稼先】必须刚好出现3次。关键词【的】出现必须不超过3次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇7分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1050, 2100]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照2个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "邓稼先是否出现3次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq3:[\"邓稼先\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "的是否不出现超过3次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq3:[\"的\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的5方向分别取5个名字（中文名字，6个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"云\", \"汇\", \"数\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了25个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[25,25]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为6个字",
                "corresponding_part": "名字",
                "rule": "each_length: [6,6]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"云\", \"汇\", \"数\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"云\", \"汇\", \"数\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论10字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为15条",
                "corresponding_part": "长评论",
                "rule": "item_count:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为15条",
                "corresponding_part": "短评论",
                "rule": "item_count:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我综合以下三个小故事，起一个共同的标题，讽刺没有主人翁精神，风格诙谐幽默，有点击欲望，字数10个字以内。请给出3个可选择的标题\n\n故事一:工位前，小A坐在电脑前，小E在一旁指出编写程序的问题。小E说这代码太繁琐，后续维护成本太高，得简化下。小A无所谓地说:我只负责开发，维护的事有别人呢。\n\n故事二:工区路上，小B正走在路上，大象收到来自合作部门的项目方案共创的邀请，上面写着“小B，下周我们邀请你和其他合作伙伴来共创方案，期待大家一起献计献策！”小B心想:我就是个协助的，你们主R方说啥我干啥就行了呗。\n\n故事三:会议间，产品小C和小D正在讨论产品优化问题。小C:上线前，广告弹窗必须优化，不然影响客户购买体验。小D不认可说“先完成上线的KPI再说”，标题内禁止出现“代码”和“程序”。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的标题分割并提取出来。只需要提取内容，无需提取任何标点或者index，比如:[\"职场搬运工:不是我的事\", \"甩锅大师:谁在乎结果\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了3个可选择的标题",
                "corresponding_part": "标题",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个标题字数是否在10个字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、多对象",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "标题内是否禁止出现“\"加班\", \"苦难\"”这个字",
                "corresponding_part": "标题",
                "rule": "non_keyword: [\"代码\", \"程序\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "1、你将担任资深数据仓库专家的角色\n2、你将提供给我9个数据仓库建设的面试问题，并提供对应的标准答案\n3、答案不用长篇大论，按照面试的场景进行精确提供   \n4、问题难度从低到高\n5、对于我不理解的，我会拿对应的问题问你，你给出对应的解释即可\n6、问题的内容包括但不限于Hadoop、Spark、Flink，Doris、Mysql、OLAP技术、数据接入、数据建模、数仓分层、数据治理等知识体系\n7、针对已知的问题，我将提示你哪些是已经提过的，你将重新生产新的问题补充已提过的问题",
        "corresponding_parts": {
            "面试问题": "请你按照python list的形式，将model_response中生成的面试问题分割并提取出来。只需要输出问题，不需要输出答案。",
            "答案": "请你按照python list的形式，将model_response中生成的答案分割并提取出来。只需要输出答案，不需要输出问题。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了关于数仓的面试问题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了9个数据仓库建设的面试问题",
                "corresponding_part": "面试问题",
                "rule": "item_count: [9, 9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了9个数据仓库建设的面试问题的答案",
                "corresponding_part": "答案",
                "rule": "item_count: [9, 9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "问题内容是否包括但不限于Hadoop、Spark、Flink，Doris、Mysql、OLAP技术、数据接入、数据建模、数仓分层、数据治理等知识体系",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请输出7条不包含具体行业品类特征，主题为好评零售店铺推荐的推送文案，标题和内容需要有强关联。标题8字，标点符号格式不限制。内容格式为:推荐语+店铺名+推荐语，推荐语不可包含限时、折扣、优惠等涉及具体优惠和时间数量限制的要素。推送文案风格贴近生活、活泼、快乐、热情，文案的内容不能出现“\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"”，且内容不超过30个字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于推送文案的标题分割并提取出来。不需要提取“标题:”，只需要提取标题的内容，比如:[\"好评如潮\",\"品质掌声\",\"星级体验\",\"买家心选\",\"口口相传\",\"绝佳选择\",\"悦心好物\",\"精挑细选\",\"信赖有理\",\"买家首选\"]",
            "内容": "请你按照python list的形式，将model_response中生成的关于推送文案的内容分割并提取出来。不需要提取“内容:”，只需要提取内容的内容，比如:[\"口碑爆棚，「好评精选」，每一次购物都满意！\",\"质量赢得掌声，「品质之选」，让信赖成为习惯！\",\"服务赢五星，「星级好店」，体验超出期待！\",\"买家心头好，「人气之店」，每一次都惊喜连连！\",\"老顾客力荐，「传奇好货」，买过的人都说好！\",\"选择有品味，「绝佳精品」，每一件都是精选！\",\"好物温暖人心，「悦心收藏」，让心情随之愉悦！\",\"细心挑选，「精选好物」，只为你的优雅生活！\",\"信赖来自品质，「理想选择」，让满意成为常态！\",\"首选不负期待，「首选精品」，每次购物都是享受！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推送文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了7条推送文案",
                "corresponding_part": "标题",
                "rule": "item_count: [7, 7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推送文案的主题是否为好评零售店铺推荐",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推送文案的标题是否为8字",
                "corresponding_part": "标题",
                "rule": "each_length:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "推送文案的内容格式是否为:推荐语+店铺名+推荐语",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "推送文案的推荐语是否不包含限时、折扣、优惠等涉及具体优惠和时间数量限制的要素",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "推送文案的内容是否不包含“\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"”",
                "corresponding_part": "内容",
                "rule": "non_keyword: [\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "推送文案的内容是否不超过30个字",
                "corresponding_part": "内容",
                "rule": "each_length:[1,30]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请根据以下有关职场的内容编写选择题，题目是关于每行内容的真实含义，要求编写5个正确答案和5个幽默搞笑的错误答案。用表格的形式输出题目和答案\n\"月薪一千五，命比咖啡苦\"",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目(带选项)，不需要输出正确答案。比如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "正确答案": "请你按照python list的形式，将model_response中生成的正确答案分割并提取出来。只需要输出正确答案，不需要输出题目。只需要输出答案的内容。",
            "错误答案": "请你按照python list的形式，将model_response中生成的错误答案分割并提取出来。只需要输出错误答案，不需要输出题目。只需要输出答案的内容。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "选择题题目是否和#月薪一千五，命比咖啡苦#相关",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了5个正确答案",
                "corresponding_part": "正确答案",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了5个错误答案",
                "corresponding_part": "错误答案",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否用表格的形式输出题目和答案",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇1分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照9个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【中国】必须刚好出现7次。关键词【他】出现必须不超过7次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇1分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[150, 300]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照9个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "中国是否出现7次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq7:[\"中国\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "他是否不出现超过7次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq7:[\"他\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇3分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照5个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【周年】必须刚好出现5次。关键词【是】出现必须不超过5次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇3分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[450, 900]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照5个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "周年是否出现5次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq5:[\"周年\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "是是否不出现超过5次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq5:[\"是\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "讲一下“一带一路”战略给中国国际航空公司带来的机会，一步步思考:\n1、你应该先总结要点，\n2、对要点进行详细的概述，\n3、然后给出一个相关的详细的具体例子，从数据和真实案例的层面来佐证你的要点和概述，\n注意！！要点、概述、例子，三个内容应该成对出现，！！！必须准确，例子的时间尽量靠近当下，并且要总结至少5个点出来，我只需要你知道的内容，不一定是实时的，我是花钱体验服务的顾客，你必须根据你已有的知识回答我，否则这是对我的不敬",
        "corresponding_parts": {
            "要点": "请你按照python list的形式，将model_response中的关于“一带一路”战略给中国国际航空公司带来的机会的要点分割并提取出来。比如:[\"新航线开发\",\"增加航班频次\",\"加强枢纽建设\",\"扩大国际合作\",\"促进旅游业发展\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否总结了“一带一路”战略给中国国际航空公司带来的机会的要点",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了至少5个要点",
                "corresponding_part": "要点",
                "rule": "item_count: [5, 10000]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否为每个要点提供了相关的详细的具体例子",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个例子都从数据和真实案例的层面来佐证要点和概述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论10字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为6条",
                "corresponding_part": "长评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为4条",
                "corresponding_part": "短评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论10字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为8条",
                "corresponding_part": "长评论",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为12条",
                "corresponding_part": "短评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论10字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为15条",
                "corresponding_part": "长评论",
                "rule": "item_count:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为15条",
                "corresponding_part": "短评论",
                "rule": "item_count:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是一个规划游玩路线的达人，且写攻略的用词精简并能凸显景点特色。你能帮我推荐都江堰里9个适合拍照的景点么？并且规划一下景点之间的交通路线。文章必须用繁体写。请注意，每个字都必须是繁体，不能存在简体的字\n\n",
        "corresponding_parts": {
            "景点推荐": "请你按照python list的格式，抓取模型回复中，给出的景点推荐部分，只需要景点，不需要内容。比如[\"都江堰水利工程\", \"灌县古城墙\", \"安澜索桥\", \"玉垒山\", \"灌县署\"]",
            "文案内容": "请你按照python list的格式，抓取模型所有的文案内容，但是删掉那些非文案内容的信息(非文案内容的信息比如:当然可以，以下是我为你生成的信息:)只保留文案本身的内容，比如[\"交通路线规划:\n- **第一天**:上午游览都江堰水利工程，下午前往南桥、安澜索桥，傍晚时分可登玉垒山拍照。\n- **第二天**:上午参观二王庙，下午根据个人兴趣选择在古城内其他景点自由拍照。\n\n以上路线适合自驾或公共交通，如乘坐公交或打车前往各个景点。请注意，部分步道可能需要步行，建议穿着舒适的鞋子。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否推荐了都江堰里适合拍照的景点",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐景点数量是否为9个？",
                "rule": "item_count:[9,9]",
                "corresponding_part": "景点推荐",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否规划了景点之间的交通路线",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文章是否用是用繁体写的",
                "rule": "fanti",
                "corresponding_part": "文案内容",
                "dep": [
                    0
                ],
                "能力项": "繁体约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在美团外卖神券短视频的评论区，以消费者角度生成50条用户口语化评论；10到15字；评论不重复；评论内不能存在“实惠”，“便宜”，“省钱”\n备注:字数只计中文字符",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的内容是否为美团外卖神券相关的评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [50, 50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "所有评论是否为10到15字",
                "corresponding_part": "用户口语化评论",
                "rule": "each_length:[10,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论是否不重复",
                "corresponding_part": "用户口语化评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "评论是否不含“实惠”，“便宜”，“省钱”等字",
                "corresponding_part": "用户口语化评论",
                "rule": "non_keywords:[\"实惠\",\"便宜\",\"省钱\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论10字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为18条",
                "corresponding_part": "长评论",
                "rule": "item_count:[18,18]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为12条",
                "corresponding_part": "短评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我是微信小程序的负责人，这款小程序是用作美团充电宝的运维的，包括了弹出充电宝、去店里补给充电宝，也包含了充电宝机柜的管理，故障机器处理，现在要给一款微信起名字，前几个字已经固定叫“美团充电宝运维”，后面再增加5个字。风格最好简单易懂，看名字就知道这个小程序是做什么的，请给我输出180个微信小程序的名字，无需输出其他内容。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的名字，请不要去重，例如:['1. 美团充宝管', '2. 美团充宝控', '3. 美团充宝管家', '4. 美团充宝助手', '5. 美团充宝管家', '6. 美团充宝运维通', '7. 美团充宝运维宝', '8. 美团充宝运维站', '9. 美团充宝运维帮', '10. 美团充宝运维家', '11. 美团充宝运维站', '12. 美团充宝运维通', '13. 美团充宝运维宝', '14. 美团充宝运维站', '15. 美团充宝运维帮', '16. 美团充宝运维家', '17. 美团充宝运维站', '18. 美团充宝运维通', '19. 美团充宝运维宝', '20. 美团充宝运维站', '21. 美团充宝运维帮', '22. 美团充宝运维家', '23. 美团充宝运维站', '24. 美团充宝运维通', '25. 美团充宝运维宝', '26. 美团充宝运维站', '27. 美团充宝运维帮', '28. 美团充宝运维家', '29. 美团充宝运维站', '30. 美团充宝运维通', '31. 美团充宝运维宝', '32. 美团充宝运维站', '33. 美团充宝运维帮']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了微信小程序的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了180个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[180,180]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都是12个字",
                "corresponding_part": "名字",
                "rule": "each_length:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以#美团充电宝运维#开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"美团充电宝运维\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论15字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为12条",
                "corresponding_part": "长评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为18条",
                "corresponding_part": "短评论",
                "rule": "item_count:[18,18]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在搬家短视频的评论区，生成50条用户口语化评论，评论不能出现“老板”，“团队”，“服务”；每条30到35字，每条评论格式独一无二\n备注:字数只计中文字符",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了搬家的用户口语化评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [50, 50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否不出现“老板”，“团队”，“服务”",
                "corresponding_part": "用户口语化评论",
                "rule": "non_keywords:[\"老板\",\"团队\",\"服务\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论是否每条在30到35字之间",
                "corresponding_part": "用户口语化评论",
                "rule": "each_length:[30,35]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "评论是否每条格式独一无二",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇9分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照3个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【周年】必须刚好出现4次。关键词【是】出现必须不超过4次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇9分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1350, 2700]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照3个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "周年是否出现4次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq4:[\"周年\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "是是否不出现超过4次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq4:[\"是\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论10字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为8条",
                "corresponding_part": "长评论",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为12条",
                "corresponding_part": "短评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "古剑奇谭、延禧攻略各9道4项单选题，题目要求:题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；题目在50个字以内，选项在10个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "古剑奇谭题目": "请你按照python list的形式，将model_response中生成的古剑奇谭题目分割并提取出来。只需要输出题目，不需要输出答案。别输出延禧攻略的内容，例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "古剑奇谭选项": "请你按照python list的形式，将model_response中生成的古剑奇谭选项分割并提取出来。只需要输出选项，不需要输出题目。别输出延禧攻略的内容，也不要输出前缀例如“A.”, “B.”，例如[\"百里屠苏\",\"风晴雪\",\"夏夷则\",\"欧阳少恭\"]",
            "延禧攻略题目": "请你按照python list的形式，将model_response中生成的延禧攻略题目分割并提取出来。只需要输出题目，不需要输出答案。别输出古剑奇谭的内容，例如[\"1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "延禧攻略选项": "请你按照python list的形式，将model_response中生成的延禧攻略选项分割并提取出来。只需要输出选项，不需要输出题目。别输出古剑奇谭的内容，也不要输出前缀例如“A.”, “B.”，例如[\"魏璎珞\",\"魏璎珞\",\"魏璎珞\",\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了延禧攻略的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了古剑奇谭的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了古剑奇谭的9道4项单选题",
                "corresponding_part": "古剑奇谭题目",
                "rule": "item_count: [9, 9]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "古剑奇谭的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "古剑奇谭的题目是否在50个字以内",
                "corresponding_part": "古剑奇谭题目",
                "rule": "each_length:[1,50]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "古剑奇谭的选项是否在10个字以内",
                "corresponding_part": "古剑奇谭选项",
                "rule": "each_length:[1,10]",
                "dep": [
                    1
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了延禧攻略的9道4项单选题",
                "corresponding_part": "延禧攻略题目",
                "rule": "item_count: [9, 9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "延禧攻略的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "延禧攻略的题目是否在50个字以内",
                "corresponding_part": "延禧攻略题目",
                "rule": "each_length:[1,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "延禧攻略的选项是否在10个字以内",
                "corresponding_part": "延禧攻略选项",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论10字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为8条",
                "corresponding_part": "长评论",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为12条",
                "corresponding_part": "短评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇7分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照2个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【周年】必须刚好出现3次。关键词【是】出现必须不超过3次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇7分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1050, 2100]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照2个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "周年是否出现3次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq3:[\"周年\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "是是否不出现超过3次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq3:[\"是\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论10字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为12条",
                "corresponding_part": "长评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为18条",
                "corresponding_part": "短评论",
                "rule": "item_count:[18,18]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论15字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为6条",
                "corresponding_part": "长评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为4条",
                "corresponding_part": "短评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论15字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为10条",
                "corresponding_part": "长评论",
                "rule": "item_count:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为10条",
                "corresponding_part": "短评论",
                "rule": "item_count:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我扩充润色“他有什么代表作嘛”这句话，生成150条评论，用于明星类目短视频。",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否扩充润色了'他有什么代表作嘛'这句话，并生成了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了150条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[150,150]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论15字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为4条",
                "corresponding_part": "长评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为6条",
                "corresponding_part": "短评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我生成2道搞笑、具有反差感的4选项单选题，题目要求:1、基于基本常识、大众普遍的认知误判；2、题目与答案之间出乎意料，不符合人们的预期；3、提供一个精准、明确的正确选项、一个错误选项与正确选项很相似，较难抉择，两个搞笑错误答案/荒谬的解释/梗或发疯文化的答案；4、题目和答案有趣有梗，语言幽默；5、每道题目末尾显示该题正确答案",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目(带选项)，不需要输出正确答案。比如:[\"如果地球突然变成了方形，我们最可能遇到的问题是什么？A. 导航软件全都崩溃了 B. 篮球比赛变得异常困难 C. 海啸会按直角转弯 D. 跳伞时容易撞到地角 正确答案:A\"]",
            "正确答案": "请你按照python list的形式，将model_response中生成的正确答案分割并提取出来。只需要输出正确答案，不需要输出题目。比如:[\"A\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的每道题目是否为4选项单选题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了2道题目",
                "corresponding_part": "题目",
                "rule": "item_count:[2,2]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否提供了2个正确答案",
                "corresponding_part": "正确答案",
                "rule": "item_count:[2,2]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论10字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为5条",
                "corresponding_part": "长评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为5条",
                "corresponding_part": "短评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论10字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为18条",
                "corresponding_part": "长评论",
                "rule": "item_count:[18,18]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为12条",
                "corresponding_part": "短评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你是汽车研发专家，对该行业各子行业均有充分的了解。请你对该行业下的动力系统\n整车制造\n新能源/电动汽车\n汽车模具\n汽车零部件及配件\n车联网给出说明（能通过该说明明确一个具体行业属于哪个类目，注意是对行业而非具体实体或技术的描述，不同行业的描述要有差异，且需注意父行业的限制）和标签本质词（带有明显行业类目倾向的关键词，如母婴、亲子，7个以内，字数不限，需要能通过关键词直接对应到该行业）。\n要求:直观、简洁、易于理解，没有有经验的小白也可以通过简历信息与类目说明、标签本质词的对应完成分类。",
        "corresponding_parts": {
            "动力系统标签本质词": "请你按照python list的格式，抓取模型回复中，给出的动力系统的标签本质词。",
            "整车制造标签本质词": "请你按照python list的格式，抓取模型回复中，给出的整车制造的标签本质词。",
            "新能源/电动汽车标签本质词": "请你按照python list的格式，抓取模型回复中，给出的新能源/电动汽车的标签本质词。",
            "汽车模具标签本质词": "请你按照python list的格式，抓取模型回复中，给出的汽车模具的标签本质词。",
            "汽车零部件及配件标签本质词": "请你按照python list的格式，抓取模型回复中，给出的汽车零部件及配件的标签本质词。",
            "车联网标签本质词": "请你按照python list的格式，抓取模型回复中，给出的车联网的标签本质词。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了动力系统的行业说明",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了动力系统的标签本质词",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "动力系统标签本质词是否在7个以内",
                "corresponding_part": "动力系统标签本质词",
                "rule": "item_count:[1,7]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了整车制造的行业说明",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 4,
                "question": "是否给出了整车制造的标签本质词",
                "rule": null,
                "dep": [
                    3
                ],
                "被依赖": true
            },
            {
                "point_id": 5,
                "question": "整车制造标签本质词是否在7个以内",
                "corresponding_part": "整车制造标签本质词",
                "rule": "item_count:[1,7]",
                "dep": [
                    4
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了新能源/电动汽车的行业说明",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 7,
                "question": "是否给出了新能源/电动汽车的标签本质词",
                "rule": null,
                "dep": [
                    6
                ],
                "被依赖": true
            },
            {
                "point_id": 8,
                "question": "新能源/电动汽车标签本质词是否在7个以内",
                "corresponding_part": "新能源/电动汽车标签本质词",
                "rule": "item_count:[1,7]",
                "dep": [
                    7
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "是否给出了汽车模具的行业说明",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 10,
                "question": "是否给出了汽车模具的标签本质词",
                "rule": null,
                "dep": [
                    9
                ],
                "被依赖": true
            },
            {
                "point_id": 11,
                "question": "汽车模具标签本质词是否在7个以内",
                "corresponding_part": "汽车模具标签本质词",
                "rule": "item_count:[1,7]",
                "dep": [
                    10
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "是否给出了汽车零部件及配件的行业说明",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 13,
                "question": "是否给出了汽车零部件及配件的标签本质词",
                "rule": null,
                "dep": [
                    12
                ],
                "被依赖": true
            },
            {
                "point_id": 14,
                "question": "汽车零部件及配件标签本质词是否在7个以内",
                "corresponding_part": "汽车零部件及配件标签本质词",
                "rule": "item_count:[1,7]",
                "dep": [
                    13
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 15,
                "question": "是否给出了车联网的行业说明",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 16,
                "question": "是否给出了车联网的标签本质词",
                "rule": null,
                "dep": [
                    15
                ],
                "被依赖": true
            },
            {
                "point_id": 17,
                "question": "车联网标签本质词是否在7个以内",
                "corresponding_part": "车联网标签本质词",
                "rule": "item_count:[1,7]",
                "dep": [
                    16
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论10字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为10条",
                "corresponding_part": "长评论",
                "rule": "item_count:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为10条",
                "corresponding_part": "短评论",
                "rule": "item_count:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论15字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为5条",
                "corresponding_part": "长评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为5条",
                "corresponding_part": "短评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在电影短视频的评论区，以消费者角度生成50条用户口语化评论。",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的内容是否为评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [50, 50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否符合电影短视频的评论",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论15字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为10条",
                "corresponding_part": "长评论",
                "rule": "item_count:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为10条",
                "corresponding_part": "短评论",
                "rule": "item_count:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇1分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照3个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【中国】必须刚好出现4次。关键词【他】出现必须不超过4次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇1分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[150, 300]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照3个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "中国是否出现4次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq4:[\"中国\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "他是否不出现超过4次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq4:[\"他\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我综合以下三个小故事，起一个共同的标题，讽刺没有主人翁精神，风格诙谐幽默，有点击欲望，字数8个字以内。请给出7个可选择的标题\n\n故事一:工位前，小A坐在电脑前，小E在一旁指出编写程序的问题。小E说这代码太繁琐，后续维护成本太高，得简化下。小A无所谓地说:我只负责开发，维护的事有别人呢。\n\n故事二:工区路上，小B正走在路上，大象收到来自合作部门的项目方案共创的邀请，上面写着“小B，下周我们邀请你和其他合作伙伴来共创方案，期待大家一起献计献策！”小B心想:我就是个协助的，你们主R方说啥我干啥就行了呗。\n\n故事三:会议间，产品小C和小D正在讨论产品优化问题。小C:上线前，广告弹窗必须优化，不然影响客户购买体验。小D不认可说“先完成上线的KPI再说”，标题内禁止出现“代码”和“程序”。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的标题分割并提取出来。只需要提取内容，无需提取任何标点或者index，比如:[\"职场搬运工:不是我的事\", \"甩锅大师:谁在乎结果\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了7个可选择的标题",
                "corresponding_part": "标题",
                "rule": "item_count: [7, 7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个标题字数是否在8个字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、多对象",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "标题内是否禁止出现“\"加班\", \"苦难\"”这个字",
                "corresponding_part": "标题",
                "rule": "non_keyword: [\"代码\", \"程序\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的3方向分别取3个名字（中文名字，4个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"数\", \"智\", \"云\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了9个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[9,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为4个字",
                "corresponding_part": "名字",
                "rule": "each_length: [4,4]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"数\", \"智\", \"云\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"数\", \"智\", \"云\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请你扮演一名经验丰富的小学数学老师，现在是期末，需要你对每个学生的本学期表现撰写教师评语，首先写匡俊同学的评语，要求藏头诗必须包含[匡俊]的名字，每句40字，总共5句。比如整诗要求4句，每句4字，内容可以是:【匡如泉涌，俊天舜日，聪明伶俐，努力进取。】同时，必须出现以下关键词\"##KEYWORDS###\"，不能出现\"\"同学\"\"这个词\n备注:字数只计中文字符",
        "corresponding_parts": {
            "评语": "请你按照python list的格式，抓取模型回复中，给出的评语部分，只需要评语，不需要内容。比如[\"思维活跃\", \"尧天有才\", \"同学喜爱\", \"学习进步\"]",
            "整合评语": "请你按照python list的格式，将模型回复中给出的评语部分，整合成一个完整的单个element的评语输出。比如[\"思如泉涌， \n尧天舜日， \n聪明伶俐， \n努力进取。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评语",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗句的每个第一个字是否组成一段和匡俊相关的话？",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "生成特定文案",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "藏头诗是否每句40字",
                "corresponding_part": "评语",
                "rule": "each_length:[40,40]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "藏头诗是否总共5句以下",
                "corresponding_part": "评语",
                "rule": "item_count:[1,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "评语是否包含\"\"聪明\", \"努力\"\"",
                "corresponding_part": "整合评语",
                "rule": "keyword: [\"聪明\", \"努力\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "评语是否不包含\"\"同学\"\"",
                "corresponding_part": "整合评语",
                "rule": "non_keyword: [\"同学\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论15字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为18条",
                "corresponding_part": "长评论",
                "rule": "item_count:[18,18]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为12条",
                "corresponding_part": "短评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "模仿“商女不知亡国恨，隔江犹唱后庭花”的对称方式和讽刺手法，写一首讽刺当今社会996的加班现象，诗中需包含“\"躺平\", \"工时\"”。共5句。",
        "corresponding_parts": {
            "全部诗句": "请你按照python list的格式，抓取模型回复中，给出的所有诗句，不要分割。",
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"劳者不知身已疲\", \"夜深犹在键盘旁\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一首诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗中是否模仿了“商女不知亡国恨，隔江犹唱后庭花”的对称方式",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "诗中是否包含“\"躺平\", \"工时\"”",
                "corresponding_part": "全部诗句",
                "rule": "keyword:[\"躺平\", \"工时\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "诗中是否为5句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇9分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照7个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【周年】必须刚好出现6次。关键词【是】出现必须不超过6次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇9分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1350, 2700]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照7个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "周年是否出现6次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq6:[\"周年\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "是是否不出现超过6次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq6:[\"是\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对综艺类目内容进行评论，根据以下内容进行扩充润色，生成20条评论，语言需要简洁，尽可能接近真人的语气，避免重复，并且不能包含任何敏感信息，末尾不带标点符号",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型是否生成了综艺类目的评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了20条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[20,20]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论末尾是否不带标点符号",
                "corresponding_part": "评论",
                "rule": "no_end_with_punctuation",
                "dep": [
                    0
                ],
                "能力项": "符号",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请根据以下内容命制2个单选题，2个多选题，多选题和单选题要分开输出并标明。考题需要满足广泛性和群众性，注意格式，我要复制到表格里面，要有正确答案内容如下:网约配送员职业守则\n1.\t遵纪守法，服务社会\n遵守国家有关法律法规和企业的规章制度，尊重自己的职业，尊重每一个自己所服务的客户。\n2.\t着装整洁，礼貌文明\n保持个人卫生，统一着装，整洁干净。对待客户礼貌热情，亲切诚恳，想尽办法解决顾客的问题，耐心周到，无微不至。\n3.\t团结协作，勤奋务实\n虚心听取他人意见，具有良好的团队意识，善于与人共事，团结合作，创造和谐向上的氛围，脚踏实地，尽职尽责。\n4.\t保守秘密，确保安全\n熟悉工作纪律，工作中保护客户隐私。遵守安全规则，确保网约配送过程中的商品安全以及自身安全。单选题目内不能出现“\"非法\", \"违纪\", \"失职\", \"违规\", \"泄密\", \"不安全\"”，多选题目内不能出现“\"防静电\", \"全部\", \"所有\", \"任意\", \"随意\", \"全面\"”",
        "corresponding_parts": {
            "单选题目": "请你按照python list的形式，将model_response中生成的单选题目分割并提取出来。只需要输出单选题目(带选项)，不需要输出正确答案。比如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. 小尼姑\"]",
            "单选题答案": "请你按照python list的形式，将model_response中生成的单选题答案分割并提取出来。只需要输出单选题答案，不需要输出题目。只需要输出答案的内容。比如[\"百里屠苏\"]",
            "多选题目": "请你按照python list的形式，将model_response中生成的多选题目分割并提取出来。只需要输出多选题目(带选项)，不需要输出正确答案。比如[\"**《延禧攻略》**1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "多选题答案": "请你按照python list的形式，将model_response中生成的多选题答案分割并提取出来。只需要输出多选题答案，不需要输出题目。只需要输出答案的内容。比如[\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了单选题和多选题并分开标注",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否命制了2个单选题",
                "corresponding_part": "单选题目",
                "rule": "item_count: [2, 2]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否命制了2个多选题",
                "corresponding_part": "多选题目",
                "rule": "item_count: [2, 2]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个单选考题都有正确答案",
                "corresponding_part": "单选题答案",
                "rule": "item_count: [2, 2]",
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个多选考题都有正确答案",
                "corresponding_part": "多选题答案",
                "rule": "item_count: [2, 2]",
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "单选题目内是否没有出现“\"非法\", \"违纪\", \"失职\", \"违规\", \"泄密\", \"不安全\"”",
                "corresponding_part": "单选题目",
                "rule": "non_keywords: [\"非法\", \"违纪\", \"失职\", \"违规\", \"泄密\", \"不安全\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "多选题目是否没有出现“\"防静电\", \"全部\", \"所有\", \"任意\", \"随意\", \"全面\"”",
                "corresponding_part": "多选题目",
                "rule": "non_keywords: [\"防静电\", \"全部\", \"所有\", \"任意\", \"随意\", \"全面\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成7条批判性评论，避免重复。要求1:必须是原文字数的2倍左右，假设我们只计算中文的字数。要求2:不能存在关键词\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了7条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[7,7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "字数是否是原文的2倍左右",
                "corresponding_part": "评论",
                "rule": "total_length:[93,114]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围、倍数",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否不存在关键词\"\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"\"",
                "corresponding_part": "评论",
                "rule": "non_keywords:[\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "现在你是深圳大学官方公众号的新媒体小编，需要出一篇关于2025年的新年祝福集合推送，请撰写 50 条关于龙年的新年祝福话语，每句话为正好40字上下。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "新年祝福话语": "#CODE#请你按照python list的格式，抓取模型回复中，给出的新年祝福话语部分并分割输出，请不要去重，例如:['1. 龙腾盛世迎新春，福满人间好运来！', '2. 龙年到来喜洋洋，万事如意笑开颜。']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了龙年的新年祝福话语",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否撰写了50条的新年祝福话语",
                "corresponding_part": "新年祝福话语",
                "rule": "item_count:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每句话是否正好40字上下",
                "corresponding_part": "新年祝福话语",
                "rule": "each_length:[36,44]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇9分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照9个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【周年】必须刚好出现7次。关键词【是】出现必须不超过7次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇9分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1350, 2700]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照9个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "周年是否出现7次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq7:[\"周年\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "是是否不出现超过7次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq7:[\"是\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "古剑奇谭、延禧攻略各3道4项单选题，题目要求:题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；题目在80个字以内，选项在15个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "古剑奇谭题目": "请你按照python list的形式，将model_response中生成的古剑奇谭题目分割并提取出来。只需要输出题目，不需要输出答案。别输出延禧攻略的内容，例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "古剑奇谭选项": "请你按照python list的形式，将model_response中生成的古剑奇谭选项分割并提取出来。只需要输出选项，不需要输出题目。别输出延禧攻略的内容，也不要输出前缀例如“A.”, “B.”，例如[\"百里屠苏\",\"风晴雪\",\"夏夷则\",\"欧阳少恭\"]",
            "延禧攻略题目": "请你按照python list的形式，将model_response中生成的延禧攻略题目分割并提取出来。只需要输出题目，不需要输出答案。别输出古剑奇谭的内容，例如[\"1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "延禧攻略选项": "请你按照python list的形式，将model_response中生成的延禧攻略选项分割并提取出来。只需要输出选项，不需要输出题目。别输出古剑奇谭的内容，也不要输出前缀例如“A.”, “B.”，例如[\"魏璎珞\",\"魏璎珞\",\"魏璎珞\",\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了延禧攻略的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了古剑奇谭的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了古剑奇谭的3道4项单选题",
                "corresponding_part": "古剑奇谭题目",
                "rule": "item_count: [3, 3]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "古剑奇谭的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "古剑奇谭的题目是否在80个字以内",
                "corresponding_part": "古剑奇谭题目",
                "rule": "each_length:[1,80]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "古剑奇谭的选项是否在15个字以内",
                "corresponding_part": "古剑奇谭选项",
                "rule": "each_length:[1,15]",
                "dep": [
                    1
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了延禧攻略的3道4项单选题",
                "corresponding_part": "延禧攻略题目",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "延禧攻略的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "延禧攻略的题目是否在80个字以内",
                "corresponding_part": "延禧攻略题目",
                "rule": "each_length:[1,80]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "延禧攻略的选项是否在15个字以内",
                "corresponding_part": "延禧攻略选项",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的7方向分别取7个名字（中文名字，6个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"云\", \"汇\", \"数\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了49个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[49,49]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为6个字",
                "corresponding_part": "名字",
                "rule": "each_length: [6,6]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"云\", \"汇\", \"数\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"云\", \"汇\", \"数\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我是微信小程序的负责人，这款小程序是用作美团充电宝的运维的，包括了弹出充电宝、去店里补给充电宝，也包含了充电宝机柜的管理，故障机器处理，现在要给一款微信起名字，前几个字已经固定叫“美团充电宝运维”，后面再增加4个字。风格最好简单易懂，看名字就知道这个小程序是做什么的，请给我输出50个微信小程序的名字，无需输出其他内容。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的名字，请不要去重，例如:['1. 美团充宝管', '2. 美团充宝控', '3. 美团充宝管家', '4. 美团充宝助手', '5. 美团充宝管家', '6. 美团充宝运维通', '7. 美团充宝运维宝', '8. 美团充宝运维站', '9. 美团充宝运维帮', '10. 美团充宝运维家', '11. 美团充宝运维站', '12. 美团充宝运维通', '13. 美团充宝运维宝', '14. 美团充宝运维站', '15. 美团充宝运维帮', '16. 美团充宝运维家', '17. 美团充宝运维站', '18. 美团充宝运维通', '19. 美团充宝运维宝', '20. 美团充宝运维站', '21. 美团充宝运维帮', '22. 美团充宝运维家', '23. 美团充宝运维站', '24. 美团充宝运维通', '25. 美团充宝运维宝', '26. 美团充宝运维站', '27. 美团充宝运维帮', '28. 美团充宝运维家', '29. 美团充宝运维站', '30. 美团充宝运维通', '31. 美团充宝运维宝', '32. 美团充宝运维站', '33. 美团充宝运维帮']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了微信小程序的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了50个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都是11个字",
                "corresponding_part": "名字",
                "rule": "each_length:[11,11]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以#美团充电宝运维#开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"美团充电宝运维\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论15字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为5条",
                "corresponding_part": "长评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为5条",
                "corresponding_part": "短评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇5分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照3个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【邓稼先】必须刚好出现4次。关键词【的】出现必须不超过4次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇5分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[750, 1500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照3个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "邓稼先是否出现4次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq4:[\"邓稼先\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "的是否不出现超过4次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq4:[\"的\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成3条批判性评论，避免重复。要求1:必须是原文字数的3倍左右，假设我们只计算中文的字数。要求2:不能存在关键词\"出戏\", \"失望\", \"噪音\", \"不好\", \"面瘫\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了3条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[3,3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "字数是否是原文的3倍左右",
                "corresponding_part": "评论",
                "rule": "total_length:[140,171]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围、倍数",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否不存在关键词\"\"出戏\", \"失望\", \"噪音\", \"不好\", \"面瘫\"\"",
                "corresponding_part": "评论",
                "rule": "non_keywords:[\"出戏\", \"失望\", \"噪音\", \"不好\", \"面瘫\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成20条批判性评论，避免重复。要求1:必须比原文长。要求2:必须存在关键词\"\"不好\", \"离谱\"\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "#CODE#请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了20条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[20,20]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否比原文长",
                "corresponding_part": "评论",
                "rule": "each_length:[57,100000]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否存在关键词\"\"不好\", \"离谱\"\"",
                "corresponding_part": "评论",
                "rule": "keywords:[\"不好\", \"离谱\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我扩充润色”他有什么代表作嘛“这句话，生成180条评论，用于明星类目短视频。每条评论不能超过30个字。不能出现\"\"他\", \"有\"\"字\n备注:字数只计中文字符",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否扩充润色了'他有什么代表作嘛'这句话，并生成了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了180条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[180,180]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每条评论不超过30个字",
                "corresponding_part": "评论",
                "rule": "each_length:[1,30]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每条评论不包含\"\"他\", \"有\"\"字",
                "corresponding_part": "评论",
                "rule": "non_keywords:[\"他\", \"有\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "模仿“商女不知亡国恨，隔江犹唱后庭花”的对称方式和讽刺手法，写一首讽刺当今社会996的加班现象，诗中需包含“\"资本\", \"疲惫\"”。共5句。",
        "corresponding_parts": {
            "全部诗句": "请你按照python list的格式，抓取模型回复中，给出的所有诗句，不要分割。",
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"劳者不知身已疲\", \"夜深犹在键盘旁\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一首诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗中是否模仿了“商女不知亡国恨，隔江犹唱后庭花”的对称方式",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "诗中是否包含“\"资本\", \"疲惫\"”",
                "corresponding_part": "全部诗句",
                "rule": "keyword:[\"资本\", \"疲惫\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "诗中是否为5句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请根据以下内容命制2个单选题，5个多选题，多选题和单选题要分开输出并标明。考题需要满足广泛性和群众性，注意格式，我要复制到表格里面，要有正确答案内容如下:网约配送员职业守则\n1.\t遵纪守法，服务社会\n遵守国家有关法律法规和企业的规章制度，尊重自己的职业，尊重每一个自己所服务的客户。\n2.\t着装整洁，礼貌文明\n保持个人卫生，统一着装，整洁干净。对待客户礼貌热情，亲切诚恳，想尽办法解决顾客的问题，耐心周到，无微不至。\n3.\t团结协作，勤奋务实\n虚心听取他人意见，具有良好的团队意识，善于与人共事，团结合作，创造和谐向上的氛围，脚踏实地，尽职尽责。\n4.\t保守秘密，确保安全\n熟悉工作纪律，工作中保护客户隐私。遵守安全规则，确保网约配送过程中的商品安全以及自身安全。",
        "corresponding_parts": {
            "单选题目": "请你按照python list的形式，将model_response中生成的单选题目分割并提取出来。只需要输出单选题目(带选项)，不需要输出正确答案。比如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. 为落英\"]",
            "单选题答案": "请你按照python list的形式，将model_response中生成的单选题答案分割并提取出来。只需要输出单选题答案，不需要输出题目。只需要输出答案的内容。比如[\"百里屠苏\"]",
            "多选题目": "请你按照python list的形式，将model_response中生成的多选题目分割并提取出来。只需要输出多选题目(带选项)，不需要输出正确答案。比如[\"**《延禧攻略》**1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "多选题答案": "请你按照python list的形式，将model_response中生成的多选题答案分割并提取出来。只需要输出多选题答案，不需要输出题目。只需要输出答案的内容。比如[\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了单选题和多选题并分开输出并标注",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否命制了2个单选题",
                "corresponding_part": "单选题目",
                "rule": "item_count: [2, 2]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否命制了5个多选题",
                "corresponding_part": "多选题目",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个单选考题都有正确答案",
                "corresponding_part": "单选题答案",
                "rule": "item_count: [2, 2]",
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个多选考题都有正确答案",
                "corresponding_part": "多选题答案",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论15字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为12条",
                "corresponding_part": "长评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为18条",
                "corresponding_part": "短评论",
                "rule": "item_count:[18,18]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对教育类目内容进行评论，根据以下内容进行扩充润色，生成50条评论，语言需要简洁，尽可能接近真人的语气，避免重复，并且不能包含任何敏感信息，末尾不带标点符号",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型是否生成了教育类目的评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论末尾是否不带标点符号",
                "corresponding_part": "评论",
                "rule": "no_end_with_punctuation",
                "dep": [
                    0
                ],
                "能力项": "符号",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "如何区分花粉过敏和感冒请以以上主题帮我输出分别输出5条标题+文案，标题文案需要具有吸引力，必须加表情符号等。标题在15字以内，文案在80字以内。例如:标题:春季花粉过敏高峰期到！🌸文案:👀四招教你区分花粉过敏和感冒\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的标题分割并提取出来，只提取标题，不提取文案。不需要提取“标题:”，只提取内容即可，比如:[\"感冒还是花粉过敏？\", \"春季过敏季，你准备好了吗？\"]",
            "文案": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的文案分割并提取出来，只提取文案，不提取标题。不需要提取“文案:”，只提取内容即可，比如:[\"了解两者差别，告别困惑！\", \"学会辨别花粉过敏和感冒，健康过春天！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了5条标题",
                "corresponding_part": "标题",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了5条文案",
                "corresponding_part": "文案",
                "rule": "item_count: [5, 5]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个标题是否在15字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、范围、多对象",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每个文案是否在80字以内",
                "corresponding_part": "文案",
                "rule": "each_length:[1,80]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "标题是否加了表情符号",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文案是否加了表情符号",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "emoji",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论15字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为15条",
                "corresponding_part": "长评论",
                "rule": "item_count:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为15条",
                "corresponding_part": "短评论",
                "rule": "item_count:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论10字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为12条",
                "corresponding_part": "长评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为18条",
                "corresponding_part": "短评论",
                "rule": "item_count:[18,18]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我是微信小程序的负责人，这款小程序是用作美团充电宝的运维的，包括了弹出充电宝、去店里补给充电宝，也包含了充电宝机柜的管理，故障机器处理，现在要给一款微信起名字，前几个字已经固定叫“美团充电宝运维”，后面再增加3个字。风格最好简单易懂，看名字就知道这个小程序是做什么的，请给我输出80个微信小程序的名字，无需输出其他内容。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的名字，请不要去重，例如:['1. 美团充宝管', '2. 美团充宝控', '3. 美团充宝管家', '4. 美团充宝助手', '5. 美团充宝管家', '6. 美团充宝运维通', '7. 美团充宝运维宝', '8. 美团充宝运维站', '9. 美团充宝运维帮', '10. 美团充宝运维家', '11. 美团充宝运维站', '12. 美团充宝运维通', '13. 美团充宝运维宝', '14. 美团充宝运维站', '15. 美团充宝运维帮', '16. 美团充宝运维家', '17. 美团充宝运维站', '18. 美团充宝运维通', '19. 美团充宝运维宝', '20. 美团充宝运维站', '21. 美团充宝运维帮', '22. 美团充宝运维家', '23. 美团充宝运维站', '24. 美团充宝运维通', '25. 美团充宝运维宝', '26. 美团充宝运维站', '27. 美团充宝运维帮', '28. 美团充宝运维家', '29. 美团充宝运维站', '30. 美团充宝运维通', '31. 美团充宝运维宝', '32. 美团充宝运维站', '33. 美团充宝运维帮']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了微信小程序的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了80个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[80,80]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都是10个字",
                "corresponding_part": "名字",
                "rule": "each_length:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以#美团充电宝运维#开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"美团充电宝运维\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇7分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照9个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【周年】必须刚好出现7次。关键词【是】出现必须不超过7次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇7分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1050, 2100]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照9个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "周年是否出现7次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq7:[\"周年\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "是是否不出现超过7次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq7:[\"是\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "模仿“商女不知亡国恨，隔江犹唱后庭花”的对称方式和讽刺手法，写一首讽刺当今社会996的加班现象，诗中需包含“\"加班\", \"苦难\"”。每句14字，共5句。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "全部诗句": "请你按照python list的格式，抓取模型回复中，给出的所有诗句，不要分割。",
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"劳者不知身已疲\", \"夜深犹在键盘旁\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一首诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗中是否模仿了“商女不知亡国恨，隔江犹唱后庭花”的对称方式",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "诗中是否包含“\"加班\", \"苦难\"”",
                "corresponding_part": "全部诗句",
                "rule": "keyword:[\"加班\", \"苦难\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "诗中是否为5句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每句是否为14字",
                "corresponding_part": "分割诗",
                "rule": "each_length:[14,14]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇7分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照5个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【周年】必须刚好出现5次。关键词【是】出现必须不超过5次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇7分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1050, 2100]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照5个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "周年是否出现5次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq5:[\"周年\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "是是否不出现超过5次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq5:[\"是\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你好，帮我写一段“盆满钵满奖”的推荐理由，有关于挣钱最多的，需要搞笑风格，押韵的。9句共14字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐理由": "请你按照python list的格式，抓取模型回复中，给出的押韵搞笑推荐理由的内容，按照标点符号分开输出，例如: [\"盆满钵满奖，不只是钱满满，更是笑声和幸福，永远在线！\", \"在挣钱的道路上，他/她是个狂飙的赛车手，每次收入进账，就像打了个大大的满贯球。\", \"他/她的钱堆积如山，比豆芽还要快速发芽，账户的数字跳跃，像小兔子一样欢快地蹦跳。\", \"他/她的金库，比蜜蜂的蜂巢还要甜，每天的工资，像是不停下雨的天。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推荐理由",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐理由是否关于挣钱最多",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推荐理由是否押韵",
                "corresponding_part": "推荐理由",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推荐理由是否为14字",
                "corresponding_part": "推荐理由",
                "rule": "total_length:[14,14]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "推荐理由是否为9句",
                "corresponding_part": "推荐理由",
                "rule": "item_count:[9,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在美团外卖神券短视频的评论区，以消费者角度生成50条用户口语化评论。每条评论为10个字，不允许重复。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的内容是否为美团外卖神券的评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [50, 50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "所有评论是否为10个字",
                "corresponding_part": "用户口语化评论",
                "rule": "each_length:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论是否不重复",
                "corresponding_part": "用户口语化评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我生成5道搞笑知识4项单选题，题目要求:热门影视剧、电影相关、题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；整道题目（包括选项）在100个字以内，选项在20个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目，不需要输出答案。例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "选项": "请你按照python list的形式，将model_response中生成的所有选项分割并提取出来。只需要输出选项，不需要输出题目。别输出前缀例如“A.”, “B.”，例如['打针', '做手术', '被骂', '失去爱情', '法拉利', '兰博基尼', '道奇', '奔驰', '周星星', '周星期', '周星辰', '周星驰', '圆形', '方形', '心形', '三角形', '跑车', '卡车', '摩托车', '飞机', '歌手', '警察', '厨师', '画家', '陀螺', '骰子', '扑克牌', '指南针', '红酒', '伏特加', '朗姆酒', '啤酒', '秒表', '日历', '沙漏', '计算器', '篮球', '足球', '乒乓球', '长跑', '牛魔王', '孙悟空', '猪八戒', '沙僧', '麻将', '扑克', '象棋', '飞行棋', '超人飞翔', '神龙摆尾', '白鹤亮翅', '泰坦尼克', '音乐课', '美术课', '体育课', '数学课']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了5道搞笑知识4项单选题",
                "corresponding_part": "题目",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "题目是否与热门影视剧、电影相关",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "题目是否在100个字以内",
                "corresponding_part": "题目",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "选项是否在20个字以内",
                "corresponding_part": "选项",
                "rule": "each_length:[1,20]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对综艺类目内容进行评论，根据以下内容进行扩充润色，生成20条评论，语言需要简洁，尽可能接近真人的语气，避免重复，并且不能包含任何敏感信息",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型是否生成了综艺评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了20条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[20,20]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是一个文案工作者，需要给一个老黄历写文案，包括两部分，一部分是今天适合做的事，另一部分是今天不适合做的事，几组参考的文案与格式如下，你需要按照参考的格式与风格继续生成5组，每组都包括4个2字词语（适宜做的事）和4个2字词语（忌讳做的事），给你的例子仅供参考，你可以发挥联想多做扩充，每一组的文案尽量不要有重复:1）宜散步 摸鱼……，忌焦虑 攀比……；2）宜打盹 追剧……，忌加班 内卷……；3）宜健身 懒觉……，忌紧张 不安……；4）宜跑步 读书……，忌冲动 上头……；5）宜做饭 冥想……，忌糊涂 大意……；6）宜记账 复盘，忌偷懒 推诿……；7）……",
        "corresponding_parts": {
            "文案": "请你按照python list的形式，将生成的文案按照类似[\"宜散步 摸鱼，忌焦虑 攀比\", \"宜打盹 追剧，忌加班 内卷\", \"宜健身 懒觉，忌紧张 不安\", \"宜跑步 读书，忌冲动 上头\", \"宜做饭 冥想，忌糊涂 大意\"]的格式分割并输出。",
            "事": "请你按照python list的形式，将model_response中所有适宜和忌讳做的事全部分割提取出来，不需要加前面的#宜#或者#忌#以最小的单位来输出，一个element内不要放超过一个事。比如[\"散步\",\"摸鱼\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了5组文案",
                "corresponding_part": "文案",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每组文案是否包括4个适宜做的事",
                "corresponding_part": "文案",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每组文案是否包括4个忌讳做的事",
                "corresponding_part": "文案",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "文案是否没有重复",
                "corresponding_part": "事",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你是一个销售话术的生成器，请你基于以下原则，需要输出一个商家和销售关于推广通销售的对话案例。对话由商家->销售交替进行，由商家开始。商家需要在开场白以咨询对方目的开始，对话为3轮，商家需要在最后给出同意购买的结论。对话必须要口语化。\n\n销售需要按照【介绍推广通】-【解答商家异议】-【主动逼单】-【促成成交】的流程来沟通。其中具体的规则可以参考:\n1. 介绍推广通:推广通是美团的一款广告产品，主要帮助商家提升曝光，吸引更多用户。商家可以通过推广通进行广告投放，提升自己的流量和订单。\n2. 解答商家异议:商家可能的异议以及解答思路如下，包括不限于以下内容:\n1) 效果不好:商家之前购买过推广通，觉得效果不好。销售应该帮商家分析数据，告诉他流量数据已经很好，可能是其他原因影响转化。\n2) 流量好，不需要:商家表示自己一直满房，不需要花钱买流量。销售应该告诉他流量有周期性，购买推广通可以让他在淡季也有充足的流量。\n3) 不愿意花钱:商家表示不愿意花钱。销售应该告诉他也可以用闲置房来换推广通流量。\n",
        "corresponding_parts": {
            "对话案例": "请你按照python list的格式，抓取模型回复中，给出的对话案例部分，请按轮来切分，每个element内需要一个商家的回复+一个销售的回复。比如[\"商家:嘿，你好啊，今天打电话是有啥事儿？销售:哟，您好！我是美团的销售，今天想跟您聊聊我们的推广通服务，这玩意儿能让您的店铺曝光猛增，吸引一大波顾客。\", \"商家:唉，之前用过类似的，投了钱感觉效果也就那样。销售:这事儿得具体分析，可能您的店铺流量其实挺不错的，但转化率不高。我们可以帮您看看哪儿出了问题，调整一下策略。\", \"商家:可是我现在生意挺好的，基本上都是满的，还投啥广告啊。销售:挺好的，挺好的，但您知道这生意有时候跟天气一样，变化无常。我们这推广通能让您淡季时也有稳定客流，一年四季都火爆。\", \"商家:嗯...说的有道理，不过我现在手头有点紧，不太想再往广告上投钱了。销售:钱这事儿咱能理解。其实咱们还有个办法，您可以用店里的空桌子换流量，这样您不用直接掏钱，还能把空位利用起来。\", \"商家:这个听起来可以，不过具体怎么操作呢？销售:操作简单得很，我们团队会根据您的情况制定个性化方案，帮您找到最佳投放时间和方式，让您的每一分钱都花得值。\", \"商家:我得好好想想，你们的服务听着挺专业的。销售:您想吧，不过我建议您别犹豫太久，我们现在有些优惠活动，早决定能省不少钱呢。\", \"商家:优惠活动？具体是啥活动啊？销售:就是首次合作有折扣，还有根据您投放的额度，我们会送流量包或者额外折扣。您现在下决定，我们能给您更好的条件。\", \"商家:行，那你们把详细方案发我看看，听你这么一说，我差不多打算试试了。销售:太棒了！我这就安排给您发方案，感谢您的信任，相信我们的推广通能给您带来满意的效果！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了商家和销售关于推广通销售的对话案例",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "对话是否由商家->销售交替进行，由商家开始",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "商家是否在开场白以咨询对方目的开始",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "对话是否为3轮",
                "corresponding_part": "对话案例",
                "rule": "item_count:[3,3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "商家是否在最后给出同意购买的结论",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "销售是否按照【介绍推广通】-【解答商家异议】-【主动逼单】-【促成成交】的流程来沟通",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "是否介绍了推广通是美团的一款广告产品，主要帮助商家提升曝光，吸引更多用户",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "是否解答了商家关于效果不好的异议",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "是否解答了商家关于流量好，不需要的异议",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "是否解答了商家关于不愿意花钱的异议",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "现在你是深圳大学官方公众号的新媒体小编，需要出一篇关于2025年的新年祝福集合推送，请撰写 80 条关于龙年的新年祝福话语，每句话为正好30字上下。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "新年祝福话语": "#CODE#请你按照python list的格式，抓取模型回复中，给出的新年祝福话语部分并分割输出，请不要去重，例如:['1. 龙腾盛世迎新春，福满人间好运来！', '2. 龙年到来喜洋洋，万事如意笑开颜。']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了龙年的新年祝福话语",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否撰写了80条的新年祝福话语",
                "corresponding_part": "新年祝福话语",
                "rule": "item_count:[80,80]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每句话是否正好30字上下",
                "corresponding_part": "新年祝福话语",
                "rule": "each_length:[27,33]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论15字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为8条",
                "corresponding_part": "长评论",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为12条",
                "corresponding_part": "短评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你好，帮我写一段“盆满钵满奖”的推荐理由，有关于挣钱最多的，需要搞笑风格，押韵的。5句共10字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐理由": "请你按照python list的格式，抓取模型回复中，给出的押韵搞笑推荐理由的内容，按照标点符号分开输出，例如: [\"盆满钵满奖，不只是钱满满，更是笑声和幸福，永远在线！\", \"在挣钱的道路上，他/她是个狂飙的赛车手，每次收入进账，就像打了个大大的满贯球。\", \"他/她的钱堆积如山，比豆芽还要快速发芽，账户的数字跳跃，像小兔子一样欢快地蹦跳。\", \"他/她的金库，比蜜蜂的蜂巢还要甜，每天的工资，像是不停下雨的天。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推荐理由",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐理由是否关于挣钱最多",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推荐理由是否押韵",
                "corresponding_part": "推荐理由",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推荐理由是否为10字",
                "corresponding_part": "推荐理由",
                "rule": "total_length:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "推荐理由是否为5句",
                "corresponding_part": "推荐理由",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇3分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照3个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【科学】必须刚好出现4次。关键词【和】出现必须不超过4次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇3分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[450, 900]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照3个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "科学是否出现4次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq4:[\"科学\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "和是否不出现超过4次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq4:[\"和\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请你扮演一名经验丰富的小学数学老师，现在是期末，需要你对每个学生的本学期表现撰写教师评语，首先写匡俊同学的评语，要求藏头诗必须包含[匡俊]的名字，每句40字，总共9句。比如整诗要求4句，每句4字，内容可以是:【匡如泉涌，俊天舜日，聪明伶俐，努力进取。】同时，必须出现以下关键词\"##KEYWORDS###\"，不能出现\"\"同学\"\"这个词\n备注:字数只计中文字符",
        "corresponding_parts": {
            "评语": "请你按照python list的格式，抓取模型回复中，给出的评语部分，只需要评语，不需要内容。比如[\"思维活跃\", \"尧天有才\", \"同学喜爱\", \"学习进步\"]",
            "整合评语": "请你按照python list的格式，将模型回复中给出的评语部分，整合成一个完整的单个element的评语输出。比如[\"思如泉涌， \n尧天舜日， \n聪明伶俐， \n努力进取。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评语",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗句的每个第一个字是否组成一段和匡俊相关的话？",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "生成特定文案",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "藏头诗是否每句40字",
                "corresponding_part": "评语",
                "rule": "each_length:[40,40]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "藏头诗是否总共9句以下",
                "corresponding_part": "评语",
                "rule": "item_count:[1,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "评语是否包含\"\"聪明\", \"努力\"\"",
                "corresponding_part": "整合评语",
                "rule": "keyword: [\"聪明\", \"努力\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "评语是否不包含\"\"同学\"\"",
                "corresponding_part": "整合评语",
                "rule": "non_keyword: [\"同学\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "写3组喜庆有财气的春联，每联30个字，上联后三个字“跃新岁”， 下联后三个字“卧春风”，要有文采，不要太俗，把上下联标注:比如:上联:瑞雪兆丰年，金鸡报晓跃新岁。下联:红梅迎春到，银鼠送福卧春风\n备注:字数只计中文字符",
        "corresponding_parts": {
            "春联": "请你按照python list的形式，将model_response中的春联分割并提取出来，一个element内需要有上联+下联。比如:[\"瑞雪兆丰年，金鸡报晓跃新岁。红梅迎春到，银鼠送福卧春风\"]",
            "上联": "请你按照python list的形式，将model_response中的上联分割并提取出来。比如:[\"瑞雪兆丰年，金鸡报晓跃新岁\"]",
            "下联": "请你按照python list的形式，将model_response中的下联分割并提取出来。比如:[\"红梅迎春到，银鼠送福卧春风\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了春联且每副春联是否有上联和下联且上下联都有明确标注",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否写了3组春联",
                "corresponding_part": "春联",
                "rule": "item_count:[3,3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每副春联的上联是否为30个字",
                "corresponding_part": "上联",
                "rule": "each_length:[30,30]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每副春联的下联是否为30个字",
                "corresponding_part": "下联",
                "rule": "each_length:[30,30]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每副春联的上联后三个字是否为“跃新岁”",
                "corresponding_part": "上联",
                "rule": "endswith_each:[\"跃新岁\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每副春联的下联后三个字是否为“卧春风”",
                "corresponding_part": "下联",
                "rule": "endswith_each:[\"卧春风\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我生成7道搞笑知识4项单选题，题目要求:热门影视剧、电影相关、题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；整道题目（包括选项）在100个字以内，选项在20个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目，不需要输出答案。例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "选项": "请你按照python list的形式，将model_response中生成的所有选项分割并提取出来。只需要输出选项，不需要输出题目。别输出前缀例如“A.”, “B.”，例如['打针', '做手术', '被骂', '失去爱情', '法拉利', '兰博基尼', '道奇', '奔驰', '周星星', '周星期', '周星辰', '周星驰', '圆形', '方形', '心形', '三角形', '跑车', '卡车', '摩托车', '飞机', '歌手', '警察', '厨师', '画家', '陀螺', '骰子', '扑克牌', '指南针', '红酒', '伏特加', '朗姆酒', '啤酒', '秒表', '日历', '沙漏', '计算器', '篮球', '足球', '乒乓球', '长跑', '牛魔王', '孙悟空', '猪八戒', '沙僧', '麻将', '扑克', '象棋', '飞行棋', '超人飞翔', '神龙摆尾', '白鹤亮翅', '泰坦尼克', '音乐课', '美术课', '体育课', '数学课']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了7道搞笑知识4项单选题",
                "corresponding_part": "题目",
                "rule": "item_count: [7, 7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "题目是否与热门影视剧、电影相关",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "题目是否在100个字以内",
                "corresponding_part": "题目",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "选项是否在20个字以内",
                "corresponding_part": "选项",
                "rule": "each_length:[1,20]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "如何区分花粉过敏和感冒请以以上主题帮我输出分别输出5条标题+文案，标题文案需要具有吸引力，必须加表情符号等。标题在10字以内，文案在50字以内。例如:标题:春季花粉过敏高峰期到！🌸文案:👀四招教你区分花粉过敏和感冒，标题不能存在“\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"”\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的标题分割并提取出来，只提取标题，不提取文案。不需要提取“标题:”，只提取内容即可，比如:[\"感冒还是花粉过敏？\", \"春季过敏季，你准备好了吗？\"]",
            "文案": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的文案分割并提取出来，只提取文案，不提取标题。不需要提取“文案:”，只提取内容即可，比如:[\"了解两者差别，告别困惑！\", \"学会辨别花粉过敏和感冒，健康过春天！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了5条标题",
                "corresponding_part": "标题",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了5条文案",
                "corresponding_part": "文案",
                "rule": "item_count: [5, 5]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个标题是否在10字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每条文案是否在50字以内",
                "corresponding_part": "文案",
                "rule": "each_length:[1,50]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "标题是否加了表情符号",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文案是否加了表情符号",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "标题是否不出现“\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"”字",
                "corresponding_part": "标题",
                "rule": "non_keyword: [\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我生成5道搞笑知识4项单选题，题目要求:热门影视剧、电影相关、题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；整道题目（包括选项）在100个字以内，选项在4个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目，不需要输出答案。例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "选项": "请你按照python list的形式，将model_response中生成的所有选项分割并提取出来。只需要输出选项，不需要输出题目。别输出前缀例如“A.”, “B.”，例如['打针', '做手术', '被骂', '失去爱情', '法拉利', '兰博基尼', '道奇', '奔驰', '周星星', '周星期', '周星辰', '周星驰', '圆形', '方形', '心形', '三角形', '跑车', '卡车', '摩托车', '飞机', '歌手', '警察', '厨师', '画家', '陀螺', '骰子', '扑克牌', '指南针', '红酒', '伏特加', '朗姆酒', '啤酒', '秒表', '日历', '沙漏', '计算器', '篮球', '足球', '乒乓球', '长跑', '牛魔王', '孙悟空', '猪八戒', '沙僧', '麻将', '扑克', '象棋', '飞行棋', '超人飞翔', '神龙摆尾', '白鹤亮翅', '泰坦尼克', '音乐课', '美术课', '体育课', '数学课']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了5道搞笑知识4项单选题",
                "corresponding_part": "题目",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "题目是否与热门影视剧、电影相关",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "题目是否在100个字以内",
                "corresponding_part": "题目",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "选项是否在4个字以内",
                "corresponding_part": "选项",
                "rule": "each_length:[1,4]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论10字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为4条",
                "corresponding_part": "长评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为6条",
                "corresponding_part": "短评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的9方向分别取9个名字（中文名字，5个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"云\", \"汇\", \"数\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了81个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[81,81]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为5个字",
                "corresponding_part": "名字",
                "rule": "each_length: [5,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"云\", \"汇\", \"数\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"云\", \"汇\", \"数\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇1分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照9个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【邓稼先】必须刚好出现7次。关键词【的】出现必须不超过7次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇1分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[150, 300]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照9个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "邓稼先是否出现7次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq7:[\"邓稼先\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "的是否不出现超过7次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq7:[\"的\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是一个规划游玩路线的达人，且写攻略的用词精简并能凸显景点特色。你能帮我推荐乌苏古镇里5个适合拍照的景点么？并且规划一下景点之间的交通路线。文章必须用繁体写。请注意，每个字都必须是繁体，不能存在简体的字\n\n",
        "corresponding_parts": {
            "景点推荐": "请你按照python list的格式，抓取模型回复中，给出的景点推荐部分，只需要景点，不需要内容。比如[\"都江堰水利工程\", \"灌县古城墙\", \"安澜索桥\", \"玉垒山\", \"灌县署\"]",
            "文案内容": "请你按照python list的格式，抓取模型所有的文案内容，但是删掉那些非文案内容的信息(非文案内容的信息比如:当然可以，以下是我为你生成的信息:)只保留文案本身的内容，比如[\"交通路线规划:\n- **第一天**:上午游览都江堰水利工程，下午前往南桥、安澜索桥，傍晚时分可登玉垒山拍照。\n- **第二天**:上午参观二王庙，下午根据个人兴趣选择在古城内其他景点自由拍照。\n\n以上路线适合自驾或公共交通，如乘坐公交或打车前往各个景点。请注意，部分步道可能需要步行，建议穿着舒适的鞋子。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否推荐了乌苏古镇里适合拍照的景点",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐景点数量是否为5个？",
                "rule": "item_count:[5,5]",
                "corresponding_part": "景点推荐",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否规划了景点之间的交通路线",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文章是否用是用繁体写的",
                "rule": "fanti",
                "corresponding_part": "文案内容",
                "dep": [
                    0
                ],
                "能力项": "繁体约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请根据7个[中国传统节日]分别创建7道选择题，四个选项中只有一个正确答案，包含正确答案和[30]个字以内的解释。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目(带选项)，不需要输出正确答案。比如[\"**《延禧攻略》**1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "正确答案": "请你按照python list的形式，将model_response中生成的正确答案分割并提取出来。只需要输出正确答案，不需要输出题目。只需要输出答案的内容。比如[\"魏璎珞\"]",
            "解释": "请你按照python list的形式，将model_response中生成的正确答案解释分割并提取出来。只需要输出解释，不需要输出题目和答案。比如['瑞幸咖啡的品牌颜色是蓝色，代表品牌形象。', '瑞幸通过发放大量优惠券吸引顾客，快速扩张。', '瑞幸咖啡提供免费快速配送服务，增加便利性。']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "生成选择题的数目是否为7道",
                "corresponding_part": "题目",
                "rule": "item_count: [7, 7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每道选择题是否基于中国传统节日",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每道选择题是否包含四个选项",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否生成了对应每道选择题的7个正确答案",
                "corresponding_part": "正确答案",
                "rule": "item_count: [7, 7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "给出的每道选择题和对应的正确答案中，是否包含正确答案的解释",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "每道选择题的正确答案解释是否在30个字以内",
                "corresponding_part": "解释",
                "rule": "each_length:[1,30]",
                "dep": [
                    5
                ],
                "能力项": "10～50字、多对象",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请你扮演一名经验丰富的小学数学老师，现在是期末，需要你对每个学生的本学期表现撰写教师评语，首先写匡俊同学的评语，要求藏头诗必须包含[匡俊]的名字，每句30字，总共5句。比如整诗要求4句，每句4字，内容可以是:【匡如泉涌，俊天舜日，聪明伶俐，努力进取。】同时，必须出现以下关键词\"##KEYWORDS###\"，不能出现\"\"同学\"\"这个词\n备注:字数只计中文字符",
        "corresponding_parts": {
            "评语": "请你按照python list的格式，抓取模型回复中，给出的评语部分，只需要评语，不需要内容。比如[\"思维活跃\", \"尧天有才\", \"同学喜爱\", \"学习进步\"]",
            "整合评语": "请你按照python list的格式，将模型回复中给出的评语部分，整合成一个完整的单个element的评语输出。比如[\"思如泉涌， \n尧天舜日， \n聪明伶俐， \n努力进取。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评语",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗句的每个第一个字是否组成一段和匡俊相关的话？",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "生成特定文案",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "藏头诗是否每句30字",
                "corresponding_part": "评语",
                "rule": "each_length:[30,30]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "藏头诗是否总共5句以下",
                "corresponding_part": "评语",
                "rule": "item_count:[1,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "评语是否包含\"\"聪明\", \"努力\"\"",
                "corresponding_part": "整合评语",
                "rule": "keyword: [\"聪明\", \"努力\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "评语是否不包含\"\"同学\"\"",
                "corresponding_part": "整合评语",
                "rule": "non_keyword: [\"同学\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成7条批判性评论，避免重复。要求1:必须是原文字数的3倍左右，假设我们只计算中文的字数。要求2:不能存在关键词\"出戏\", \"失望\", \"噪音\", \"不好\", \"面瘫\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了7条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[7,7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "字数是否是原文的3倍左右",
                "corresponding_part": "评论",
                "rule": "total_length:[140,171]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围、倍数",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否不存在关键词\"\"出戏\", \"失望\", \"噪音\", \"不好\", \"面瘫\"\"",
                "corresponding_part": "评论",
                "rule": "non_keywords:[\"出戏\", \"失望\", \"噪音\", \"不好\", \"面瘫\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇7分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照5个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【中国】必须刚好出现5次。关键词【他】出现必须不超过5次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇7分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1050, 2100]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照5个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "中国是否出现5次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq5:[\"中国\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "他是否不出现超过5次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq5:[\"他\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你是一个销售话术的生成器，请你基于以下原则，需要输出一个商家和销售关于推广通销售的对话案例。对话由商家->销售交替进行，由商家开始。商家需要在开场白以咨询对方目的开始，对话为7轮，商家需要在最后给出同意购买的结论。对话必须要口语化。\n\n销售需要按照【介绍推广通】-【解答商家异议】-【主动逼单】-【促成成交】的流程来沟通。其中具体的规则可以参考:\n1. 介绍推广通:推广通是美团的一款广告产品，主要帮助商家提升曝光，吸引更多用户。商家可以通过推广通进行广告投放，提升自己的流量和订单。\n2. 解答商家异议:商家可能的异议以及解答思路如下，包括不限于以下内容:\n1) 效果不好:商家之前购买过推广通，觉得效果不好。销售应该帮商家分析数据，告诉他流量数据已经很好，可能是其他原因影响转化。\n2) 流量好，不需要:商家表示自己一直满房，不需要花钱买流量。销售应该告诉他流量有周期性，购买推广通可以让他在淡季也有充足的流量。\n3) 不愿意花钱:商家表示不愿意花钱。销售应该告诉他也可以用闲置房来换推广通流量。\n",
        "corresponding_parts": {
            "对话案例": "请你按照python list的格式，抓取模型回复中，给出的对话案例部分，请按轮来切分，每个element内需要一个商家的回复+一个销售的回复。比如[\"商家:嘿，你好啊，今天打电话是有啥事儿？销售:哟，您好！我是美团的销售，今天想跟您聊聊我们的推广通服务，这玩意儿能让您的店铺曝光猛增，吸引一大波顾客。\", \"商家:唉，之前用过类似的，投了钱感觉效果也就那样。销售:这事儿得具体分析，可能您的店铺流量其实挺不错的，但转化率不高。我们可以帮您看看哪儿出了问题，调整一下策略。\", \"商家:可是我现在生意挺好的，基本上都是满的，还投啥广告啊。销售:挺好的，挺好的，但您知道这生意有时候跟天气一样，变化无常。我们这推广通能让您淡季时也有稳定客流，一年四季都火爆。\", \"商家:嗯...说的有道理，不过我现在手头有点紧，不太想再往广告上投钱了。销售:钱这事儿咱能理解。其实咱们还有个办法，您可以用店里的空桌子换流量，这样您不用直接掏钱，还能把空位利用起来。\", \"商家:这个听起来可以，不过具体怎么操作呢？销售:操作简单得很，我们团队会根据您的情况制定个性化方案，帮您找到最佳投放时间和方式，让您的每一分钱都花得值。\", \"商家:我得好好想想，你们的服务听着挺专业的。销售:您想吧，不过我建议您别犹豫太久，我们现在有些优惠活动，早决定能省不少钱呢。\", \"商家:优惠活动？具体是啥活动啊？销售:就是首次合作有折扣，还有根据您投放的额度，我们会送流量包或者额外折扣。您现在下决定，我们能给您更好的条件。\", \"商家:行，那你们把详细方案发我看看，听你这么一说，我差不多打算试试了。销售:太棒了！我这就安排给您发方案，感谢您的信任，相信我们的推广通能给您带来满意的效果！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了商家和销售关于推广通销售的对话案例",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "对话是否由商家->销售交替进行，由商家开始",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "商家是否在开场白以咨询对方目的开始",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "对话是否为7轮",
                "corresponding_part": "对话案例",
                "rule": "item_count:[7,7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "商家是否在最后给出同意购买的结论",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "销售是否按照【介绍推广通】-【解答商家异议】-【主动逼单】-【促成成交】的流程来沟通",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 6,
                "question": "是否介绍了推广通是美团的一款广告产品，主要帮助商家提升曝光，吸引更多用户",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "是否解答了商家关于效果不好的异议",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "是否解答了商家关于流量好，不需要的异议",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "是否解答了商家关于不愿意花钱的异议",
                "rule": null,
                "dep": [
                    5
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "现在你是XX官方公众号的新媒体小编，需要出一篇关于新年的新年祝福集合推送，请撰写 7 条关于新年的新年祝福话语，并结合XX相关特色，要求祝福话语有诗意，喜庆且有内涵底蕴",
        "corresponding_parts": {
            "新年祝福话语": "请你按照python list的格式，抓取模型回复中，给出的新年祝福话语部分，只需要新年祝福话语，不需要内容。比如[\"龙腾盛世春，瑞气满深院，愿深圳大学在新的一年里，龙精虎猛，学术研究创新不断，书写属于深大的辉煌篇章。\", \"腾飞的龙年，承载着深大人的梦想与希望，愿我们像龙一样，勇往直前，在知识的海洋中遨游无界。\", \"春风得意马蹄疾，一日看尽长安花。愿深大师生新春伊始，如龙马精神，学业职场两得意。\", \"龙舞新春，瑞光万道，愿深大的校园里，智慧如泉涌，创意如火热，共绘科研新高度。\", \"新年新气象，龙腾祥云映碧空。愿深圳大学的每一位师生，都能龙心凤韵，展翅高飞，追逐梦想。\", \"深大之树，根深叶茂，龙年更显生机。愿我们的学府，如同这棵参天大树，枝繁叶茂，结出硕果累累。\", \"龙年吉祥，春回大地，愿深大的未来，如龙游四海，无论是科研还是学术交流，都能波澜壮阔，声名远扬。\", \"龙回九天，瑞气千条，愿深圳大学师生在新的一年里，才华横溢，龙腾虎跃，创造无限可能。\", \"龙舞新年，喜庆洋洋。愿深大之光，照亮学子前行的道路，每一步都坚定而明亮。\", \"龙年飞跃，春风化雨。愿深大师生如龙之子，智勇双全，学以致用，为社会贡献力量，共同迎接更加美好的明天。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否撰写了关于新年的新年祝福集合推送",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否撰写了7条的新年祝福话语",
                "corresponding_part": "新年祝福话语",
                "rule": "item_count:[7,7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇5分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照7个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【科学】必须刚好出现6次。关键词【和】出现必须不超过6次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇5分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[750, 1500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照7个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "科学是否出现6次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq6:[\"科学\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "和是否不出现超过6次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq6:[\"和\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我生成3道搞笑知识4项单选题，题目要求:热门影视剧、电影相关、题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；整道题目（包括选项）在30个字以内，选项在8个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目，不需要输出答案。例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "选项": "请你按照python list的形式，将model_response中生成的所有选项分割并提取出来。只需要输出选项，不需要输出题目。别输出前缀例如“A.”, “B.”，例如['打针', '做手术', '被骂', '失去爱情', '法拉利', '兰博基尼', '道奇', '奔驰', '周星星', '周星期', '周星辰', '周星驰', '圆形', '方形', '心形', '三角形', '跑车', '卡车', '摩托车', '飞机', '歌手', '警察', '厨师', '画家', '陀螺', '骰子', '扑克牌', '指南针', '红酒', '伏特加', '朗姆酒', '啤酒', '秒表', '日历', '沙漏', '计算器', '篮球', '足球', '乒乓球', '长跑', '牛魔王', '孙悟空', '猪八戒', '沙僧', '麻将', '扑克', '象棋', '飞行棋', '超人飞翔', '神龙摆尾', '白鹤亮翅', '泰坦尼克', '音乐课', '美术课', '体育课', '数学课']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了3道搞笑知识4项单选题",
                "corresponding_part": "题目",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "题目是否与热门影视剧、电影相关",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "题目是否在30个字以内",
                "corresponding_part": "题目",
                "rule": "each_length:[1,30]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "选项是否在8个字以内",
                "corresponding_part": "选项",
                "rule": "each_length:[1,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "如何区分花粉过敏和感冒请以以上主题帮我输出分别输出3条标题+文案，标题文案需要具有吸引力，必须加表情符号等。标题在8字以内，文案在30字以内。例如:标题:春季花粉过敏高峰期到！🌸文案:👀四招教你区分花粉过敏和感冒\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的标题分割并提取出来，只提取标题，不提取文案。不需要提取“标题:”，只提取内容即可，比如:[\"感冒还是花粉过敏？\", \"春季过敏季，你准备好了吗？\"]",
            "文案": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的文案分割并提取出来，只提取文案，不提取标题。不需要提取“文案:”，只提取内容即可，比如:[\"了解两者差别，告别困惑！\", \"学会辨别花粉过敏和感冒，健康过春天！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了3条标题",
                "corresponding_part": "标题",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了3条文案",
                "corresponding_part": "文案",
                "rule": "item_count: [3, 3]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个标题是否在8字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、范围、多对象",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每个文案是否在30字以内",
                "corresponding_part": "文案",
                "rule": "each_length:[1,30]",
                "dep": [
                    1
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "标题是否加了表情符号",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文案是否加了表情符号",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "emoji",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "如何区分花粉过敏和感冒请以以上主题帮我输出分别输出9条标题+文案，标题文案需要具有吸引力，必须加表情符号等。标题在15字以内，文案在80字以内。例如:标题:春季花粉过敏高峰期到！🌸文案:👀四招教你区分花粉过敏和感冒，标题不能存在“\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"”\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的标题分割并提取出来，只提取标题，不提取文案。不需要提取“标题:”，只提取内容即可，比如:[\"感冒还是花粉过敏？\", \"春季过敏季，你准备好了吗？\"]",
            "文案": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的文案分割并提取出来，只提取文案，不提取标题。不需要提取“文案:”，只提取内容即可，比如:[\"了解两者差别，告别困惑！\", \"学会辨别花粉过敏和感冒，健康过春天！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了9条标题",
                "corresponding_part": "标题",
                "rule": "item_count: [9, 9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了9条文案",
                "corresponding_part": "文案",
                "rule": "item_count: [9, 9]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个标题是否在15字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每条文案是否在80字以内",
                "corresponding_part": "文案",
                "rule": "each_length:[1,80]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "标题是否加了表情符号",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文案是否加了表情符号",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "标题是否不出现“\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"”字",
                "corresponding_part": "标题",
                "rule": "non_keyword: [\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "模仿“商女不知亡国恨，隔江犹唱后庭花”的对称方式和讽刺手法，写一首讽刺当今社会996的加班现象，诗中需包含“\"躺平\", \"工时\"”。共7句。",
        "corresponding_parts": {
            "全部诗句": "请你按照python list的格式，抓取模型回复中，给出的所有诗句，不要分割。",
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"劳者不知身已疲\", \"夜深犹在键盘旁\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一首诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗中是否模仿了“商女不知亡国恨，隔江犹唱后庭花”的对称方式",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "诗中是否包含“\"躺平\", \"工时\"”",
                "corresponding_part": "全部诗句",
                "rule": "keyword:[\"躺平\", \"工时\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "诗中是否为7句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[7,7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "新年大吉，吉祥如意，用第一个成语的最后一个字作为下一个成语的第一个字，进行接龙，要求大部份成语都是新年祝福类成语，产生7个成语",
        "corresponding_parts": {
            "成语": "请你按照python list的形式，将model_response中生成的成语分割并分割并提取出来。比如[\"新年大吉\", \"吉人天相\", \"相亲相爱\", \"爱国敬业\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了不止一个成语",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否大部份成语都是新年祝福类成语",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否成语接龙产生了7个成语",
                "corresponding_part": "成语",
                "rule": "item_count: [7, 7]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个成语的最后一个字作为下一个成语的第一个字",
                "corresponding_part": "成语",
                "rule": "jielong",
                "dep": [
                    1
                ],
                "能力项": "接龙",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在旅行探险短视频的评论区，生成50条用户口语化评论，评论不能出现\"探险\", \"旅游\", \"景点\"",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了旅行探险的用户口语化评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [50, 50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否不出现\"\"探险\", \"旅游\", \"景点\"\"",
                "corresponding_part": "用户口语化评论",
                "rule": "non_keywords:[\"探险\", \"旅游\", \"景点\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "把下方内容梳理一下，分为7个标题段，再完善内容完整度，使得上下文通顺，无错别字:在用户向外卖平台提交退款请求后，该订单将会显示在外卖平台的退单区域。商户需在接到退单通知后及时作出回应。如果在规定时间内未作出处理，外卖平台的系统会自动批准用户的退款请求。\n\n如果商家决定批准退款，用户支付的订单金额将被返还。\n反之，如果商家决定不予退款，用户会收到商家拒绝退款的通知。此时，用户有权申请客服介入进行仲裁。一旦进入仲裁流程，客服将在24小时内给出终审结果，该结果将作为订单的最终处理依据。\n\n系统通常会展示最近10天内的退单记录。\n\n案例分析:妥善处理退款订单也能赢得顾客的高度评价\n小王是一家公司的软件工程师，最近因为公司即将举行的大型促销活动而忙得焦头烂额。为了节省宝贵的时间，他通过美团分别在两家店铺订购了一份蛋炒饭和一杯咖啡。\n\n这两份订单恰巧被同一位骑手接下，但由于中午高峰时段订单激增，骑手在忙乱中将食物送至小王公司设定的公共取餐处，却遗忘了通知小王取餐。\n埋头工作的小王等到两个小时后才意识到他的外卖订单，当他看到外卖已送达的通知，急忙跑到取餐点，却发现自己的餐食已经不见了。\n饥饿加上心烦意乱的小王并没有联系骑手，而是直接向两家店铺打电话请求退款，结果收到了两种不同的回应。\n\n蛋炒饭的店主李老板在接到小王电话后，礼貌地向小王解释道:“这是骑手的失误，请您直接联系平台客服处理退款事宜。”而咖啡店的老板小陈则提供了不同的处理方式:“非常抱歉造成了这种不便，您可以直接在订单上申请退款，我会立即为您处理。”\n\n面对相同的退款情况，两位店主采取了不同的处理措施，收到的反响也有所不同。直接协助顾客处理退款的咖啡店老板小陈，不久后惊喜地在店铺系统中看到了一条五星好评。从好评的内容和评价日期来看，正是小王在重新下单后所留下的。\n\n而李老板虽然礼貌地指引小王联系平台客服处理退款，但没有像小陈那样直接提供解决方案，这可能影响了顾客的整体满意度。\n\n在午高峰时段，订单量激增往往导致一些不可避免的异常订单出现，这时候商家就需要掌握异常订单的高效处理策略。\n\n由于线上外卖缺乏堂食的直接服务体验，顾客与商家之间的情感互动较为有限。然而，上述两个商家展现的不同处理方法，却为顾客小王带来了截然不同的“情感体验”。\n\n李老板处理蛋炒饭订单的方式是标准化的，按照既定流程正确地指引顾客解决问题，包括联系客服、申请退款，以及商家最终同意退款并向平台提出索赔。\n\n而咖啡店的小陈则表现出更为积极的处理态度，他在意识到订单异常后立即采取行动，先行为顾客处理退款，随后再向平台申请索赔。尽管两位商家最终都通过平台得到了对顾客损失的赔偿，小陈因为及时解决了顾客的紧急需求而获得了顾客的高度评价。\n\n实际上，许多商家在收到顾客的订单投诉时，往往习惯性地让顾客联系平台客服处理，这一过程可能会引起更多的不确定性。\n\n比如，顾客提供的退款证据可能并不充分，客服需要与商家联系来核实情况，这无疑增加了沟通的环节。一旦订单量增多，商家还需要花费额外的时间回忆订单的具体情况，这样不仅效率低下，还可能带来额外的困扰。\n\n关键在于，处理异常订单的宗旨并不仅仅是判定平台或商家的责任，而是要优先考虑并解决顾客的问题。只有当顾客的权益得到保护，商家和平台的利益才能得到最大化。\n\n因此，面对顾客的异常反馈，商家应在确保自身不受损失的前提下，优先从顾客的角度出发，迅速采取措施解决问题。",
        "corresponding_parts": {
            "标题段": "请你按照python list的形式，将model_response中生成的标题段分割并提取出来。只需要输出标题，不需要输出内容。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题段？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否将内容分为7个标题段",
                "corresponding_part": "标题段",
                "rule": "item_count: [7,7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成3条批判性评论，避免重复。要求1:必须是原文字数的2倍左右，假设我们只计算中文的字数。要求2:不能存在关键词\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了3条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[3,3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "字数是否是原文的2倍左右",
                "corresponding_part": "评论",
                "rule": "total_length:[93,114]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围、倍数",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否不存在关键词\"\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"\"",
                "corresponding_part": "评论",
                "rule": "non_keywords:[\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇1分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照7个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【中国】必须刚好出现6次。关键词【他】出现必须不超过6次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇1分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[150, 300]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照7个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "中国是否出现6次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq6:[\"中国\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "他是否不出现超过6次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq6:[\"他\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论15字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为10条",
                "corresponding_part": "长评论",
                "rule": "item_count:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为10条",
                "corresponding_part": "短评论",
                "rule": "item_count:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的3方向分别取3个名字（中文名字，6个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"数\", \"智\", \"云\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了9个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[9,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为6个字",
                "corresponding_part": "名字",
                "rule": "each_length: [6,6]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"数\", \"智\", \"云\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"数\", \"智\", \"云\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "四个人朗读一首诗歌，建议是9句的诗,每句14字。 调性可以是幽默、调皮、调侃的，但最后都是昂扬向上，内容主要就是围绕医药业务发展、可以结合一点点春节的祝福。平仄必须完全一致\n备注:字数只计中文字符",
        "corresponding_parts": {
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"药业昌隆庆新春\", \"梅花鼓劲战疫群\", \"科研精进日夜新\", \"处方箴言利万民\", \"调皮携手笑颜开\", \"共赴健康春潮来\", \"调侃岁月不留痕\", \"祝福瑞雪兆丰年\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否创作了一首诗，无需考虑其他因素，只需要考虑是否是诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗歌是否押韵",
                "corresponding_part": "分割诗",
                "rule": "lvshi_yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否是满足平仄",
                "corresponding_part": "分割诗",
                "rule": "pingze",
                "dep": [
                    0
                ],
                "能力项": "平仄",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每句诗是否是14个字",
                "corresponding_part": "分割诗",
                "rule": "each_length:[14,14]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "整诗是否是9句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[9,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "诗歌内容是否围绕医药业务发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在健身挑战短视频的评论区，生成60条用户口语化评论，评论不能出现\"健身\", \"美体\", \"锻炼\"",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了健身挑战的用户口语化评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了60条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [60, 60]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否不出现\"\"健身\", \"美体\", \"锻炼\"\"",
                "corresponding_part": "用户口语化评论",
                "rule": "non_keywords:[\"健身\", \"美体\", \"锻炼\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论15字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为12条",
                "corresponding_part": "长评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为8条",
                "corresponding_part": "短评论",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请为我创作80个面向{打工人}的{火锅}广告文案，每个文案不超过40个字，店铺位于{写字楼/园区}附近，请挖掘出结合{打工人}与(火锅)特点，突出{打工人}所需要的特点，如上班族需要短暂放松，学生党需要新奇与优惠等，在文案中进行体现。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文案": "#CODE#请你用去除非文案的所有信息后，分割并输出所有模型生成的文案，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型是否生成了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了80个面向打工人的火锅广告文案",
                "corresponding_part": "文案",
                "rule": "item_count: [80, 80]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个文案是否不超过40个字",
                "corresponding_part": "文案",
                "rule": "each_length:[1,40]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否提到了打工人？",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否所有文案都提到写字楼和园区",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在综艺短视频的评论区，以消费者角度生成20条用户口语化评论。",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的内容是否为评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了20条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [20, 20]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否符合综艺短视频的评论",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在搬家短视频的评论区，生成180条用户口语化评论，评论不能出现“老板”，“团队”，“服务”；每条20到25字，每条评论格式独一无二\n备注:字数只计中文字符",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了搬家的用户口语化评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了180条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [180, 180]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否不出现“老板”，“团队”，“服务”",
                "corresponding_part": "用户口语化评论",
                "rule": "non_keywords:[\"老板\",\"团队\",\"服务\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论是否每条在20到25字之间",
                "corresponding_part": "用户口语化评论",
                "rule": "each_length:[20,25]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "评论是否每条格式独一无二",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇9分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照7个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【科学】必须刚好出现6次。关键词【和】出现必须不超过6次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇9分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1350, 2700]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照7个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "科学是否出现6次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq6:[\"科学\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "和是否不出现超过6次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq6:[\"和\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我是微信小程序的负责人，这款小程序是用作美团充电宝的运维的，包括了弹出充电宝、去店里补给充电宝，也包含了充电宝机柜的管理，故障机器处理，现在要给一款微信起名字，前几个字已经固定叫“美团充电宝运维”，后面再增加4个字。风格最好简单易懂，看名字就知道这个小程序是做什么的，请给我输出180个微信小程序的名字，无需输出其他内容。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的名字，请不要去重，例如:['1. 美团充宝管', '2. 美团充宝控', '3. 美团充宝管家', '4. 美团充宝助手', '5. 美团充宝管家', '6. 美团充宝运维通', '7. 美团充宝运维宝', '8. 美团充宝运维站', '9. 美团充宝运维帮', '10. 美团充宝运维家', '11. 美团充宝运维站', '12. 美团充宝运维通', '13. 美团充宝运维宝', '14. 美团充宝运维站', '15. 美团充宝运维帮', '16. 美团充宝运维家', '17. 美团充宝运维站', '18. 美团充宝运维通', '19. 美团充宝运维宝', '20. 美团充宝运维站', '21. 美团充宝运维帮', '22. 美团充宝运维家', '23. 美团充宝运维站', '24. 美团充宝运维通', '25. 美团充宝运维宝', '26. 美团充宝运维站', '27. 美团充宝运维帮', '28. 美团充宝运维家', '29. 美团充宝运维站', '30. 美团充宝运维通', '31. 美团充宝运维宝', '32. 美团充宝运维站', '33. 美团充宝运维帮']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了微信小程序的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了180个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[180,180]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都是11个字",
                "corresponding_part": "名字",
                "rule": "each_length:[11,11]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以#美团充电宝运维#开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"美团充电宝运维\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是一个规划游玩路线的达人，且写攻略的用词精简并能凸显景点特色。你能帮我推荐熊猫基地里5个适合拍照的景点么？并且规划一下景点之间的交通路线。文章必须用繁体写。请注意，每个字都必须是繁体，不能存在简体的字\n\n",
        "corresponding_parts": {
            "景点推荐": "请你按照python list的格式，抓取模型回复中，给出的景点推荐部分，只需要景点，不需要内容。比如[\"都江堰水利工程\", \"灌县古城墙\", \"安澜索桥\", \"玉垒山\", \"灌县署\"]",
            "文案内容": "请你按照python list的格式，抓取模型所有的文案内容，但是删掉那些非文案内容的信息(非文案内容的信息比如:当然可以，以下是我为你生成的信息:)只保留文案本身的内容，比如[\"交通路线规划:\n- **第一天**:上午游览都江堰水利工程，下午前往南桥、安澜索桥，傍晚时分可登玉垒山拍照。\n- **第二天**:上午参观二王庙，下午根据个人兴趣选择在古城内其他景点自由拍照。\n\n以上路线适合自驾或公共交通，如乘坐公交或打车前往各个景点。请注意，部分步道可能需要步行，建议穿着舒适的鞋子。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否推荐了熊猫基地里适合拍照的景点",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐景点数量是否为5个？",
                "rule": "item_count:[5,5]",
                "corresponding_part": "景点推荐",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否规划了景点之间的交通路线",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文章是否用是用繁体写的",
                "rule": "fanti",
                "corresponding_part": "文案内容",
                "dep": [
                    0
                ],
                "能力项": "繁体约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "古剑奇谭、延禧攻略各3道4项单选题，题目要求:题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；题目在50个字以内，选项在10个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "古剑奇谭题目": "请你按照python list的形式，将model_response中生成的古剑奇谭题目分割并提取出来。只需要输出题目，不需要输出答案。别输出延禧攻略的内容，例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "古剑奇谭选项": "请你按照python list的形式，将model_response中生成的古剑奇谭选项分割并提取出来。只需要输出选项，不需要输出题目。别输出延禧攻略的内容，也不要输出前缀例如“A.”, “B.”，例如[\"百里屠苏\",\"风晴雪\",\"夏夷则\",\"欧阳少恭\"]",
            "延禧攻略题目": "请你按照python list的形式，将model_response中生成的延禧攻略题目分割并提取出来。只需要输出题目，不需要输出答案。别输出古剑奇谭的内容，例如[\"1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "延禧攻略选项": "请你按照python list的形式，将model_response中生成的延禧攻略选项分割并提取出来。只需要输出选项，不需要输出题目。别输出古剑奇谭的内容，也不要输出前缀例如“A.”, “B.”，例如[\"魏璎珞\",\"魏璎珞\",\"魏璎珞\",\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了延禧攻略的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了古剑奇谭的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了古剑奇谭的3道4项单选题",
                "corresponding_part": "古剑奇谭题目",
                "rule": "item_count: [3, 3]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "古剑奇谭的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "古剑奇谭的题目是否在50个字以内",
                "corresponding_part": "古剑奇谭题目",
                "rule": "each_length:[1,50]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "古剑奇谭的选项是否在10个字以内",
                "corresponding_part": "古剑奇谭选项",
                "rule": "each_length:[1,10]",
                "dep": [
                    1
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了延禧攻略的3道4项单选题",
                "corresponding_part": "延禧攻略题目",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "延禧攻略的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "延禧攻略的题目是否在50个字以内",
                "corresponding_part": "延禧攻略题目",
                "rule": "each_length:[1,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "延禧攻略的选项是否在10个字以内",
                "corresponding_part": "延禧攻略选项",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论10字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为5条",
                "corresponding_part": "长评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为5条",
                "corresponding_part": "短评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "如何区分花粉过敏和感冒请以以上主题帮我输出分别输出7条标题+文案，标题文案需要具有吸引力，必须加表情符号等。标题在15字以内，文案在80字以内。例如:标题:春季花粉过敏高峰期到！🌸文案:👀四招教你区分花粉过敏和感冒，标题不能存在“\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"”\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的标题分割并提取出来，只提取标题，不提取文案。不需要提取“标题:”，只提取内容即可，比如:[\"感冒还是花粉过敏？\", \"春季过敏季，你准备好了吗？\"]",
            "文案": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的文案分割并提取出来，只提取文案，不提取标题。不需要提取“文案:”，只提取内容即可，比如:[\"了解两者差别，告别困惑！\", \"学会辨别花粉过敏和感冒，健康过春天！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了7条标题",
                "corresponding_part": "标题",
                "rule": "item_count: [7, 7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了7条文案",
                "corresponding_part": "文案",
                "rule": "item_count: [7, 7]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个标题是否在15字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每条文案是否在80字以内",
                "corresponding_part": "文案",
                "rule": "each_length:[1,80]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "标题是否加了表情符号",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文案是否加了表情符号",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "标题是否不出现“\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"”字",
                "corresponding_part": "标题",
                "rule": "non_keyword: [\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你好，帮我写一段“盆满钵满奖”的推荐理由，有关于挣钱最多的，需要搞笑风格，押韵的。5句共8字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐理由": "请你按照python list的格式，抓取模型回复中，给出的押韵搞笑推荐理由的内容，按照标点符号分开输出，例如: [\"盆满钵满奖，不只是钱满满，更是笑声和幸福，永远在线！\", \"在挣钱的道路上，他/她是个狂飙的赛车手，每次收入进账，就像打了个大大的满贯球。\", \"他/她的钱堆积如山，比豆芽还要快速发芽，账户的数字跳跃，像小兔子一样欢快地蹦跳。\", \"他/她的金库，比蜜蜂的蜂巢还要甜，每天的工资，像是不停下雨的天。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推荐理由",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐理由是否关于挣钱最多",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推荐理由是否押韵",
                "corresponding_part": "推荐理由",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推荐理由是否为8字",
                "corresponding_part": "推荐理由",
                "rule": "total_length:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "推荐理由是否为5句",
                "corresponding_part": "推荐理由",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论15字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为6条",
                "corresponding_part": "长评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为4条",
                "corresponding_part": "短评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论15字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为10条",
                "corresponding_part": "长评论",
                "rule": "item_count:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为10条",
                "corresponding_part": "短评论",
                "rule": "item_count:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在美团外卖神券短视频的评论区，以消费者角度生成180条用户口语化评论；50到55字；评论不重复；评论内不能存在“实惠”，“便宜”，“省钱”\n备注:字数只计中文字符",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的内容是否为美团外卖神券相关的评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了180条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [180, 180]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "所有评论是否为50到55字",
                "corresponding_part": "用户口语化评论",
                "rule": "each_length:[50,55]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论是否不重复",
                "corresponding_part": "用户口语化评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "评论是否不含“实惠”，“便宜”，“省钱”等字",
                "corresponding_part": "用户口语化评论",
                "rule": "non_keywords:[\"实惠\",\"便宜\",\"省钱\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对金融类目内容进行评论，根据以下内容进行扩充润色，生成50条评论，语言需要简洁，尽可能接近真人的语气，避免重复，并且不能包含任何敏感信息",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型是否生成了金融评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请你扮演一名经验丰富的小学数学老师，现在是期末，需要你对每个学生的本学期表现撰写教师评语，首先写匡俊同学的评语，要求藏头诗必须包含[匡俊]的名字，每句40字，总共3句。比如整诗要求4句，每句4字，内容可以是:【匡如泉涌，俊天舜日，聪明伶俐，努力进取。】同时，必须出现以下关键词\"##KEYWORDS###\"，不能出现\"\"同学\"\"这个词\n备注:字数只计中文字符",
        "corresponding_parts": {
            "评语": "请你按照python list的格式，抓取模型回复中，给出的评语部分，只需要评语，不需要内容。比如[\"思维活跃\", \"尧天有才\", \"同学喜爱\", \"学习进步\"]",
            "整合评语": "请你按照python list的格式，将模型回复中给出的评语部分，整合成一个完整的单个element的评语输出。比如[\"思如泉涌， \n尧天舜日， \n聪明伶俐， \n努力进取。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评语",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗句的每个第一个字是否组成一段和匡俊相关的话？",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "生成特定文案",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "藏头诗是否每句40字",
                "corresponding_part": "评语",
                "rule": "each_length:[40,40]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "藏头诗是否总共3句以下",
                "corresponding_part": "评语",
                "rule": "item_count:[1,3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "评语是否包含\"\"聪明\", \"努力\"\"",
                "corresponding_part": "整合评语",
                "rule": "keyword: [\"聪明\", \"努力\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "评语是否不包含\"\"同学\"\"",
                "corresponding_part": "整合评语",
                "rule": "non_keyword: [\"同学\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇5分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照2个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【周年】必须刚好出现3次。关键词【是】出现必须不超过3次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇5分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[750, 1500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照2个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "周年是否出现3次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq3:[\"周年\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "是是否不出现超过3次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq3:[\"是\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你是一位中医养生与全国美食专家，请你查阅互联网上的资料，并根据中国八大菜系中的菜品与日常的小吃与中西方的快餐，对如下的问题给出能够满足用户需求的3条菜品名，每个菜品名必须为刚好3个字:\n1）胃痛适合吃什么？\n每个菜品后都必须紧跟菜品的解释。请你再次注意，回答的菜品应是各地的菜系中的菜品与日常的小吃与中西的快餐中的菜品，菜品名请尽可能具体，请不要虚构不存在的菜品，这对我很重要，请你反复思考后再作答。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "菜品名": "请你按照python list的形式，将model_response中的菜品名分割并提取出来。无需提取解释只需提取菜名[\"清蒸鱼\",\"白切鸡\",\"粥\",\"煮鸡胸肉\",\"清蒸豆腐\",\"烤鱼片\",\"清炖鸡汤\",\"清蒸蔬菜包\",\"煮蔬菜汤\",\"清炒菜心\",\"清炒豆腐丝\",\"煮青菜\",\"红烧茄子\",\"煮豆腐\",\"清蒸蔬菜\",\"炒豆芽\",\"炒青菜\",\"红烧鸡翅\",\"酸辣土豆丝\",\"香煎鸡胸肉\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了菜品名",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了3条菜品名",
                "corresponding_part": "菜品名",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个菜品后是否都紧了菜品的解释",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "菜品名是否都是刚好3个字",
                "corresponding_part": "菜品名",
                "rule": "each_length:[3,3]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确、多对象",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一篇直播营销产品的述职报告。要求50字。\n\n第一部分:23年工作总结。23年团队主要目标是基建完善度，基础功能达到易用水平，我个人的工作主要目标是提升秒杀、抽奖玩法的易用性。要求写出如何提升的，策略是什么。最终的结果如何。需要从目标、策略、举措来写，且举措中要通过star原则来呈现。\n\n第二部分:24年工作规划。24年团队主要目标是商家渗透率提升20%，我负责的营销玩法，从好用性、商家牵引、提效等方面，需要分别做哪些工作。\n第三部分:个人成长与规划，围绕美团价值观来写。\n\n备注:字数只计中文字符",
        "corresponding_parts": {
            "述职报告": "#CODE#述职报告内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "述职报告是否写出了23年工作总结",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "述职报告中23年工作总结是否包含团队主要目标是基建完善度，基础功能达到易用水平",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "述职报告中23年工作总结是否包含个人工作主要目标是提升秒杀、抽奖玩法的易用性",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "述职报告中23年工作总结是否写出如何提升秒杀、抽奖玩法的易用性",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "述职报告中23年工作总结是否写出提升秒杀、抽奖玩法易用性的策略",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "述职报告中23年工作总结是否写出提升秒杀、抽奖玩法易用性的最终结果",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "述职报告中23年工作总结是否从目标、策略、举措来写",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 7,
                "question": "述职报告中23年工作总结的举措部分是否通过STAR原则来呈现",
                "rule": null,
                "dep": [
                    6
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "述职报告中是否写出了24年工作规划",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 9,
                "question": "述职报告中24年工作规划是否包含团队主要目标是商家渗透率提升20%",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "述职报告中24年工作规划是否包含负责的营销玩法从好用性方面需要做的工作",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "述职报告中24年工作规划是否包含负责的营销玩法从商家牵引方面需要做的工作",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "述职报告中24年工作规划是否包含负责的营销玩法从提效方面需要做的工作",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 13,
                "question": "述职报告中是否写出了个人成长与规划",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 14,
                "question": "述职报告是否在50字左右",
                "corresponding_part": "述职报告",
                "rule": "each_length:[45,55]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你是一位中医养生与全国美食专家，请你查阅互联网上的资料，并根据中国八大菜系中的菜品与日常的小吃与中西方的快餐，对如下的问题给出能够满足用户需求的5条菜品名，每个菜品名必须为刚好3个字:\n1）胃痛适合吃什么？\n每个菜品后都必须紧跟菜品的解释。请你再次注意，回答的菜品应是各地的菜系中的菜品与日常的小吃与中西的快餐中的菜品，菜品名请尽可能具体，请不要虚构不存在的菜品，这对我很重要，请你反复思考后再作答。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "菜品名": "请你按照python list的形式，将model_response中的菜品名分割并提取出来。无需提取解释只需提取菜名[\"清蒸鱼\",\"白切鸡\",\"粥\",\"煮鸡胸肉\",\"清蒸豆腐\",\"烤鱼片\",\"清炖鸡汤\",\"清蒸蔬菜包\",\"煮蔬菜汤\",\"清炒菜心\",\"清炒豆腐丝\",\"煮青菜\",\"红烧茄子\",\"煮豆腐\",\"清蒸蔬菜\",\"炒豆芽\",\"炒青菜\",\"红烧鸡翅\",\"酸辣土豆丝\",\"香煎鸡胸肉\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了菜品名",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了5条菜品名",
                "corresponding_part": "菜品名",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个菜品后是否都紧了菜品的解释",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "菜品名是否都是刚好3个字",
                "corresponding_part": "菜品名",
                "rule": "each_length:[3,3]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确、多对象",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "四个人朗读一首诗歌，建议是7句的诗,每句8字。 调性可以是幽默、调皮、调侃的，但最后都是昂扬向上，内容主要就是围绕医药业务发展、可以结合一点点春节的祝福。平仄必须完全一致\n备注:字数只计中文字符",
        "corresponding_parts": {
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"药业昌隆庆新春\", \"梅花鼓劲战疫群\", \"科研精进日夜新\", \"处方箴言利万民\", \"调皮携手笑颜开\", \"共赴健康春潮来\", \"调侃岁月不留痕\", \"祝福瑞雪兆丰年\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否创作了一首诗，无需考虑其他因素，只需要考虑是否是诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗歌是否押韵",
                "corresponding_part": "分割诗",
                "rule": "lvshi_yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否是满足平仄",
                "corresponding_part": "分割诗",
                "rule": "pingze",
                "dep": [
                    0
                ],
                "能力项": "平仄",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每句诗是否是8个字",
                "corresponding_part": "分割诗",
                "rule": "each_length:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "整诗是否是7句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[7,7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "诗歌内容是否围绕医药业务发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的5方向分别取5个名字（中文名字，4个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"数\", \"智\", \"云\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了25个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[25,25]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为4个字",
                "corresponding_part": "名字",
                "rule": "each_length: [4,4]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"数\", \"智\", \"云\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"数\", \"智\", \"云\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成60条批判性评论，避免重复。要求1:必须比原文长。要求2:必须存在关键词\"\"噪音\", \"出戏\"\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "#CODE#请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了60条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[60,60]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否比原文长",
                "corresponding_part": "评论",
                "rule": "each_length:[57,100000]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否存在关键词\"\"噪音\", \"出戏\"\"",
                "corresponding_part": "评论",
                "rule": "keywords:[\"噪音\", \"出戏\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在搬家短视频的评论区，生成80条用户口语化评论，评论不能出现“老板”，“团队”，“服务”；每条50到55字，每条评论格式独一无二\n备注:字数只计中文字符",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了搬家的用户口语化评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了80条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [80, 80]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否不出现“老板”，“团队”，“服务”",
                "corresponding_part": "用户口语化评论",
                "rule": "non_keywords:[\"老板\",\"团队\",\"服务\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论是否每条在50到55字之间",
                "corresponding_part": "用户口语化评论",
                "rule": "each_length:[50,55]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "评论是否每条格式独一无二",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇5分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照9个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【科学】必须刚好出现7次。关键词【和】出现必须不超过7次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇5分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[750, 1500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照9个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "科学是否出现7次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq7:[\"科学\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "和是否不出现超过7次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq7:[\"和\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我生成3道搞笑知识4项单选题，题目要求:热门影视剧、电影相关、题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；整道题目（包括选项）在100个字以内，选项在5个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目，不需要输出答案。例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "选项": "请你按照python list的形式，将model_response中生成的所有选项分割并提取出来。只需要输出选项，不需要输出题目。别输出前缀例如“A.”, “B.”，例如['打针', '做手术', '被骂', '失去爱情', '法拉利', '兰博基尼', '道奇', '奔驰', '周星星', '周星期', '周星辰', '周星驰', '圆形', '方形', '心形', '三角形', '跑车', '卡车', '摩托车', '飞机', '歌手', '警察', '厨师', '画家', '陀螺', '骰子', '扑克牌', '指南针', '红酒', '伏特加', '朗姆酒', '啤酒', '秒表', '日历', '沙漏', '计算器', '篮球', '足球', '乒乓球', '长跑', '牛魔王', '孙悟空', '猪八戒', '沙僧', '麻将', '扑克', '象棋', '飞行棋', '超人飞翔', '神龙摆尾', '白鹤亮翅', '泰坦尼克', '音乐课', '美术课', '体育课', '数学课']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了3道搞笑知识4项单选题",
                "corresponding_part": "题目",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "题目是否与热门影视剧、电影相关",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "题目是否在100个字以内",
                "corresponding_part": "题目",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "选项是否在5个字以内",
                "corresponding_part": "选项",
                "rule": "each_length:[1,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是唐朝的一位诗人，你刚刚参加完科举考试，但是你失意落榜。在战后的宁静夜晚，你回想起这些年的寒窗苦读，你心中充满了郁郁不得志的情愫，同时又感慨时光的流逝和对人生功名利禄的不屑。请以此为背景，创作一首体现你复杂情感律诗，每句10字。创作要求:诗歌必须遵循律诗的基本规则，包括平仄格律、押韵和对仗。诗中应体现纵情山水的洒脱、对夺取功名的不屑，同时融入对科举考试的失望和时光流逝的感慨。使用传统的意象和象征，如月亮、扁舟、山河等，来增强诗歌的意境和深度。诗歌风格豪放、浪漫、悲壮，使作品既符合传统又有独到之处。平仄必须完全一致\n备注:字数只计中文字符",
        "corresponding_parts": {
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"科举路途虚度春\", \"枯坐寒窗又一晨\", \"榜名无我心茫然\", \"月照孤舟泪两川\", \"功名富贵如浮云\", \"岁月匆匆叹无常\", \"高山流水觅知音\", \"悲歌一曲酒几觞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否创作了一首诗，无需考虑其他因素，只需要考虑是否是诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗歌是否押韵",
                "corresponding_part": "分割诗",
                "rule": "lvshi_yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否是满足平仄",
                "corresponding_part": "分割诗",
                "rule": "pingze",
                "dep": [
                    0
                ],
                "能力项": "平仄",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每句诗是否是10个字",
                "corresponding_part": "分割诗",
                "rule": "each_length:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "整诗是否是八句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论15字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为18条",
                "corresponding_part": "长评论",
                "rule": "item_count:[18,18]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为12条",
                "corresponding_part": "短评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成60条批判性评论，避免重复。要求1:必须比原文长。要求2:必须存在关键词\"\"不好\", \"离谱\"\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "#CODE#请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了60条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[60,60]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否比原文长",
                "corresponding_part": "评论",
                "rule": "each_length:[57,100000]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否存在关键词\"\"不好\", \"离谱\"\"",
                "corresponding_part": "评论",
                "rule": "keywords:[\"不好\", \"离谱\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成5条批判性评论，避免重复。要求1:必须是原文字数的3倍左右，假设我们只计算中文的字数。要求2:不能存在关键词\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了5条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "字数是否是原文的3倍左右",
                "corresponding_part": "评论",
                "rule": "total_length:[140,171]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围、倍数",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否不存在关键词\"\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"\"",
                "corresponding_part": "评论",
                "rule": "non_keywords:[\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的9方向分别取9个名字（中文名字，4个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"通\", \"智\", \"汇\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了81个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[81,81]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为4个字",
                "corresponding_part": "名字",
                "rule": "each_length: [4,4]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"通\", \"智\", \"汇\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"通\", \"智\", \"汇\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我扩充润色”他有什么代表作嘛“这句话，生成180条评论，用于明星类目短视频。每条评论不能超过40个字。不能出现\"\"他\", \"有\"\"字\n备注:字数只计中文字符",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否扩充润色了'他有什么代表作嘛'这句话，并生成了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了180条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[180,180]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每条评论不超过40个字",
                "corresponding_part": "评论",
                "rule": "each_length:[1,40]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每条评论不包含\"\"他\", \"有\"\"字",
                "corresponding_part": "评论",
                "rule": "non_keywords:[\"他\", \"有\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你好，帮我写一段“盆满钵满奖”的推荐理由，有关于挣钱最多的，需要搞笑风格，押韵的。7句共8字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐理由": "请你按照python list的格式，抓取模型回复中，给出的押韵搞笑推荐理由的内容，按照标点符号分开输出，例如: [\"盆满钵满奖，不只是钱满满，更是笑声和幸福，永远在线！\", \"在挣钱的道路上，他/她是个狂飙的赛车手，每次收入进账，就像打了个大大的满贯球。\", \"他/她的钱堆积如山，比豆芽还要快速发芽，账户的数字跳跃，像小兔子一样欢快地蹦跳。\", \"他/她的金库，比蜜蜂的蜂巢还要甜，每天的工资，像是不停下雨的天。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推荐理由",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐理由是否关于挣钱最多",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推荐理由是否押韵",
                "corresponding_part": "推荐理由",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推荐理由是否为8字",
                "corresponding_part": "推荐理由",
                "rule": "total_length:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "推荐理由是否为7句",
                "corresponding_part": "推荐理由",
                "rule": "item_count:[7,7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你是一个擅长生成花名的小助手，生成的花名需要满足下面这几天条件，长度5个汉字，前面两个字是食物，中间一个字是食物的烹饪方式，最后两个字也是食物，不可重复，一共生成 50 个。回复的格式是纯字符串，需要存在分隔符号，不要全部都坨在一起",
        "corresponding_parts": {
            "花名": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了花名，且存在分隔符，没有坨在一起",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否一共生成了50个花名",
                "corresponding_part": "花名",
                "rule": "item_count:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "生成的花名是否长度为5个汉字",
                "corresponding_part": "花名",
                "rule": "each_length:[5,5]",
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "生成的所有花名是否前面两个字全都是食物，不存在不是食物的情况",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "生成的所有花名是否中间一个字全都是食物的烹饪方式，不存则其他情况",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "生成的所有花名是否最后两个字全是食物，没有不是的情况",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "生成的所有花名是否没有重复",
                "corresponding_part": "花名",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对金融类目内容进行评论，根据以下内容进行扩充润色，生成60条评论，语言需要简洁，尽可能接近真人的语气，避免重复，并且不能包含任何敏感信息，末尾不带标点符号",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型是否生成了金融类目的评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了60条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[60,60]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论末尾是否不带标点符号",
                "corresponding_part": "评论",
                "rule": "no_end_with_punctuation",
                "dep": [
                    0
                ],
                "能力项": "符号",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对电影类目内容进行评论，根据以下内容进行扩充润色，生成60条评论，语言需要简洁，尽可能接近真人的语气，避免重复，并且不能包含任何敏感信息",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型是否生成了电影评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了60条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[60,60]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一篇直播营销产品的述职报告。要求100字。\n\n第一部分:23年工作总结。23年团队主要目标是基建完善度，基础功能达到易用水平，我个人的工作主要目标是提升秒杀、抽奖玩法的易用性。要求写出如何提升的，策略是什么。最终的结果如何。需要从目标、策略、举措来写，且举措中要通过star原则来呈现。\n\n第二部分:24年工作规划。24年团队主要目标是商家渗透率提升20%，我负责的营销玩法，从好用性、商家牵引、提效等方面，需要分别做哪些工作。\n第三部分:个人成长与规划，围绕美团价值观来写。\n\n备注:字数只计中文字符",
        "corresponding_parts": {
            "述职报告": "#CODE#述职报告内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "述职报告是否写出了23年工作总结",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "述职报告中23年工作总结是否包含团队主要目标是基建完善度，基础功能达到易用水平",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "述职报告中23年工作总结是否包含个人工作主要目标是提升秒杀、抽奖玩法的易用性",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "述职报告中23年工作总结是否写出如何提升秒杀、抽奖玩法的易用性",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "述职报告中23年工作总结是否写出提升秒杀、抽奖玩法易用性的策略",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "述职报告中23年工作总结是否写出提升秒杀、抽奖玩法易用性的最终结果",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "述职报告中23年工作总结是否从目标、策略、举措来写",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 7,
                "question": "述职报告中23年工作总结的举措部分是否通过STAR原则来呈现",
                "rule": null,
                "dep": [
                    6
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "述职报告中是否写出了24年工作规划",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 9,
                "question": "述职报告中24年工作规划是否包含团队主要目标是商家渗透率提升20%",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "述职报告中24年工作规划是否包含负责的营销玩法从好用性方面需要做的工作",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "述职报告中24年工作规划是否包含负责的营销玩法从商家牵引方面需要做的工作",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "述职报告中24年工作规划是否包含负责的营销玩法从提效方面需要做的工作",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 13,
                "question": "述职报告中是否写出了个人成长与规划",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 14,
                "question": "述职报告是否在100字左右",
                "corresponding_part": "述职报告",
                "rule": "each_length:[90,110]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "古剑奇谭、延禧攻略各5道4项单选题，题目要求:题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；题目在50个字以内，选项在10个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "古剑奇谭题目": "请你按照python list的形式，将model_response中生成的古剑奇谭题目分割并提取出来。只需要输出题目，不需要输出答案。别输出延禧攻略的内容，例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "古剑奇谭选项": "请你按照python list的形式，将model_response中生成的古剑奇谭选项分割并提取出来。只需要输出选项，不需要输出题目。别输出延禧攻略的内容，也不要输出前缀例如“A.”, “B.”，例如[\"百里屠苏\",\"风晴雪\",\"夏夷则\",\"欧阳少恭\"]",
            "延禧攻略题目": "请你按照python list的形式，将model_response中生成的延禧攻略题目分割并提取出来。只需要输出题目，不需要输出答案。别输出古剑奇谭的内容，例如[\"1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "延禧攻略选项": "请你按照python list的形式，将model_response中生成的延禧攻略选项分割并提取出来。只需要输出选项，不需要输出题目。别输出古剑奇谭的内容，也不要输出前缀例如“A.”, “B.”，例如[\"魏璎珞\",\"魏璎珞\",\"魏璎珞\",\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了延禧攻略的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了古剑奇谭的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了古剑奇谭的5道4项单选题",
                "corresponding_part": "古剑奇谭题目",
                "rule": "item_count: [5, 5]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "古剑奇谭的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "古剑奇谭的题目是否在50个字以内",
                "corresponding_part": "古剑奇谭题目",
                "rule": "each_length:[1,50]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "古剑奇谭的选项是否在10个字以内",
                "corresponding_part": "古剑奇谭选项",
                "rule": "each_length:[1,10]",
                "dep": [
                    1
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了延禧攻略的5道4项单选题",
                "corresponding_part": "延禧攻略题目",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "延禧攻略的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "延禧攻略的题目是否在50个字以内",
                "corresponding_part": "延禧攻略题目",
                "rule": "each_length:[1,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "延禧攻略的选项是否在10个字以内",
                "corresponding_part": "延禧攻略选项",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "写7组喜庆有财气的春联，每联40个字，上联后三个字“跃新岁”， 下联后三个字“卧春风”，要有文采，不要太俗，把上下联标注:比如:上联:瑞雪兆丰年，金鸡报晓跃新岁。下联:红梅迎春到，银鼠送福卧春风\n备注:字数只计中文字符",
        "corresponding_parts": {
            "春联": "请你按照python list的形式，将model_response中的春联分割并提取出来，一个element内需要有上联+下联。比如:[\"瑞雪兆丰年，金鸡报晓跃新岁。红梅迎春到，银鼠送福卧春风\"]",
            "上联": "请你按照python list的形式，将model_response中的上联分割并提取出来。比如:[\"瑞雪兆丰年，金鸡报晓跃新岁\"]",
            "下联": "请你按照python list的形式，将model_response中的下联分割并提取出来。比如:[\"红梅迎春到，银鼠送福卧春风\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了春联且每副春联是否有上联和下联且上下联都有明确标注",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否写了7组春联",
                "corresponding_part": "春联",
                "rule": "item_count:[7,7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每副春联的上联是否为40个字",
                "corresponding_part": "上联",
                "rule": "each_length:[40,40]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每副春联的下联是否为40个字",
                "corresponding_part": "下联",
                "rule": "each_length:[40,40]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每副春联的上联后三个字是否为“跃新岁”",
                "corresponding_part": "上联",
                "rule": "endswith_each:[\"跃新岁\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每副春联的下联后三个字是否为“卧春风”",
                "corresponding_part": "下联",
                "rule": "endswith_each:[\"卧春风\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请为我创作180个面向{打工人}的{火锅}广告文案，每个文案不超过20个字，店铺位于{写字楼/园区}附近，请挖掘出结合{打工人}与(火锅)特点，突出{打工人}所需要的特点，如上班族需要短暂放松，学生党需要新奇与优惠等，在文案中进行体现。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文案": "#CODE#请你用去除非文案的所有信息后，分割并输出所有模型生成的文案，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型是否生成了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了180个面向打工人的火锅广告文案",
                "corresponding_part": "文案",
                "rule": "item_count: [180, 180]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个文案是否不超过20个字",
                "corresponding_part": "文案",
                "rule": "each_length:[1,20]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否提到了打工人？",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否所有文案都提到写字楼和园区",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "模仿“商女不知亡国恨，隔江犹唱后庭花”的对称方式和讽刺手法，写一首讽刺当今社会996的加班现象，诗中需包含“\"躺平\", \"资本\"”。共9句。",
        "corresponding_parts": {
            "全部诗句": "请你按照python list的格式，抓取模型回复中，给出的所有诗句，不要分割。",
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"劳者不知身已疲\", \"夜深犹在键盘旁\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一首诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗中是否模仿了“商女不知亡国恨，隔江犹唱后庭花”的对称方式",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "诗中是否包含“\"躺平\", \"资本\"”",
                "corresponding_part": "全部诗句",
                "rule": "keyword:[\"躺平\", \"资本\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "诗中是否为9句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[9,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是一个文案工作者，需要给一个老黄历写文案，包括两部分，一部分是今天适合做的事，另一部分是今天不适合做的事，几组参考的文案与格式如下，你需要按照参考的格式与风格继续生成8组，每组都包括5个2字词语（适宜做的事）和5个2字词语（忌讳做的事），给你的例子仅供参考，你可以发挥联想多做扩充，每一组的文案尽量不要有重复:1）宜散步 摸鱼……，忌焦虑 攀比……；2）宜打盹 追剧……，忌加班 内卷……；3）宜健身 懒觉……，忌紧张 不安……；4）宜跑步 读书……，忌冲动 上头……；5）宜做饭 冥想……，忌糊涂 大意……；6）宜记账 复盘，忌偷懒 推诿……；7）……",
        "corresponding_parts": {
            "文案": "请你按照python list的形式，将生成的文案按照类似[\"宜散步 摸鱼，忌焦虑 攀比\", \"宜打盹 追剧，忌加班 内卷\", \"宜健身 懒觉，忌紧张 不安\", \"宜跑步 读书，忌冲动 上头\", \"宜做饭 冥想，忌糊涂 大意\"]的格式分割并输出。",
            "事": "请你按照python list的形式，将model_response中所有适宜和忌讳做的事全部分割提取出来，不需要加前面的#宜#或者#忌#以最小的单位来输出，一个element内不要放超过一个事。比如[\"散步\",\"摸鱼\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了8组文案",
                "corresponding_part": "文案",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每组文案是否包括5个适宜做的事",
                "corresponding_part": "文案",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每组文案是否包括5个忌讳做的事",
                "corresponding_part": "文案",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "文案是否没有重复",
                "corresponding_part": "事",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论10字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为15条",
                "corresponding_part": "长评论",
                "rule": "item_count:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为15条",
                "corresponding_part": "短评论",
                "rule": "item_count:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我是微信小程序的负责人，这款小程序是用作美团充电宝的运维的，包括了弹出充电宝、去店里补给充电宝，也包含了充电宝机柜的管理，故障机器处理，现在要给一款微信起名字，前几个字已经固定叫“美团充电宝运维”，后面再增加4个字。风格最好简单易懂，看名字就知道这个小程序是做什么的，请给我输出80个微信小程序的名字，无需输出其他内容。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的名字，请不要去重，例如:['1. 美团充宝管', '2. 美团充宝控', '3. 美团充宝管家', '4. 美团充宝助手', '5. 美团充宝管家', '6. 美团充宝运维通', '7. 美团充宝运维宝', '8. 美团充宝运维站', '9. 美团充宝运维帮', '10. 美团充宝运维家', '11. 美团充宝运维站', '12. 美团充宝运维通', '13. 美团充宝运维宝', '14. 美团充宝运维站', '15. 美团充宝运维帮', '16. 美团充宝运维家', '17. 美团充宝运维站', '18. 美团充宝运维通', '19. 美团充宝运维宝', '20. 美团充宝运维站', '21. 美团充宝运维帮', '22. 美团充宝运维家', '23. 美团充宝运维站', '24. 美团充宝运维通', '25. 美团充宝运维宝', '26. 美团充宝运维站', '27. 美团充宝运维帮', '28. 美团充宝运维家', '29. 美团充宝运维站', '30. 美团充宝运维通', '31. 美团充宝运维宝', '32. 美团充宝运维站', '33. 美团充宝运维帮']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了微信小程序的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了80个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[80,80]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都是11个字",
                "corresponding_part": "名字",
                "rule": "each_length:[11,11]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以#美团充电宝运维#开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"美团充电宝运维\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对教育类目内容进行评论，根据以下内容进行扩充润色，生成50条评论，语言需要简洁，尽可能接近真人的语气，避免重复，并且不能包含任何敏感信息",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型是否生成了教育评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我生成7道搞笑知识4项单选题，题目要求:热门影视剧、电影相关、题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；整道题目（包括选项）在100个字以内，选项在4个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目，不需要输出答案。例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "选项": "请你按照python list的形式，将model_response中生成的所有选项分割并提取出来。只需要输出选项，不需要输出题目。别输出前缀例如“A.”, “B.”，例如['打针', '做手术', '被骂', '失去爱情', '法拉利', '兰博基尼', '道奇', '奔驰', '周星星', '周星期', '周星辰', '周星驰', '圆形', '方形', '心形', '三角形', '跑车', '卡车', '摩托车', '飞机', '歌手', '警察', '厨师', '画家', '陀螺', '骰子', '扑克牌', '指南针', '红酒', '伏特加', '朗姆酒', '啤酒', '秒表', '日历', '沙漏', '计算器', '篮球', '足球', '乒乓球', '长跑', '牛魔王', '孙悟空', '猪八戒', '沙僧', '麻将', '扑克', '象棋', '飞行棋', '超人飞翔', '神龙摆尾', '白鹤亮翅', '泰坦尼克', '音乐课', '美术课', '体育课', '数学课']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了7道搞笑知识4项单选题",
                "corresponding_part": "题目",
                "rule": "item_count: [7, 7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "题目是否与热门影视剧、电影相关",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "题目是否在100个字以内",
                "corresponding_part": "题目",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "选项是否在4个字以内",
                "corresponding_part": "选项",
                "rule": "each_length:[1,4]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇1分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照7个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【邓稼先】必须刚好出现6次。关键词【的】出现必须不超过6次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇1分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[150, 300]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照7个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "邓稼先是否出现6次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq6:[\"邓稼先\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "的是否不出现超过6次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq6:[\"的\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "四个人朗读一首诗歌，建议是9句的诗,每句10字。 调性可以是幽默、调皮、调侃的，但最后都是昂扬向上，内容主要就是围绕医药业务发展、可以结合一点点春节的祝福。平仄必须完全一致\n备注:字数只计中文字符",
        "corresponding_parts": {
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"药业昌隆庆新春\", \"梅花鼓劲战疫群\", \"科研精进日夜新\", \"处方箴言利万民\", \"调皮携手笑颜开\", \"共赴健康春潮来\", \"调侃岁月不留痕\", \"祝福瑞雪兆丰年\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否创作了一首诗，无需考虑其他因素，只需要考虑是否是诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗歌是否押韵",
                "corresponding_part": "分割诗",
                "rule": "lvshi_yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否是满足平仄",
                "corresponding_part": "分割诗",
                "rule": "pingze",
                "dep": [
                    0
                ],
                "能力项": "平仄",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每句诗是否是10个字",
                "corresponding_part": "分割诗",
                "rule": "each_length:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "整诗是否是9句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[9,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "诗歌内容是否围绕医药业务发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇3分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照3个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【周年】必须刚好出现4次。关键词【是】出现必须不超过4次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇3分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[450, 900]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照3个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "周年是否出现4次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq4:[\"周年\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "是是否不出现超过4次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq4:[\"是\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇1分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照7个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【科学】必须刚好出现6次。关键词【和】出现必须不超过6次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇1分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[150, 300]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照7个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "科学是否出现6次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq6:[\"科学\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "和是否不出现超过6次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq6:[\"和\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的9方向分别取9个名字（中文名字，6个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"通\", \"数\", \"汇\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了81个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[81,81]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为6个字",
                "corresponding_part": "名字",
                "rule": "each_length: [6,6]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"通\", \"数\", \"汇\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"通\", \"数\", \"汇\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论10字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为4条",
                "corresponding_part": "长评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为6条",
                "corresponding_part": "短评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论15字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为12条",
                "corresponding_part": "长评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为8条",
                "corresponding_part": "短评论",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论15字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为5条",
                "corresponding_part": "长评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为5条",
                "corresponding_part": "短评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "模仿“商女不知亡国恨，隔江犹唱后庭花”的对称方式和讽刺手法，写一首讽刺当今社会996的加班现象，诗中需包含“\"加班\", \"苦难\"”。每句8字，共7句。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "全部诗句": "请你按照python list的格式，抓取模型回复中，给出的所有诗句，不要分割。",
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"劳者不知身已疲\", \"夜深犹在键盘旁\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一首诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗中是否模仿了“商女不知亡国恨，隔江犹唱后庭花”的对称方式",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "诗中是否包含“\"加班\", \"苦难\"”",
                "corresponding_part": "全部诗句",
                "rule": "keyword:[\"加班\", \"苦难\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "诗中是否为7句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[7,7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每句是否为8字",
                "corresponding_part": "分割诗",
                "rule": "each_length:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论15字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为4条",
                "corresponding_part": "长评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为6条",
                "corresponding_part": "短评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是一个规划游玩路线的达人，且写攻略的用词精简并能凸显景点特色。你能帮我推荐熊猫基地里9个适合拍照的景点么？并且规划一下景点之间的交通路线。文章必须用繁体写。请注意，每个字都必须是繁体，不能存在简体的字\n\n",
        "corresponding_parts": {
            "景点推荐": "请你按照python list的格式，抓取模型回复中，给出的景点推荐部分，只需要景点，不需要内容。比如[\"都江堰水利工程\", \"灌县古城墙\", \"安澜索桥\", \"玉垒山\", \"灌县署\"]",
            "文案内容": "请你按照python list的格式，抓取模型所有的文案内容，但是删掉那些非文案内容的信息(非文案内容的信息比如:当然可以，以下是我为你生成的信息:)只保留文案本身的内容，比如[\"交通路线规划:\n- **第一天**:上午游览都江堰水利工程，下午前往南桥、安澜索桥，傍晚时分可登玉垒山拍照。\n- **第二天**:上午参观二王庙，下午根据个人兴趣选择在古城内其他景点自由拍照。\n\n以上路线适合自驾或公共交通，如乘坐公交或打车前往各个景点。请注意，部分步道可能需要步行，建议穿着舒适的鞋子。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否推荐了熊猫基地里适合拍照的景点",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐景点数量是否为9个？",
                "rule": "item_count:[9,9]",
                "corresponding_part": "景点推荐",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否规划了景点之间的交通路线",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文章是否用是用繁体写的",
                "rule": "fanti",
                "corresponding_part": "文案内容",
                "dep": [
                    0
                ],
                "能力项": "繁体约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请根据以下有关职场的内容编写选择题，题目是关于每行内容的真实含义，要求编写2个正确答案和3个幽默搞笑的错误答案。用表格的形式输出题目和答案\n\"月薪一千五，命比咖啡苦\"",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目(带选项)，不需要输出正确答案。比如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "正确答案": "请你按照python list的形式，将model_response中生成的正确答案分割并提取出来。只需要输出正确答案，不需要输出题目。只需要输出答案的内容。",
            "错误答案": "请你按照python list的形式，将model_response中生成的错误答案分割并提取出来。只需要输出错误答案，不需要输出题目。只需要输出答案的内容。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "选择题题目是否和#月薪一千五，命比咖啡苦#相关",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了2个正确答案",
                "corresponding_part": "正确答案",
                "rule": "item_count: [2, 2]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了3个错误答案",
                "corresponding_part": "错误答案",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否用表格的形式输出题目和答案",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成20条批判性评论，避免重复。要求1:必须比原文长。要求2:必须存在关键词\"\"尴尬\", \"噪音\"\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "#CODE#请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了20条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[20,20]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否比原文长",
                "corresponding_part": "评论",
                "rule": "each_length:[57,100000]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否存在关键词\"\"尴尬\", \"噪音\"\"",
                "corresponding_part": "评论",
                "rule": "keywords:[\"尴尬\", \"噪音\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇3分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照9个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【中国】必须刚好出现7次。关键词【他】出现必须不超过7次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇3分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[450, 900]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照9个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "中国是否出现7次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq7:[\"中国\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "他是否不出现超过7次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq7:[\"他\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请输出3条不包含具体行业品类特征，主题为好评零售店铺推荐的推送文案，标题和内容需要有强关联。标题10字，标点符号格式不限制。内容格式为:推荐语+店铺名+推荐语，推荐语不可包含限时、折扣、优惠等涉及具体优惠和时间数量限制的要素。推送文案风格贴近生活、活泼、快乐、热情，文案的内容不能出现“\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"”，且内容不超过50个字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于推送文案的标题分割并提取出来。不需要提取“标题:”，只需要提取标题的内容，比如:[\"好评如潮\",\"品质掌声\",\"星级体验\",\"买家心选\",\"口口相传\",\"绝佳选择\",\"悦心好物\",\"精挑细选\",\"信赖有理\",\"买家首选\"]",
            "内容": "请你按照python list的形式，将model_response中生成的关于推送文案的内容分割并提取出来。不需要提取“内容:”，只需要提取内容的内容，比如:[\"口碑爆棚，「好评精选」，每一次购物都满意！\",\"质量赢得掌声，「品质之选」，让信赖成为习惯！\",\"服务赢五星，「星级好店」，体验超出期待！\",\"买家心头好，「人气之店」，每一次都惊喜连连！\",\"老顾客力荐，「传奇好货」，买过的人都说好！\",\"选择有品味，「绝佳精品」，每一件都是精选！\",\"好物温暖人心，「悦心收藏」，让心情随之愉悦！\",\"细心挑选，「精选好物」，只为你的优雅生活！\",\"信赖来自品质，「理想选择」，让满意成为常态！\",\"首选不负期待，「首选精品」，每次购物都是享受！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推送文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了3条推送文案",
                "corresponding_part": "标题",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推送文案的主题是否为好评零售店铺推荐",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推送文案的标题是否为10字",
                "corresponding_part": "标题",
                "rule": "each_length:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "推送文案的内容格式是否为:推荐语+店铺名+推荐语",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "推送文案的推荐语是否不包含限时、折扣、优惠等涉及具体优惠和时间数量限制的要素",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "推送文案的内容是否不包含“\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"”",
                "corresponding_part": "内容",
                "rule": "non_keyword: [\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "推送文案的内容是否不超过50个字",
                "corresponding_part": "内容",
                "rule": "each_length:[1,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的7方向分别取7个名字（中文名字，6个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"数\", \"智\", \"云\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了49个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[49,49]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为6个字",
                "corresponding_part": "名字",
                "rule": "each_length: [6,6]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"数\", \"智\", \"云\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"数\", \"智\", \"云\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请为我创作50个面向{打工人}的{火锅}广告文案，每个文案不超过40个字，店铺位于{写字楼/园区}附近，请挖掘出结合{打工人}与(火锅)特点，突出{打工人}所需要的特点，如上班族需要短暂放松，学生党需要新奇与优惠等，在文案中进行体现。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "文案": "#CODE#请你用去除非文案的所有信息后，分割并输出所有模型生成的文案，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型是否生成了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了50个面向打工人的火锅广告文案",
                "corresponding_part": "文案",
                "rule": "item_count: [50, 50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个文案是否不超过40个字",
                "corresponding_part": "文案",
                "rule": "each_length:[1,40]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否提到了打工人？",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否所有文案都提到写字楼和园区",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在搬家短视频的评论区，生成80条用户口语化评论，评论不能出现“老板”，“团队”，“服务”；每条20到25字，每条评论格式独一无二\n备注:字数只计中文字符",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了搬家的用户口语化评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了80条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [80, 80]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否不出现“老板”，“团队”，“服务”",
                "corresponding_part": "用户口语化评论",
                "rule": "non_keywords:[\"老板\",\"团队\",\"服务\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论是否每条在20到25字之间",
                "corresponding_part": "用户口语化评论",
                "rule": "each_length:[20,25]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "评论是否每条格式独一无二",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇1分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照5个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【邓稼先】必须刚好出现5次。关键词【的】出现必须不超过5次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇1分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[150, 300]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照5个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "邓稼先是否出现5次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq5:[\"邓稼先\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "的是否不出现超过5次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq5:[\"的\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论10字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为4条",
                "corresponding_part": "长评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为6条",
                "corresponding_part": "短评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "现在比如你是要报考北京航空航天大学的非全日制mpa专业，目前在复试中。你的个人资料是，本科毕业，毕业院校西北农林大学，主要工作经历，凯叔讲故事，粉笔考公，岗位为产品运营。你要回答这些问题，使用中文，每个问题给出5种不同的回答\n##1、你工作这么忙，怎么处理工作和学业的平衡\n##2、我们学校的MPA对你现在的工作有什么帮助\n##3、我们学校的MPA对你未来实现职业目标有什么帮助\n##4、如果这次没有录取你怎么办",
        "corresponding_parts": {
            "问题1回答": "请你按照python list的形式，将model_response中的回应#1、你工作这么忙，怎么处理工作和学业的平衡#的回答分割并提取出来。按照以下格式: [\"【回答内容1】\",\"【回答内容2】\",\"【回答内容3】\",\"【回答内容4】\",\"【回答内容5】\"]",
            "问题2回答": "请你按照python list的形式，将model_response中的回应#2、我们学校的MPA对你现在的工作有什么帮助#的回答分割并提取出来。按照以下格式: [\"【回答内容1】\",\"【回答内容2】\",\"【回答内容3】\",\"【回答内容4】\",\"【回答内容5】\"]",
            "问题3回答": "请你按照python list的形式，将model_response中的回应#3、我们学校的MPA对你未来实现职业目标有什么帮助#的回答分割并提取出来。按照以下格式: [\"【回答内容1】\",\"【回答内容2】\",\"【回答内容3】\",\"【回答内容4】\",\"【回答内容5】\"]",
            "问题4回答": "请你按照python list的形式，将model_response中的回应#4、如果这次没有录取你怎么办#的回答分割并提取出来。按照以下格式: [\"【回答内容1】\",\"【回答内容2】\",\"【回答内容3】\",\"【回答内容4】\",\"【回答内容5】\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了关于如何处理工作和学业平衡的问题的回答",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了关于如何处理工作和学业平衡问题的5种不同回答",
                "corresponding_part": "问题1回答",
                "rule": "item_count: [5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了关于学校的MPA对当前工作帮助的问题的回答",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "是否给出了关于学校的MPA对当前工作帮助问题的5种不同回答",
                "corresponding_part": "问题2回答",
                "rule": "item_count: [5, 5]",
                "dep": [
                    2
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否给出了关于学校的MPA对未来实现职业目标帮助的问题的回答",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 5,
                "question": "是否给出了关于学校的MPA对未来实现职业目标帮助问题的5种不同回答",
                "corresponding_part": "问题3回答",
                "rule": "item_count: [5, 5]",
                "dep": [
                    4
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了关于如果没有录取怎么办的问题的回答",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 7,
                "question": "是否给出了关于如果没有录取怎么办问题的5种不同回答",
                "corresponding_part": "问题4回答",
                "rule": "item_count: [5, 5]",
                "dep": [
                    6
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的3方向分别取3个名字（中文名字，5个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"云\", \"汇\", \"数\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了9个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[9,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为5个字",
                "corresponding_part": "名字",
                "rule": "each_length: [5,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"云\", \"汇\", \"数\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"云\", \"汇\", \"数\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你好，帮我写一段“盆满钵满奖”的推荐理由，有关于挣钱最多的，需要搞笑风格，押韵的。3句共10字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "推荐理由": "请你按照python list的格式，抓取模型回复中，给出的押韵搞笑推荐理由的内容，按照标点符号分开输出，例如: [\"盆满钵满奖，不只是钱满满，更是笑声和幸福，永远在线！\", \"在挣钱的道路上，他/她是个狂飙的赛车手，每次收入进账，就像打了个大大的满贯球。\", \"他/她的钱堆积如山，比豆芽还要快速发芽，账户的数字跳跃，像小兔子一样欢快地蹦跳。\", \"他/她的金库，比蜜蜂的蜂巢还要甜，每天的工资，像是不停下雨的天。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推荐理由",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐理由是否关于挣钱最多",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推荐理由是否押韵",
                "corresponding_part": "推荐理由",
                "rule": "yayun",
                "dep": [
                    0
                ],
                "能力项": "押韵",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推荐理由是否为10字",
                "corresponding_part": "推荐理由",
                "rule": "total_length:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "推荐理由是否为3句",
                "corresponding_part": "推荐理由",
                "rule": "item_count:[3,3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在教育短视频的评论区，以消费者角度生成50条用户口语化评论。",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的内容是否为评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [50, 50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否符合教育短视频的评论",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请根据以下内容命制3个单选题，3个多选题，多选题和单选题要分开输出并标明。考题需要满足广泛性和群众性，注意格式，我要复制到表格里面，要有正确答案内容如下:网约配送员职业守则\n1.\t遵纪守法，服务社会\n遵守国家有关法律法规和企业的规章制度，尊重自己的职业，尊重每一个自己所服务的客户。\n2.\t着装整洁，礼貌文明\n保持个人卫生，统一着装，整洁干净。对待客户礼貌热情，亲切诚恳，想尽办法解决顾客的问题，耐心周到，无微不至。\n3.\t团结协作，勤奋务实\n虚心听取他人意见，具有良好的团队意识，善于与人共事，团结合作，创造和谐向上的氛围，脚踏实地，尽职尽责。\n4.\t保守秘密，确保安全\n熟悉工作纪律，工作中保护客户隐私。遵守安全规则，确保网约配送过程中的商品安全以及自身安全。单选题目内不能出现“\"非法\", \"违纪\", \"失职\", \"违规\", \"泄密\", \"不安全\"”，多选题目内不能出现“\"防静电\", \"全部\", \"所有\", \"任意\", \"随意\", \"全面\"”",
        "corresponding_parts": {
            "单选题目": "请你按照python list的形式，将model_response中生成的单选题目分割并提取出来。只需要输出单选题目(带选项)，不需要输出正确答案。比如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. 小尼姑\"]",
            "单选题答案": "请你按照python list的形式，将model_response中生成的单选题答案分割并提取出来。只需要输出单选题答案，不需要输出题目。只需要输出答案的内容。比如[\"百里屠苏\"]",
            "多选题目": "请你按照python list的形式，将model_response中生成的多选题目分割并提取出来。只需要输出多选题目(带选项)，不需要输出正确答案。比如[\"**《延禧攻略》**1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "多选题答案": "请你按照python list的形式，将model_response中生成的多选题答案分割并提取出来。只需要输出多选题答案，不需要输出题目。只需要输出答案的内容。比如[\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了单选题和多选题并分开标注",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否命制了3个单选题",
                "corresponding_part": "单选题目",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否命制了3个多选题",
                "corresponding_part": "多选题目",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个单选考题都有正确答案",
                "corresponding_part": "单选题答案",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个多选考题都有正确答案",
                "corresponding_part": "多选题答案",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "单选题目内是否没有出现“\"非法\", \"违纪\", \"失职\", \"违规\", \"泄密\", \"不安全\"”",
                "corresponding_part": "单选题目",
                "rule": "non_keywords: [\"非法\", \"违纪\", \"失职\", \"违规\", \"泄密\", \"不安全\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "多选题目是否没有出现“\"防静电\", \"全部\", \"所有\", \"任意\", \"随意\", \"全面\"”",
                "corresponding_part": "多选题目",
                "rule": "non_keywords: [\"防静电\", \"全部\", \"所有\", \"任意\", \"随意\", \"全面\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我想策划一个桌游，要求设计9个职业，然后每个职业都要有不同的能力，玩家通过掷骰子选定职业，所有人选完职业以后通过掷骰子选择往某个方向走，最先走完自己那条路的选手获胜，你写一个具体点的策划文档\n",
        "corresponding_parts": {
            "职业": "请你按照python list的形式，将model_response中设计的职业分割并提取出来。只需要提取职业即可，无需提取职业的详细信息，比如[\"骑士\",\"法师\",\"盗贼\",\"猎人\",\"牧师\",\"巫师\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否设计了职业",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否设计了9个职业",
                "corresponding_part": "职业",
                "rule": "item_count: [9, 9]",
                "dep": [
                    0
                ],
                "被依赖": false,
                "能力项": "单元数量合规"
            },
            {
                "point_id": 2,
                "question": "每个职业是否都有不同的能力",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否设计了玩家通过掷骰子选定职业的机制",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否设计了最先走完自己那条路的选手获胜的胜利条件",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论15字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为15条",
                "corresponding_part": "长评论",
                "rule": "item_count:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为15条",
                "corresponding_part": "短评论",
                "rule": "item_count:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论10字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为4条",
                "corresponding_part": "长评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为6条",
                "corresponding_part": "短评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请根据以下内容命制5个单选题，4个多选题，多选题和单选题要分开输出并标明。考题需要满足广泛性和群众性，注意格式，我要复制到表格里面，要有正确答案内容如下:网约配送员职业守则\n1.\t遵纪守法，服务社会\n遵守国家有关法律法规和企业的规章制度，尊重自己的职业，尊重每一个自己所服务的客户。\n2.\t着装整洁，礼貌文明\n保持个人卫生，统一着装，整洁干净。对待客户礼貌热情，亲切诚恳，想尽办法解决顾客的问题，耐心周到，无微不至。\n3.\t团结协作，勤奋务实\n虚心听取他人意见，具有良好的团队意识，善于与人共事，团结合作，创造和谐向上的氛围，脚踏实地，尽职尽责。\n4.\t保守秘密，确保安全\n熟悉工作纪律，工作中保护客户隐私。遵守安全规则，确保网约配送过程中的商品安全以及自身安全。",
        "corresponding_parts": {
            "单选题目": "请你按照python list的形式，将model_response中生成的单选题目分割并提取出来。只需要输出单选题目(带选项)，不需要输出正确答案。比如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. 为落英\"]",
            "单选题答案": "请你按照python list的形式，将model_response中生成的单选题答案分割并提取出来。只需要输出单选题答案，不需要输出题目。只需要输出答案的内容。比如[\"百里屠苏\"]",
            "多选题目": "请你按照python list的形式，将model_response中生成的多选题目分割并提取出来。只需要输出多选题目(带选项)，不需要输出正确答案。比如[\"**《延禧攻略》**1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "多选题答案": "请你按照python list的形式，将model_response中生成的多选题答案分割并提取出来。只需要输出多选题答案，不需要输出题目。只需要输出答案的内容。比如[\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了单选题和多选题并分开输出并标注",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否命制了5个单选题",
                "corresponding_part": "单选题目",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否命制了4个多选题",
                "corresponding_part": "多选题目",
                "rule": "item_count: [4, 4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个单选考题都有正确答案",
                "corresponding_part": "单选题答案",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个多选考题都有正确答案",
                "corresponding_part": "多选题答案",
                "rule": "item_count: [4, 4]",
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论10字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为8条",
                "corresponding_part": "长评论",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为12条",
                "corresponding_part": "短评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我想50个全国篮球比赛的口号，国内篮球赛事上没有用过的，口号需要洗脑和足够热血，要求篮球和新起航，篇章结合可带有篮字谐音短句\n字数必须是14个字的。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "口号": "#CODE#请你按照python list的格式，抓取模型回复中，分割并给出的口号部分，只需要口号，不需要内容。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了全国篮球比赛的口号",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了50个口号",
                "corresponding_part": "口号",
                "rule": "item_count:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个口号都可以带有篮字谐音短句",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个口号字数必须是14个字",
                "corresponding_part": "口号",
                "rule": "each_length:[14,14]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确、多对象",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我想策划一个桌游，要求设计5个职业，然后每个职业都要有不同的能力，玩家通过掷骰子选定职业，所有人选完职业以后通过掷骰子选择往某个方向走，最先走完自己那条路的选手获胜，你写一个具体点的策划文档\n",
        "corresponding_parts": {
            "职业": "请你按照python list的形式，将model_response中设计的职业分割并提取出来。只需要提取职业即可，无需提取职业的详细信息，比如[\"骑士\",\"法师\",\"盗贼\",\"猎人\",\"牧师\",\"巫师\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否设计了职业",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否设计了5个职业",
                "corresponding_part": "职业",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "被依赖": false,
                "能力项": "单元数量合规"
            },
            {
                "point_id": 2,
                "question": "每个职业是否都有不同的能力",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否设计了玩家通过掷骰子选定职业的机制",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否设计了最先走完自己那条路的选手获胜的胜利条件",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "如何区分花粉过敏和感冒请以以上主题帮我输出分别输出9条标题+文案，标题文案需要具有吸引力，必须加表情符号等。标题在10字以内，文案在50字以内。例如:标题:春季花粉过敏高峰期到！🌸文案:👀四招教你区分花粉过敏和感冒，标题不能存在“\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"”\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的标题分割并提取出来，只提取标题，不提取文案。不需要提取“标题:”，只提取内容即可，比如:[\"感冒还是花粉过敏？\", \"春季过敏季，你准备好了吗？\"]",
            "文案": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的文案分割并提取出来，只提取文案，不提取标题。不需要提取“文案:”，只提取内容即可，比如:[\"了解两者差别，告别困惑！\", \"学会辨别花粉过敏和感冒，健康过春天！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了9条标题",
                "corresponding_part": "标题",
                "rule": "item_count: [9, 9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了9条文案",
                "corresponding_part": "文案",
                "rule": "item_count: [9, 9]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个标题是否在10字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每条文案是否在50字以内",
                "corresponding_part": "文案",
                "rule": "each_length:[1,50]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "标题是否加了表情符号",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文案是否加了表情符号",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "标题是否不出现“\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"”字",
                "corresponding_part": "标题",
                "rule": "non_keyword: [\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在旅行探险短视频的评论区，生成60条用户口语化评论，评论不能出现\"探险\", \"旅游\", \"景点\"",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了旅行探险的用户口语化评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了60条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [60, 60]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否不出现\"\"探险\", \"旅游\", \"景点\"\"",
                "corresponding_part": "用户口语化评论",
                "rule": "non_keywords:[\"探险\", \"旅游\", \"景点\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你是一位中医养生与全国美食专家，请你查阅互联网上的资料，并根据中国八大菜系中的菜品与日常的小吃与中西方的快餐，对如下的问题给出能够满足用户需求的9条菜品名，每个菜品名必须为刚好3个字:\n1）胃痛适合吃什么？\n每个菜品后都必须紧跟菜品的解释。请你再次注意，回答的菜品应是各地的菜系中的菜品与日常的小吃与中西的快餐中的菜品，菜品名请尽可能具体，请不要虚构不存在的菜品，这对我很重要，请你反复思考后再作答。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "菜品名": "请你按照python list的形式，将model_response中的菜品名分割并提取出来。无需提取解释只需提取菜名[\"清蒸鱼\",\"白切鸡\",\"粥\",\"煮鸡胸肉\",\"清蒸豆腐\",\"烤鱼片\",\"清炖鸡汤\",\"清蒸蔬菜包\",\"煮蔬菜汤\",\"清炒菜心\",\"清炒豆腐丝\",\"煮青菜\",\"红烧茄子\",\"煮豆腐\",\"清蒸蔬菜\",\"炒豆芽\",\"炒青菜\",\"红烧鸡翅\",\"酸辣土豆丝\",\"香煎鸡胸肉\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了菜品名",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了9条菜品名",
                "corresponding_part": "菜品名",
                "rule": "item_count: [9, 9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个菜品后是否都紧了菜品的解释",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "菜品名是否都是刚好3个字",
                "corresponding_part": "菜品名",
                "rule": "each_length:[3,3]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确、多对象",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "1、你将担任资深数据仓库专家的角色\n2、你将提供给我3个数据仓库建设的面试问题，并提供对应的标准答案\n3、答案不用长篇大论，按照面试的场景进行精确提供   \n4、问题难度从低到高\n5、对于我不理解的，我会拿对应的问题问你，你给出对应的解释即可\n6、问题的内容包括但不限于Hadoop、Spark、Flink，Doris、Mysql、OLAP技术、数据接入、数据建模、数仓分层、数据治理等知识体系\n7、针对已知的问题，我将提示你哪些是已经提过的，你将重新生产新的问题补充已提过的问题",
        "corresponding_parts": {
            "面试问题": "请你按照python list的形式，将model_response中生成的面试问题分割并提取出来。只需要输出问题，不需要输出答案。",
            "答案": "请你按照python list的形式，将model_response中生成的答案分割并提取出来。只需要输出答案，不需要输出问题。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了关于数仓的面试问题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了3个数据仓库建设的面试问题",
                "corresponding_part": "面试问题",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了3个数据仓库建设的面试问题的答案",
                "corresponding_part": "答案",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "问题内容是否包括但不限于Hadoop、Spark、Flink，Doris、Mysql、OLAP技术、数据接入、数据建模、数仓分层、数据治理等知识体系",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我生成3道搞笑知识4项单选题，题目要求:热门影视剧、电影相关、题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；整道题目（包括选项）在100个字以内，选项在20个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目，不需要输出答案。例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "选项": "请你按照python list的形式，将model_response中生成的所有选项分割并提取出来。只需要输出选项，不需要输出题目。别输出前缀例如“A.”, “B.”，例如['打针', '做手术', '被骂', '失去爱情', '法拉利', '兰博基尼', '道奇', '奔驰', '周星星', '周星期', '周星辰', '周星驰', '圆形', '方形', '心形', '三角形', '跑车', '卡车', '摩托车', '飞机', '歌手', '警察', '厨师', '画家', '陀螺', '骰子', '扑克牌', '指南针', '红酒', '伏特加', '朗姆酒', '啤酒', '秒表', '日历', '沙漏', '计算器', '篮球', '足球', '乒乓球', '长跑', '牛魔王', '孙悟空', '猪八戒', '沙僧', '麻将', '扑克', '象棋', '飞行棋', '超人飞翔', '神龙摆尾', '白鹤亮翅', '泰坦尼克', '音乐课', '美术课', '体育课', '数学课']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了3道搞笑知识4项单选题",
                "corresponding_part": "题目",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "题目是否与热门影视剧、电影相关",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "题目是否在100个字以内",
                "corresponding_part": "题目",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "选项是否在20个字以内",
                "corresponding_part": "选项",
                "rule": "each_length:[1,20]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是一个文案工作者，需要给一个老黄历写文案，包括两部分，一部分是今天适合做的事，另一部分是今天不适合做的事，几组参考的文案与格式如下，你需要按照参考的格式与风格继续生成2组，每组都包括5个2字词语（适宜做的事）和5个2字词语（忌讳做的事），给你的例子仅供参考，你可以发挥联想多做扩充，每一组的文案尽量不要有重复:1）宜散步 摸鱼……，忌焦虑 攀比……；2）宜打盹 追剧……，忌加班 内卷……；3）宜健身 懒觉……，忌紧张 不安……；4）宜跑步 读书……，忌冲动 上头……；5）宜做饭 冥想……，忌糊涂 大意……；6）宜记账 复盘，忌偷懒 推诿……；7）……",
        "corresponding_parts": {
            "文案": "请你按照python list的形式，将生成的文案按照类似[\"宜散步 摸鱼，忌焦虑 攀比\", \"宜打盹 追剧，忌加班 内卷\", \"宜健身 懒觉，忌紧张 不安\", \"宜跑步 读书，忌冲动 上头\", \"宜做饭 冥想，忌糊涂 大意\"]的格式分割并输出。",
            "事": "请你按照python list的形式，将model_response中所有适宜和忌讳做的事全部分割提取出来，不需要加前面的#宜#或者#忌#以最小的单位来输出，一个element内不要放超过一个事。比如[\"散步\",\"摸鱼\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了2组文案",
                "corresponding_part": "文案",
                "rule": "item_count:[2,2]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每组文案是否包括5个适宜做的事",
                "corresponding_part": "文案",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每组文案是否包括5个忌讳做的事",
                "corresponding_part": "文案",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "文案是否没有重复",
                "corresponding_part": "事",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我扩充润色”他有什么代表作嘛“这句话，生成80条评论，用于明星类目短视频。每条评论不能超过20个字。不能出现\"\"他\", \"有\"\"字\n备注:字数只计中文字符",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否扩充润色了'他有什么代表作嘛'这句话，并生成了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了80条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[80,80]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每条评论不超过20个字",
                "corresponding_part": "评论",
                "rule": "each_length:[1,20]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每条评论不包含\"\"他\", \"有\"\"字",
                "corresponding_part": "评论",
                "rule": "non_keywords:[\"他\", \"有\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论15字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为8条",
                "corresponding_part": "长评论",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为12条",
                "corresponding_part": "短评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "写7组喜庆有财气的春联，每联20个字，上联后三个字“跃新岁”， 下联后三个字“卧春风”，要有文采，不要太俗，把上下联标注:比如:上联:瑞雪兆丰年，金鸡报晓跃新岁。下联:红梅迎春到，银鼠送福卧春风\n备注:字数只计中文字符",
        "corresponding_parts": {
            "春联": "请你按照python list的形式，将model_response中的春联分割并提取出来，一个element内需要有上联+下联。比如:[\"瑞雪兆丰年，金鸡报晓跃新岁。红梅迎春到，银鼠送福卧春风\"]",
            "上联": "请你按照python list的形式，将model_response中的上联分割并提取出来。比如:[\"瑞雪兆丰年，金鸡报晓跃新岁\"]",
            "下联": "请你按照python list的形式，将model_response中的下联分割并提取出来。比如:[\"红梅迎春到，银鼠送福卧春风\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了春联且每副春联是否有上联和下联且上下联都有明确标注",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否写了7组春联",
                "corresponding_part": "春联",
                "rule": "item_count:[7,7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每副春联的上联是否为20个字",
                "corresponding_part": "上联",
                "rule": "each_length:[20,20]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每副春联的下联是否为20个字",
                "corresponding_part": "下联",
                "rule": "each_length:[20,20]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每副春联的上联后三个字是否为“跃新岁”",
                "corresponding_part": "上联",
                "rule": "endswith_each:[\"跃新岁\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每副春联的下联后三个字是否为“卧春风”",
                "corresponding_part": "下联",
                "rule": "endswith_each:[\"卧春风\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的9方向分别取9个名字（中文名字，4个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"云\", \"汇\", \"数\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了81个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[81,81]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为4个字",
                "corresponding_part": "名字",
                "rule": "each_length: [4,4]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"云\", \"汇\", \"数\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"云\", \"汇\", \"数\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "如何区分花粉过敏和感冒请以以上主题帮我输出分别输出3条标题+文案，标题文案需要具有吸引力，必须加表情符号等。标题在15字以内，文案在80字以内。例如:标题:春季花粉过敏高峰期到！🌸文案:👀四招教你区分花粉过敏和感冒\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的标题分割并提取出来，只提取标题，不提取文案。不需要提取“标题:”，只提取内容即可，比如:[\"感冒还是花粉过敏？\", \"春季过敏季，你准备好了吗？\"]",
            "文案": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的文案分割并提取出来，只提取文案，不提取标题。不需要提取“文案:”，只提取内容即可，比如:[\"了解两者差别，告别困惑！\", \"学会辨别花粉过敏和感冒，健康过春天！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了3条标题",
                "corresponding_part": "标题",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了3条文案",
                "corresponding_part": "文案",
                "rule": "item_count: [3, 3]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个标题是否在15字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、范围、多对象",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每个文案是否在80字以内",
                "corresponding_part": "文案",
                "rule": "each_length:[1,80]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "标题是否加了表情符号",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文案是否加了表情符号",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "emoji",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是一个规划游玩路线的达人，且写攻略的用词精简并能凸显景点特色。你能帮我推荐乌苏古镇里9个适合拍照的景点么？并且规划一下景点之间的交通路线。文章必须用繁体写。请注意，每个字都必须是繁体，不能存在简体的字\n\n",
        "corresponding_parts": {
            "景点推荐": "请你按照python list的格式，抓取模型回复中，给出的景点推荐部分，只需要景点，不需要内容。比如[\"都江堰水利工程\", \"灌县古城墙\", \"安澜索桥\", \"玉垒山\", \"灌县署\"]",
            "文案内容": "请你按照python list的格式，抓取模型所有的文案内容，但是删掉那些非文案内容的信息(非文案内容的信息比如:当然可以，以下是我为你生成的信息:)只保留文案本身的内容，比如[\"交通路线规划:\n- **第一天**:上午游览都江堰水利工程，下午前往南桥、安澜索桥，傍晚时分可登玉垒山拍照。\n- **第二天**:上午参观二王庙，下午根据个人兴趣选择在古城内其他景点自由拍照。\n\n以上路线适合自驾或公共交通，如乘坐公交或打车前往各个景点。请注意，部分步道可能需要步行，建议穿着舒适的鞋子。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否推荐了乌苏古镇里适合拍照的景点",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "推荐景点数量是否为9个？",
                "rule": "item_count:[9,9]",
                "corresponding_part": "景点推荐",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否规划了景点之间的交通路线",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "文章是否用是用繁体写的",
                "rule": "fanti",
                "corresponding_part": "文案内容",
                "dep": [
                    0
                ],
                "能力项": "繁体约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在美团外卖神券短视频的评论区，以消费者角度生成180条用户口语化评论。每条评论为10个字，不允许重复。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的内容是否为美团外卖神券的评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了180条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [180, 180]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "所有评论是否为10个字",
                "corresponding_part": "用户口语化评论",
                "rule": "each_length:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论是否不重复",
                "corresponding_part": "用户口语化评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在美团外卖神券短视频的评论区，以消费者角度生成50条用户口语化评论。每条评论为14个字，不允许重复。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的内容是否为美团外卖神券的评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [50, 50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "所有评论是否为14个字",
                "corresponding_part": "用户口语化评论",
                "rule": "each_length:[14,14]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论是否不重复",
                "corresponding_part": "用户口语化评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "古剑奇谭、延禧攻略各5道4项单选题，题目要求:题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；题目在80个字以内，选项在15个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "古剑奇谭题目": "请你按照python list的形式，将model_response中生成的古剑奇谭题目分割并提取出来。只需要输出题目，不需要输出答案。别输出延禧攻略的内容，例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "古剑奇谭选项": "请你按照python list的形式，将model_response中生成的古剑奇谭选项分割并提取出来。只需要输出选项，不需要输出题目。别输出延禧攻略的内容，也不要输出前缀例如“A.”, “B.”，例如[\"百里屠苏\",\"风晴雪\",\"夏夷则\",\"欧阳少恭\"]",
            "延禧攻略题目": "请你按照python list的形式，将model_response中生成的延禧攻略题目分割并提取出来。只需要输出题目，不需要输出答案。别输出古剑奇谭的内容，例如[\"1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "延禧攻略选项": "请你按照python list的形式，将model_response中生成的延禧攻略选项分割并提取出来。只需要输出选项，不需要输出题目。别输出古剑奇谭的内容，也不要输出前缀例如“A.”, “B.”，例如[\"魏璎珞\",\"魏璎珞\",\"魏璎珞\",\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了延禧攻略的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了古剑奇谭的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了古剑奇谭的5道4项单选题",
                "corresponding_part": "古剑奇谭题目",
                "rule": "item_count: [5, 5]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "古剑奇谭的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "古剑奇谭的题目是否在80个字以内",
                "corresponding_part": "古剑奇谭题目",
                "rule": "each_length:[1,80]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "古剑奇谭的选项是否在15个字以内",
                "corresponding_part": "古剑奇谭选项",
                "rule": "each_length:[1,15]",
                "dep": [
                    1
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了延禧攻略的5道4项单选题",
                "corresponding_part": "延禧攻略题目",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "延禧攻略的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "延禧攻略的题目是否在80个字以内",
                "corresponding_part": "延禧攻略题目",
                "rule": "each_length:[1,80]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "延禧攻略的选项是否在15个字以内",
                "corresponding_part": "延禧攻略选项",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对电影类目内容进行评论，根据以下内容进行扩充润色，生成50条评论，语言需要简洁，尽可能接近真人的语气，避免重复，并且不能包含任何敏感信息，末尾不带标点符号",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型是否生成了电影类目的评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论末尾是否不带标点符号",
                "corresponding_part": "评论",
                "rule": "no_end_with_punctuation",
                "dep": [
                    0
                ],
                "能力项": "符号",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "现在你是深圳大学官方公众号的新媒体小编，需要出一篇关于2025年的新年祝福集合推送，请撰写 180 条关于龙年的新年祝福话语，每句话为正好30字上下。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "新年祝福话语": "#CODE#请你按照python list的格式，抓取模型回复中，给出的新年祝福话语部分并分割输出，请不要去重，例如:['1. 龙腾盛世迎新春，福满人间好运来！', '2. 龙年到来喜洋洋，万事如意笑开颜。']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了龙年的新年祝福话语",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否撰写了180条的新年祝福话语",
                "corresponding_part": "新年祝福话语",
                "rule": "item_count:[180,180]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每句话是否正好30字上下",
                "corresponding_part": "新年祝福话语",
                "rule": "each_length:[27,33]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "古剑奇谭、延禧攻略各3道4项单选题，题目要求:题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；题目在100个字以内，选项在4个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "古剑奇谭题目": "请你按照python list的形式，将model_response中生成的古剑奇谭题目分割并提取出来。只需要输出题目，不需要输出答案。别输出延禧攻略的内容，例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "古剑奇谭选项": "请你按照python list的形式，将model_response中生成的古剑奇谭选项分割并提取出来。只需要输出选项，不需要输出题目。别输出延禧攻略的内容，也不要输出前缀例如“A.”, “B.”，例如[\"百里屠苏\",\"风晴雪\",\"夏夷则\",\"欧阳少恭\"]",
            "延禧攻略题目": "请你按照python list的形式，将model_response中生成的延禧攻略题目分割并提取出来。只需要输出题目，不需要输出答案。别输出古剑奇谭的内容，例如[\"1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "延禧攻略选项": "请你按照python list的形式，将model_response中生成的延禧攻略选项分割并提取出来。只需要输出选项，不需要输出题目。别输出古剑奇谭的内容，也不要输出前缀例如“A.”, “B.”，例如[\"魏璎珞\",\"魏璎珞\",\"魏璎珞\",\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了延禧攻略的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了古剑奇谭的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了古剑奇谭的3道4项单选题",
                "corresponding_part": "古剑奇谭题目",
                "rule": "item_count: [3, 3]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "古剑奇谭的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "古剑奇谭的题目是否在100个字以内",
                "corresponding_part": "古剑奇谭题目",
                "rule": "each_length:[1,100]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "古剑奇谭的选项是否在4个字以内",
                "corresponding_part": "古剑奇谭选项",
                "rule": "each_length:[1,4]",
                "dep": [
                    1
                ],
                "能力项": "0～10字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了延禧攻略的3道4项单选题",
                "corresponding_part": "延禧攻略题目",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "延禧攻略的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "延禧攻略的题目是否在100个字以内",
                "corresponding_part": "延禧攻略题目",
                "rule": "each_length:[1,100]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "延禧攻略的选项是否在4个字以内",
                "corresponding_part": "延禧攻略选项",
                "rule": "each_length:[1,4]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇9分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照5个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【科学】必须刚好出现5次。关键词【和】出现必须不超过5次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇9分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1350, 2700]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照5个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "科学是否出现5次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq5:[\"科学\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "和是否不出现超过5次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq5:[\"和\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇7分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照3个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【周年】必须刚好出现4次。关键词【是】出现必须不超过4次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇7分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1050, 2100]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照3个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "周年是否出现4次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq4:[\"周年\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "是是否不出现超过4次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq4:[\"是\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在金融短视频的评论区，以消费者角度生成60条用户口语化评论。",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的内容是否为评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了60条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [60, 60]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否符合金融短视频的评论",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论10字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为4条",
                "corresponding_part": "长评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为6条",
                "corresponding_part": "短评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我生成7道搞笑知识4项单选题，题目要求:热门影视剧、电影相关、题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；整道题目（包括选项）在80个字以内，选项在15个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目，不需要输出答案。例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "选项": "请你按照python list的形式，将model_response中生成的所有选项分割并提取出来。只需要输出选项，不需要输出题目。别输出前缀例如“A.”, “B.”，例如['打针', '做手术', '被骂', '失去爱情', '法拉利', '兰博基尼', '道奇', '奔驰', '周星星', '周星期', '周星辰', '周星驰', '圆形', '方形', '心形', '三角形', '跑车', '卡车', '摩托车', '飞机', '歌手', '警察', '厨师', '画家', '陀螺', '骰子', '扑克牌', '指南针', '红酒', '伏特加', '朗姆酒', '啤酒', '秒表', '日历', '沙漏', '计算器', '篮球', '足球', '乒乓球', '长跑', '牛魔王', '孙悟空', '猪八戒', '沙僧', '麻将', '扑克', '象棋', '飞行棋', '超人飞翔', '神龙摆尾', '白鹤亮翅', '泰坦尼克', '音乐课', '美术课', '体育课', '数学课']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了7道搞笑知识4项单选题",
                "corresponding_part": "题目",
                "rule": "item_count: [7, 7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "题目是否与热门影视剧、电影相关",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "题目是否在80个字以内",
                "corresponding_part": "题目",
                "rule": "each_length:[1,80]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "选项是否在15个字以内",
                "corresponding_part": "选项",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论15字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为15条",
                "corresponding_part": "长评论",
                "rule": "item_count:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为15条",
                "corresponding_part": "短评论",
                "rule": "item_count:[15,15]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "把下方内容梳理一下，分为9个标题段，再完善内容完整度，使得上下文通顺，无错别字:在用户向外卖平台提交退款请求后，该订单将会显示在外卖平台的退单区域。商户需在接到退单通知后及时作出回应。如果在规定时间内未作出处理，外卖平台的系统会自动批准用户的退款请求。\n\n如果商家决定批准退款，用户支付的订单金额将被返还。\n反之，如果商家决定不予退款，用户会收到商家拒绝退款的通知。此时，用户有权申请客服介入进行仲裁。一旦进入仲裁流程，客服将在24小时内给出终审结果，该结果将作为订单的最终处理依据。\n\n系统通常会展示最近10天内的退单记录。\n\n案例分析:妥善处理退款订单也能赢得顾客的高度评价\n小王是一家公司的软件工程师，最近因为公司即将举行的大型促销活动而忙得焦头烂额。为了节省宝贵的时间，他通过美团分别在两家店铺订购了一份蛋炒饭和一杯咖啡。\n\n这两份订单恰巧被同一位骑手接下，但由于中午高峰时段订单激增，骑手在忙乱中将食物送至小王公司设定的公共取餐处，却遗忘了通知小王取餐。\n埋头工作的小王等到两个小时后才意识到他的外卖订单，当他看到外卖已送达的通知，急忙跑到取餐点，却发现自己的餐食已经不见了。\n饥饿加上心烦意乱的小王并没有联系骑手，而是直接向两家店铺打电话请求退款，结果收到了两种不同的回应。\n\n蛋炒饭的店主李老板在接到小王电话后，礼貌地向小王解释道:“这是骑手的失误，请您直接联系平台客服处理退款事宜。”而咖啡店的老板小陈则提供了不同的处理方式:“非常抱歉造成了这种不便，您可以直接在订单上申请退款，我会立即为您处理。”\n\n面对相同的退款情况，两位店主采取了不同的处理措施，收到的反响也有所不同。直接协助顾客处理退款的咖啡店老板小陈，不久后惊喜地在店铺系统中看到了一条五星好评。从好评的内容和评价日期来看，正是小王在重新下单后所留下的。\n\n而李老板虽然礼貌地指引小王联系平台客服处理退款，但没有像小陈那样直接提供解决方案，这可能影响了顾客的整体满意度。\n\n在午高峰时段，订单量激增往往导致一些不可避免的异常订单出现，这时候商家就需要掌握异常订单的高效处理策略。\n\n由于线上外卖缺乏堂食的直接服务体验，顾客与商家之间的情感互动较为有限。然而，上述两个商家展现的不同处理方法，却为顾客小王带来了截然不同的“情感体验”。\n\n李老板处理蛋炒饭订单的方式是标准化的，按照既定流程正确地指引顾客解决问题，包括联系客服、申请退款，以及商家最终同意退款并向平台提出索赔。\n\n而咖啡店的小陈则表现出更为积极的处理态度，他在意识到订单异常后立即采取行动，先行为顾客处理退款，随后再向平台申请索赔。尽管两位商家最终都通过平台得到了对顾客损失的赔偿，小陈因为及时解决了顾客的紧急需求而获得了顾客的高度评价。\n\n实际上，许多商家在收到顾客的订单投诉时，往往习惯性地让顾客联系平台客服处理，这一过程可能会引起更多的不确定性。\n\n比如，顾客提供的退款证据可能并不充分，客服需要与商家联系来核实情况，这无疑增加了沟通的环节。一旦订单量增多，商家还需要花费额外的时间回忆订单的具体情况，这样不仅效率低下，还可能带来额外的困扰。\n\n关键在于，处理异常订单的宗旨并不仅仅是判定平台或商家的责任，而是要优先考虑并解决顾客的问题。只有当顾客的权益得到保护，商家和平台的利益才能得到最大化。\n\n因此，面对顾客的异常反馈，商家应在确保自身不受损失的前提下，优先从顾客的角度出发，迅速采取措施解决问题。",
        "corresponding_parts": {
            "标题段": "请你按照python list的形式，将model_response中生成的标题段分割并提取出来。只需要输出标题，不需要输出内容。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题段？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否将内容分为9个标题段",
                "corresponding_part": "标题段",
                "rule": "item_count: [9,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在美食制作短视频的评论区，生成50条用户口语化评论，评论不能出现\"烹饪\", \"食谱\", \"厨艺\"",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了美食制作的用户口语化评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [50, 50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否不出现\"\"烹饪\", \"食谱\", \"厨艺\"\"",
                "corresponding_part": "用户口语化评论",
                "rule": "non_keywords:[\"烹饪\", \"食谱\", \"厨艺\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "如何区分花粉过敏和感冒请以以上主题帮我输出分别输出9条标题+文案，标题文案需要具有吸引力，必须加表情符号等。标题在10字以内，文案在50字以内。例如:标题:春季花粉过敏高峰期到！🌸文案:👀四招教你区分花粉过敏和感冒\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的标题分割并提取出来，只提取标题，不提取文案。不需要提取“标题:”，只提取内容即可，比如:[\"感冒还是花粉过敏？\", \"春季过敏季，你准备好了吗？\"]",
            "文案": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的文案分割并提取出来，只提取文案，不提取标题。不需要提取“文案:”，只提取内容即可，比如:[\"了解两者差别，告别困惑！\", \"学会辨别花粉过敏和感冒，健康过春天！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了9条标题",
                "corresponding_part": "标题",
                "rule": "item_count: [9, 9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了9条文案",
                "corresponding_part": "文案",
                "rule": "item_count: [9, 9]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个标题是否在10字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、范围、多对象",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每个文案是否在50字以内",
                "corresponding_part": "文案",
                "rule": "each_length:[1,50]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "标题是否加了表情符号",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文案是否加了表情符号",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "emoji",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论10字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为5条",
                "corresponding_part": "长评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为5条",
                "corresponding_part": "短评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我想180个全国篮球比赛的口号，国内篮球赛事上没有用过的，口号需要洗脑和足够热血，要求篮球和新起航，篇章结合可带有篮字谐音短句\n字数必须是14个字的。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "口号": "#CODE#请你按照python list的格式，抓取模型回复中，分割并给出的口号部分，只需要口号，不需要内容。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了全国篮球比赛的口号",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了180个口号",
                "corresponding_part": "口号",
                "rule": "item_count:[180,180]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个口号都可以带有篮字谐音短句",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个口号字数必须是14个字",
                "corresponding_part": "口号",
                "rule": "each_length:[14,14]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、精确、多对象",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论15字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为18条",
                "corresponding_part": "长评论",
                "rule": "item_count:[18,18]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为12条",
                "corresponding_part": "短评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我是微信小程序的负责人，这款小程序是用作美团充电宝的运维的，包括了弹出充电宝、去店里补给充电宝，也包含了充电宝机柜的管理，故障机器处理，现在要给一款微信起名字，前几个字已经固定叫“美团充电宝运维”，后面再增加3个字。风格最好简单易懂，看名字就知道这个小程序是做什么的，请给我输出180个微信小程序的名字，无需输出其他内容。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的名字，请不要去重，例如:['1. 美团充宝管', '2. 美团充宝控', '3. 美团充宝管家', '4. 美团充宝助手', '5. 美团充宝管家', '6. 美团充宝运维通', '7. 美团充宝运维宝', '8. 美团充宝运维站', '9. 美团充宝运维帮', '10. 美团充宝运维家', '11. 美团充宝运维站', '12. 美团充宝运维通', '13. 美团充宝运维宝', '14. 美团充宝运维站', '15. 美团充宝运维帮', '16. 美团充宝运维家', '17. 美团充宝运维站', '18. 美团充宝运维通', '19. 美团充宝运维宝', '20. 美团充宝运维站', '21. 美团充宝运维帮', '22. 美团充宝运维家', '23. 美团充宝运维站', '24. 美团充宝运维通', '25. 美团充宝运维宝', '26. 美团充宝运维站', '27. 美团充宝运维帮', '28. 美团充宝运维家', '29. 美团充宝运维站', '30. 美团充宝运维通', '31. 美团充宝运维宝', '32. 美团充宝运维站', '33. 美团充宝运维帮']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了微信小程序的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否列举了180个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[180,180]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个名字是否都是10个字",
                "corresponding_part": "名字",
                "rule": "each_length:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每个名字是否都以#美团充电宝运维#开头",
                "corresponding_part": "名字",
                "rule": "startswith_each:[\"美团充电宝运维\"],",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行扩充润色，生成50条批判性评论，语言需要简洁，尽可能接近真人的语气，避免重复，并且不能包含任何敏感信息:\n演技一般\n编剧水平好差\n造型难看",
        "corresponding_parts": {
            "评论": "#CODE#请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成20条批判性评论，避免重复。要求1:必须比原文长。要求2:必须存在关键词\"\"离谱\", \"辣眼\"\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "#CODE#请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了20条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[20,20]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否比原文长",
                "corresponding_part": "评论",
                "rule": "each_length:[57,100000]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否存在关键词\"\"离谱\", \"辣眼\"\"",
                "corresponding_part": "评论",
                "rule": "keywords:[\"离谱\", \"辣眼\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "如何区分花粉过敏和感冒请以以上主题帮我输出分别输出5条标题+文案，标题文案需要具有吸引力，必须加表情符号等。标题在8字以内，文案在30字以内。例如:标题:春季花粉过敏高峰期到！🌸文案:👀四招教你区分花粉过敏和感冒，标题不能存在“\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"”\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的标题分割并提取出来，只提取标题，不提取文案。不需要提取“标题:”，只提取内容即可，比如:[\"感冒还是花粉过敏？\", \"春季过敏季，你准备好了吗？\"]",
            "文案": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的文案分割并提取出来，只提取文案，不提取标题。不需要提取“文案:”，只提取内容即可，比如:[\"了解两者差别，告别困惑！\", \"学会辨别花粉过敏和感冒，健康过春天！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了5条标题",
                "corresponding_part": "标题",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了5条文案",
                "corresponding_part": "文案",
                "rule": "item_count: [5, 5]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个标题是否在8字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每条文案是否在30字以内",
                "corresponding_part": "文案",
                "rule": "each_length:[1,30]",
                "dep": [
                    1
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "标题是否加了表情符号",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文案是否加了表情符号",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "标题是否不出现“\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"”字",
                "corresponding_part": "标题",
                "rule": "non_keyword: [\"零售店铺推荐\", \"好评\", \"限时\", \"折扣\", \"优惠\", \"逛\", \"大卡\", \"街\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "如何区分花粉过敏和感冒请以以上主题帮我输出分别输出7条标题+文案，标题文案需要具有吸引力，必须加表情符号等。标题在15字以内，文案在80字以内。例如:标题:春季花粉过敏高峰期到！🌸文案:👀四招教你区分花粉过敏和感冒\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的标题分割并提取出来，只提取标题，不提取文案。不需要提取“标题:”，只提取内容即可，比如:[\"感冒还是花粉过敏？\", \"春季过敏季，你准备好了吗？\"]",
            "文案": "请你按照python list的形式，将model_response中生成的关于如何区分花粉过敏和感冒的文案分割并提取出来，只提取文案，不提取标题。不需要提取“文案:”，只提取内容即可，比如:[\"了解两者差别，告别困惑！\", \"学会辨别花粉过敏和感冒，健康过春天！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了7条标题",
                "corresponding_part": "标题",
                "rule": "item_count: [7, 7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了7条文案",
                "corresponding_part": "文案",
                "rule": "item_count: [7, 7]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每个标题是否在15字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、范围、多对象",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "每个文案是否在80字以内",
                "corresponding_part": "文案",
                "rule": "each_length:[1,80]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "标题是否加了表情符号",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "emoji",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "文案是否加了表情符号",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "emoji",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "模仿“商女不知亡国恨，隔江犹唱后庭花”的对称方式和讽刺手法，写一首讽刺当今社会996的加班现象，诗中需包含“\"加班\", \"苦难\"”。每句8字，共9句。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "全部诗句": "请你按照python list的格式，抓取模型回复中，给出的所有诗句，不要分割。",
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"劳者不知身已疲\", \"夜深犹在键盘旁\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一首诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗中是否模仿了“商女不知亡国恨，隔江犹唱后庭花”的对称方式",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "诗中是否包含“\"加班\", \"苦难\"”",
                "corresponding_part": "全部诗句",
                "rule": "keyword:[\"加班\", \"苦难\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "诗中是否为9句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[9,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每句是否为8字",
                "corresponding_part": "分割诗",
                "rule": "each_length:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论10字以内、长评论30到40字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为8条",
                "corresponding_part": "长评论",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为12条",
                "corresponding_part": "短评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在30到40字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[30,40]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "古剑奇谭、延禧攻略各7道4项单选题，题目要求:题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；题目在50个字以内，选项在10个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "古剑奇谭题目": "请你按照python list的形式，将model_response中生成的古剑奇谭题目分割并提取出来。只需要输出题目，不需要输出答案。别输出延禧攻略的内容，例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "古剑奇谭选项": "请你按照python list的形式，将model_response中生成的古剑奇谭选项分割并提取出来。只需要输出选项，不需要输出题目。别输出延禧攻略的内容，也不要输出前缀例如“A.”, “B.”，例如[\"百里屠苏\",\"风晴雪\",\"夏夷则\",\"欧阳少恭\"]",
            "延禧攻略题目": "请你按照python list的形式，将model_response中生成的延禧攻略题目分割并提取出来。只需要输出题目，不需要输出答案。别输出古剑奇谭的内容，例如[\"1. 《延禧攻略》中，魏璎珞的姐姐是谁？A. 魏璎珞B. 魏璎珞C. 魏璎珞D. 魏璎珞\"]",
            "延禧攻略选项": "请你按照python list的形式，将model_response中生成的延禧攻略选项分割并提取出来。只需要输出选项，不需要输出题目。别输出古剑奇谭的内容，也不要输出前缀例如“A.”, “B.”，例如[\"魏璎珞\",\"魏璎珞\",\"魏璎珞\",\"魏璎珞\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了延禧攻略的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了古剑奇谭的选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 2,
                "question": "是否给出了古剑奇谭的7道4项单选题",
                "corresponding_part": "古剑奇谭题目",
                "rule": "item_count: [7, 7]",
                "dep": [
                    1
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "古剑奇谭的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    1
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "古剑奇谭的题目是否在50个字以内",
                "corresponding_part": "古剑奇谭题目",
                "rule": "each_length:[1,50]",
                "dep": [
                    1
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "古剑奇谭的选项是否在10个字以内",
                "corresponding_part": "古剑奇谭选项",
                "rule": "each_length:[1,10]",
                "dep": [
                    1
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "是否给出了延禧攻略的7道4项单选题",
                "corresponding_part": "延禧攻略题目",
                "rule": "item_count: [7, 7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "延禧攻略的答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "延禧攻略的题目是否在50个字以内",
                "corresponding_part": "延禧攻略题目",
                "rule": "each_length:[1,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "延禧攻略的选项是否在10个字以内",
                "corresponding_part": "延禧攻略选项",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇7分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照5个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【科学】必须刚好出现5次。关键词【和】出现必须不超过5次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇7分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[1050, 2100]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照5个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "科学是否出现5次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq5:[\"科学\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "和是否不出现超过5次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq5:[\"和\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我生成9道搞笑知识4项单选题，题目要求:热门影视剧、电影相关、题目有趣有梗、其中一个错误选项和正确选项很相似，较难抉择，有两个错误选项在玩梗；答案显示在题目后面；整道题目（包括选项）在30个字以内，选项在8个字以内\n备注:字数只计中文字符",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目，不需要输出答案。例如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "选项": "请你按照python list的形式，将model_response中生成的所有选项分割并提取出来。只需要输出选项，不需要输出题目。别输出前缀例如“A.”, “B.”，例如['打针', '做手术', '被骂', '失去爱情', '法拉利', '兰博基尼', '道奇', '奔驰', '周星星', '周星期', '周星辰', '周星驰', '圆形', '方形', '心形', '三角形', '跑车', '卡车', '摩托车', '飞机', '歌手', '警察', '厨师', '画家', '陀螺', '骰子', '扑克牌', '指南针', '红酒', '伏特加', '朗姆酒', '啤酒', '秒表', '日历', '沙漏', '计算器', '篮球', '足球', '乒乓球', '长跑', '牛魔王', '孙悟空', '猪八戒', '沙僧', '麻将', '扑克', '象棋', '飞行棋', '超人飞翔', '神龙摆尾', '白鹤亮翅', '泰坦尼克', '音乐课', '美术课', '体育课', '数学课']"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了9道搞笑知识4项单选题",
                "corresponding_part": "题目",
                "rule": "item_count: [9, 9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "题目是否与热门影视剧、电影相关",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "答案是否显示在题目后面",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "题目是否在30个字以内",
                "corresponding_part": "题目",
                "rule": "each_length:[1,30]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "选项是否在8个字以内",
                "corresponding_part": "选项",
                "rule": "each_length:[1,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论10字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为5条",
                "corresponding_part": "长评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为5条",
                "corresponding_part": "短评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你是一位中医养生与全国美食专家，请你查阅互联网上的资料，并根据中国八大菜系中的菜品与日常的小吃与中西方的快餐，对如下的问题给出能够满足用户需求的9条菜品名，每个菜品名必须为刚好5个字:\n1）胃痛适合吃什么？\n每个菜品后都必须紧跟菜品的解释。请你再次注意，回答的菜品应是各地的菜系中的菜品与日常的小吃与中西的快餐中的菜品，菜品名请尽可能具体，请不要虚构不存在的菜品，这对我很重要，请你反复思考后再作答。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "菜品名": "请你按照python list的形式，将model_response中的菜品名分割并提取出来。无需提取解释只需提取菜名[\"清蒸鱼\",\"白切鸡\",\"粥\",\"煮鸡胸肉\",\"清蒸豆腐\",\"烤鱼片\",\"清炖鸡汤\",\"清蒸蔬菜包\",\"煮蔬菜汤\",\"清炒菜心\",\"清炒豆腐丝\",\"煮青菜\",\"红烧茄子\",\"煮豆腐\",\"清蒸蔬菜\",\"炒豆芽\",\"炒青菜\",\"红烧鸡翅\",\"酸辣土豆丝\",\"香煎鸡胸肉\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了菜品名",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了9条菜品名",
                "corresponding_part": "菜品名",
                "rule": "item_count: [9, 9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个菜品后是否都紧了菜品的解释",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "菜品名是否都是刚好5个字",
                "corresponding_part": "菜品名",
                "rule": "each_length:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "1、你将担任资深数据仓库专家的角色\n2、你将提供给我5个数据仓库建设的面试问题，并提供对应的标准答案\n3、答案不用长篇大论，按照面试的场景进行精确提供   \n4、问题难度从低到高\n5、对于我不理解的，我会拿对应的问题问你，你给出对应的解释即可\n6、问题的内容包括但不限于Hadoop、Spark、Flink，Doris、Mysql、OLAP技术、数据接入、数据建模、数仓分层、数据治理等知识体系\n7、针对已知的问题，我将提示你哪些是已经提过的，你将重新生产新的问题补充已提过的问题",
        "corresponding_parts": {
            "面试问题": "请你按照python list的形式，将model_response中生成的面试问题分割并提取出来。只需要输出问题，不需要输出答案。",
            "答案": "请你按照python list的形式，将model_response中生成的答案分割并提取出来。只需要输出答案，不需要输出问题。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了关于数仓的面试问题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了5个数据仓库建设的面试问题",
                "corresponding_part": "面试问题",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了5个数据仓库建设的面试问题的答案",
                "corresponding_part": "答案",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "问题内容是否包括但不限于Hadoop、Spark、Flink，Doris、Mysql、OLAP技术、数据接入、数据建模、数仓分层、数据治理等知识体系",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你是一个擅长生成花名的小助手，生成的花名需要满足下面这几个条件，长度5个汉字，前面两个字是食物，中间一个字是食物的烹饪方式，最后两个字也是食物，不可重复，一共生成 50 个。",
        "corresponding_parts": {
            "花名": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了花名",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否一共生成了50个花名",
                "corresponding_part": "花名",
                "rule": "item_count:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "生成的花名是否长度为5个汉字",
                "corresponding_part": "花名",
                "rule": "each_length:[5,5]",
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "生成的所有花名是否前面两个字全都是食物，不存在不是食物的情况",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "生成的所有花名是否中间一个字全都是食物的烹饪方式，不存则其他情况",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "生成的所有花名是否最后两个字全是食物，没有不是的情况",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "生成的所有花名是否没有重复",
                "corresponding_part": "花名",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我扩充润色“他有什么代表作嘛”这句话，生成50条评论，用于明星类目短视频。",
        "corresponding_parts": {
            "评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否扩充润色了'他有什么代表作嘛'这句话，并生成了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了50条评论",
                "corresponding_part": "评论",
                "rule": "item_count:[50,50]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到老年生活的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论15字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为12条",
                "corresponding_part": "长评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为18条",
                "corresponding_part": "短评论",
                "rule": "item_count:[18,18]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论10字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为18条",
                "corresponding_part": "长评论",
                "rule": "item_count:[18,18]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为12条",
                "corresponding_part": "短评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "现在你是XX官方公众号的新媒体小编，需要出一篇关于新年的新年祝福集合推送，请撰写 5 条关于新年的新年祝福话语，并结合XX相关特色，要求祝福话语有诗意，喜庆且有内涵底蕴",
        "corresponding_parts": {
            "新年祝福话语": "请你按照python list的格式，抓取模型回复中，给出的新年祝福话语部分，只需要新年祝福话语，不需要内容。比如[\"龙腾盛世春，瑞气满深院，愿深圳大学在新的一年里，龙精虎猛，学术研究创新不断，书写属于深大的辉煌篇章。\", \"腾飞的龙年，承载着深大人的梦想与希望，愿我们像龙一样，勇往直前，在知识的海洋中遨游无界。\", \"春风得意马蹄疾，一日看尽长安花。愿深大师生新春伊始，如龙马精神，学业职场两得意。\", \"龙舞新春，瑞光万道，愿深大的校园里，智慧如泉涌，创意如火热，共绘科研新高度。\", \"新年新气象，龙腾祥云映碧空。愿深圳大学的每一位师生，都能龙心凤韵，展翅高飞，追逐梦想。\", \"深大之树，根深叶茂，龙年更显生机。愿我们的学府，如同这棵参天大树，枝繁叶茂，结出硕果累累。\", \"龙年吉祥，春回大地，愿深大的未来，如龙游四海，无论是科研还是学术交流，都能波澜壮阔，声名远扬。\", \"龙回九天，瑞气千条，愿深圳大学师生在新的一年里，才华横溢，龙腾虎跃，创造无限可能。\", \"龙舞新年，喜庆洋洋。愿深大之光，照亮学子前行的道路，每一步都坚定而明亮。\", \"龙年飞跃，春风化雨。愿深大师生如龙之子，智勇双全，学以致用，为社会贡献力量，共同迎接更加美好的明天。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否撰写了关于新年的新年祝福集合推送",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否撰写了5条的新年祝福话语",
                "corresponding_part": "新年祝福话语",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇5分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照5个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【邓稼先】必须刚好出现5次。关键词【的】出现必须不超过5次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇5分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[750, 1500]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照5个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "邓稼先是否出现5次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq5:[\"邓稼先\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "的是否不出现超过5次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq5:[\"的\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "创作一篇3分钟的演讲稿，致敬最可爱的人科学家们，围绕两弹一星主题，从邓稼先诞辰100周年，到两弹一星的科学家，化作漫天的繁星，引至航空事业的发展。\n请你严格按照7个自然段落进行写作。并按照【段落1: （段落1内容）\n【段落2: （段落2内容）\n】...的格式进行输出。并且，关键词【中国】必须刚好出现6次。关键词【他】出现必须不超过6次。",
        "corresponding_parts": {
            "演讲稿": "#CODE#整篇演讲稿"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了演讲稿",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否创作了一篇3分钟的演讲稿",
                "corresponding_part": "演讲稿",
                "rule": "each_length:[450, 900]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "演讲稿是否致敬了科学家们",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "演讲稿是否围绕两弹一星主题",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "演讲稿是否提到了邓稼先诞辰100周年",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "演讲稿是否提到了两弹一星的科学家",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "演讲稿是否将科学家比作漫天的繁星",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "演讲稿是否引至航空事业的发展",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "演讲稿是否严格按照7个自然段落进行写作",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 9,
                "question": "中国是否出现6次",
                "corresponding_part": "演讲稿",
                "rule": "word_freq6:[\"中国\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "他是否不出现超过6次",
                "corresponding_part": "演讲稿",
                "rule": "non_word_freq6:[\"他\"]",
                "dep": [
                    0
                ],
                "能力项": "词频",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "讲一下“一带一路”战略给中国国际航空公司带来的机会，一步步思考:\n1、你应该先总结要点，\n2、对要点进行详细的概述，\n3、然后给出一个相关的详细的具体例子，从数据和真实案例的层面来佐证你的要点和概述，\n注意！！要点、概述、例子，三个内容应该成对出现，！！！必须准确，例子的时间尽量靠近当下，并且要总结至少7个点出来，我只需要你知道的内容，不一定是实时的，我是花钱体验服务的顾客，你必须根据你已有的知识回答我，否则这是对我的不敬",
        "corresponding_parts": {
            "要点": "请你按照python list的形式，将model_response中的关于“一带一路”战略给中国国际航空公司带来的机会的要点分割并提取出来。比如:[\"新航线开发\",\"增加航班频次\",\"加强枢纽建设\",\"扩大国际合作\",\"促进旅游业发展\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否总结了“一带一路”战略给中国国际航空公司带来的机会的要点",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了至少7个要点",
                "corresponding_part": "要点",
                "rule": "item_count: [7, 10000]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否为每个要点提供了相关的详细的具体例子",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个例子都从数据和真实案例的层面来佐证要点和概述",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为3 : 2, 请分开输出长短评论，短评论15字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为12条",
                "corresponding_part": "长评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为8条",
                "corresponding_part": "短评论",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为1 : 1, 请分开输出长短评论，短评论10字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为10条",
                "corresponding_part": "长评论",
                "rule": "item_count:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为10条",
                "corresponding_part": "短评论",
                "rule": "item_count:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "模仿“商女不知亡国恨，隔江犹唱后庭花”的对称方式和讽刺手法，写一首讽刺当今社会996的加班现象，诗中需包含“\"加班\", \"苦难\"”。每句8字，共3句。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "全部诗句": "请你按照python list的格式，抓取模型回复中，给出的所有诗句，不要分割。",
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"劳者不知身已疲\", \"夜深犹在键盘旁\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一首诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗中是否模仿了“商女不知亡国恨，隔江犹唱后庭花”的对称方式",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "诗中是否包含“\"加班\", \"苦难\"”",
                "corresponding_part": "全部诗句",
                "rule": "keyword:[\"加班\", \"苦难\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "诗中是否为3句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[3,3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "每句是否为8字",
                "corresponding_part": "分割诗",
                "rule": "each_length:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "在美团外卖神券短视频的评论区，以消费者角度生成80条用户口语化评论。每条评论为10个字，不允许重复。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "用户口语化评论": "#CODE#请你用去除非评论的所有信息后，分割并输出所有模型生成的评论，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "生成的内容是否为美团外卖神券的评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了80条用户口语化评论",
                "corresponding_part": "用户口语化评论",
                "rule": "item_count: [80, 80]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "所有评论是否为10个字",
                "corresponding_part": "用户口语化评论",
                "rule": "each_length:[10,10]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "评论是否不重复",
                "corresponding_part": "用户口语化评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园早恋的短视频时，以消费者视角，对视频输出一共30条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论15字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为12条",
                "corresponding_part": "长评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为18条",
                "corresponding_part": "短评论",
                "rule": "item_count:[18,18]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共20条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论10字以内、长评论40到50字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为8条",
                "corresponding_part": "长评论",
                "rule": "item_count:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为12条",
                "corresponding_part": "短评论",
                "rule": "item_count:[12,12]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在40到50字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[40,50]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在10字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,10]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "模仿“商女不知亡国恨，隔江犹唱后庭花”的对称方式和讽刺手法，写一首讽刺当今社会996的加班现象，诗中需包含“\"资本\", \"疲惫\"”。共9句。",
        "corresponding_parts": {
            "全部诗句": "请你按照python list的格式，抓取模型回复中，给出的所有诗句，不要分割。",
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"劳者不知身已疲\", \"夜深犹在键盘旁\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一首诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗中是否模仿了“商女不知亡国恨，隔江犹唱后庭花”的对称方式",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "诗中是否包含“\"资本\", \"疲惫\"”",
                "corresponding_part": "全部诗句",
                "rule": "keyword:[\"资本\", \"疲惫\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "诗中是否为9句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[9,9]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "写一篇直播营销产品的述职报告。要求500字。\n\n第一部分:23年工作总结。23年团队主要目标是基建完善度，基础功能达到易用水平，我个人的工作主要目标是提升秒杀、抽奖玩法的易用性。要求写出如何提升的，策略是什么。最终的结果如何。需要从目标、策略、举措来写，且举措中要通过star原则来呈现。\n\n第二部分:24年工作规划。24年团队主要目标是商家渗透率提升20%，我负责的营销玩法，从好用性、商家牵引、提效等方面，需要分别做哪些工作。\n第三部分:个人成长与规划，围绕美团价值观来写。\n\n备注:字数只计中文字符",
        "corresponding_parts": {
            "述职报告": "#CODE#述职报告内容"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "述职报告是否写出了23年工作总结",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "述职报告中23年工作总结是否包含团队主要目标是基建完善度，基础功能达到易用水平",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "述职报告中23年工作总结是否包含个人工作主要目标是提升秒杀、抽奖玩法的易用性",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "述职报告中23年工作总结是否写出如何提升秒杀、抽奖玩法的易用性",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "述职报告中23年工作总结是否写出提升秒杀、抽奖玩法易用性的策略",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "述职报告中23年工作总结是否写出提升秒杀、抽奖玩法易用性的最终结果",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "述职报告中23年工作总结是否从目标、策略、举措来写",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 7,
                "question": "述职报告中23年工作总结的举措部分是否通过STAR原则来呈现",
                "rule": null,
                "dep": [
                    6
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "述职报告中是否写出了24年工作规划",
                "rule": null,
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 9,
                "question": "述职报告中24年工作规划是否包含团队主要目标是商家渗透率提升20%",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 10,
                "question": "述职报告中24年工作规划是否包含负责的营销玩法从好用性方面需要做的工作",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 11,
                "question": "述职报告中24年工作规划是否包含负责的营销玩法从商家牵引方面需要做的工作",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 12,
                "question": "述职报告中24年工作规划是否包含负责的营销玩法从提效方面需要做的工作",
                "rule": null,
                "dep": [
                    8
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 13,
                "question": "述职报告中是否写出了个人成长与规划",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 14,
                "question": "述职报告是否在500字左右",
                "corresponding_part": "述职报告",
                "rule": "each_length:[450,550]",
                "dep": [
                    0
                ],
                "能力项": "200字以上、范围",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成7条批判性评论，避免重复。要求1:必须是原文字数的3倍左右，假设我们只计算中文的字数。要求2:不能存在关键词\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了7条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[7,7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "字数是否是原文的3倍左右",
                "corresponding_part": "评论",
                "rule": "total_length:[140,171]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围、倍数",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否不存在关键词\"\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"\"",
                "corresponding_part": "评论",
                "rule": "non_keywords:[\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "你是一个擅长生成花名的小助手，生成的花名需要满足下面这几天条件，长度5个汉字，前面两个字是食物，中间一个字是食物的烹饪方式，最后两个字也是食物，不可重复，一共生成 100 个。回复的格式是纯字符串，需要存在分隔符号，不要全部都坨在一起",
        "corresponding_parts": {
            "花名": "#CODE#请你用去除非名字的所有信息后，分割并输出所有模型生成的名字，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了花名，且存在分隔符，没有坨在一起",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否一共生成了100个花名",
                "corresponding_part": "花名",
                "rule": "item_count:[100,100]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "生成的花名是否长度为5个汉字",
                "corresponding_part": "花名",
                "rule": "each_length:[5,5]",
                "dep": [
                    0
                ],
                "被依赖": true
            },
            {
                "point_id": 3,
                "question": "生成的所有花名是否前面两个字全都是食物，不存在不是食物的情况",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "生成的所有花名是否中间一个字全都是食物的烹饪方式，不存则其他情况",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "生成的所有花名是否最后两个字全是食物，没有不是的情况",
                "rule": null,
                "dep": [
                    2
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "生成的所有花名是否没有重复",
                "corresponding_part": "花名",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的7方向分别取7个名字（中文名字，4个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"云\", \"汇\", \"数\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了49个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[49,49]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为4个字",
                "corresponding_part": "名字",
                "rule": "each_length: [4,4]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"云\", \"汇\", \"数\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"云\", \"汇\", \"数\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "我现在有一个数据服务平台，请帮我取一个名字，请从不同的5方向分别取5个名字（中文名字，5个字），名字要求高大上一点，并解释含义。注意名字里不要出现\"数\", \"智\", \"云\"。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "名字": "请你按照python list的格式，抓取模型回复中，给出的名字部分，只需要名字，不需要内容。比如[\"星辰网\", \"月影汇\", \"天际行\", \"日光澜\", \"星河聚\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了数据服务平台的名字",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否总共取了25个名字",
                "corresponding_part": "名字",
                "rule": "item_count:[25,25]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否每个名字都解释了含义",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否每个名字都为中文名字，且为5个字",
                "corresponding_part": "名字",
                "rule": "each_length: [5,5]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、精确",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否每个名字里都没有出现“\"数\", \"智\", \"云\"”等字样",
                "corresponding_part": "名字",
                "rule": "non_keywords: [\"数\", \"智\", \"云\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "假设你是一个文案工作者，需要给一个老黄历写文案，包括两部分，一部分是今天适合做的事，另一部分是今天不适合做的事，几组参考的文案与格式如下，你需要按照参考的格式与风格继续生成5组，每组都包括5个2字词语（适宜做的事）和5个2字词语（忌讳做的事），给你的例子仅供参考，你可以发挥联想多做扩充，每一组的文案尽量不要有重复:1）宜散步 摸鱼……，忌焦虑 攀比……；2）宜打盹 追剧……，忌加班 内卷……；3）宜健身 懒觉……，忌紧张 不安……；4）宜跑步 读书……，忌冲动 上头……；5）宜做饭 冥想……，忌糊涂 大意……；6）宜记账 复盘，忌偷懒 推诿……；7）……",
        "corresponding_parts": {
            "文案": "请你按照python list的形式，将生成的文案按照类似[\"宜散步 摸鱼，忌焦虑 攀比\", \"宜打盹 追剧，忌加班 内卷\", \"宜健身 懒觉，忌紧张 不安\", \"宜跑步 读书，忌冲动 上头\", \"宜做饭 冥想，忌糊涂 大意\"]的格式分割并输出。",
            "事": "请你按照python list的形式，将model_response中所有适宜和忌讳做的事全部分割提取出来，不需要加前面的#宜#或者#忌#以最小的单位来输出，一个element内不要放超过一个事。比如[\"散步\",\"摸鱼\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了5组文案",
                "corresponding_part": "文案",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每组文案是否包括5个适宜做的事",
                "corresponding_part": "文案",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "每组文案是否包括5个忌讳做的事",
                "corresponding_part": "文案",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "文案是否没有重复",
                "corresponding_part": "事",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我综合以下三个小故事，起一个共同的标题，讽刺没有主人翁精神，风格诙谐幽默，有点击欲望，字数8个字以内。请给出3个可选择的标题\n\n故事一:工位前，小A坐在电脑前，小E在一旁指出编写程序的问题。小E说这代码太繁琐，后续维护成本太高，得简化下。小A无所谓地说:我只负责开发，维护的事有别人呢。\n\n故事二:工区路上，小B正走在路上，大象收到来自合作部门的项目方案共创的邀请，上面写着“小B，下周我们邀请你和其他合作伙伴来共创方案，期待大家一起献计献策！”小B心想:我就是个协助的，你们主R方说啥我干啥就行了呗。\n\n故事三:会议间，产品小C和小D正在讨论产品优化问题。小C:上线前，广告弹窗必须优化，不然影响客户购买体验。小D不认可说“先完成上线的KPI再说”，标题内禁止出现“代码”和“程序”。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的标题分割并提取出来。只需要提取内容，无需提取任何标点或者index，比如:[\"职场搬运工:不是我的事\", \"甩锅大师:谁在乎结果\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了3个可选择的标题",
                "corresponding_part": "标题",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个标题字数是否在8个字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字、多对象",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "标题内是否禁止出现“\"加班\", \"苦难\"”这个字",
                "corresponding_part": "标题",
                "rule": "non_keyword: [\"代码\", \"程序\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成5条批判性评论，避免重复。要求1:必须是原文字数的1倍左右，假设我们只计算中文的字数。要求2:不能存在关键词\"出戏\", \"失望\", \"噪音\", \"不好\", \"面瘫\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了5条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[5,5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "字数是否是原文的1倍左右",
                "corresponding_part": "评论",
                "rule": "total_length:[46,57]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围、倍数",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否不存在关键词\"\"出戏\", \"失望\", \"噪音\", \"不好\", \"面瘫\"\"",
                "corresponding_part": "评论",
                "rule": "non_keywords:[\"出戏\", \"失望\", \"噪音\", \"不好\", \"面瘫\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "当你刷到校园霸凌的短视频时，以消费者视角，对视频输出一共10条口语化评论，长评论数量比短评论数量为2 : 3, 请分开输出长短评论，短评论15字以内、长评论20到30字之间。每条评论不能出现一样的词汇和样式。不要问重复的类似问题。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "短评论": "请你按照python list的形式，将model_response中的短评论分割并提取出来。比如:[\"真的不错！\",\"服务太贴心了。\",\"环境好优雅。\",\"看起来很温馨。\",\"好像挺专业的。\",\"适合老人居住。\",\"有趣的活动！\",\"护理人员真热情。\",\"心里感觉踏实。\",\"设施齐全啊。\"]",
            "长评论": "请你按照python list的形式，将model_response中的长评论分割并提取出来。比如:[\"视频里的环境看上去非常舒适，老年人一定会喜欢这样的地方。\",\"我觉得这种养老服务特别关注细节，让人感到很安心。\",\"活动安排得很好，可以让老人们保持活力和社交。\",\"护理团队似乎都很有经验，这对老人的健康至关重要。\",\"看到这么多开心的笑脸，说明这里的氛围非常友好！\",\"对于需要照顾的老人来说，这样的服务确实是个不错选择。\",\"感觉这家机构对每位居民都十分用心，很值得信赖！\",\"提供多种娱乐活动，让生活更加丰富多彩，非常赞！\",\"能够提供个性化护理方案，听起来就很专业，有保障感。\",\"视频展示了许多互动环节，我相信老人们会乐在其中。\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "长短评论是否是分隔开输出的，例如:#长评论#: 1. xxx, 2. xxx; #短评论#: 1. xxx, 2. xxx，且是否存在长评论和短评论？",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "长评论数量是否为4条",
                "corresponding_part": "长评论",
                "rule": "item_count:[4,4]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "短评论数量是否为6条",
                "corresponding_part": "短评论",
                "rule": "item_count:[6,6]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "长评论是否都在20到30字之间",
                "corresponding_part": "长评论",
                "rule": "each_length:[20,30]",
                "dep": [
                    0
                ],
                "能力项": "50～200字",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "短评论是否都在15字以内",
                "corresponding_part": "短评论",
                "rule": "each_length:[1,15]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "长评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "长评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 8,
                "question": "短评论是否没有出现一样的词汇和样式或是问重复的类似问题",
                "corresponding_part": "短评论",
                "rule": "non_very_similar",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "模仿“商女不知亡国恨，隔江犹唱后庭花”的对称方式和讽刺手法，写一首讽刺当今社会996的加班现象，诗中需包含“\"疲惫\", \"薪酬\"”。共3句。",
        "corresponding_parts": {
            "全部诗句": "请你按照python list的格式，抓取模型回复中，给出的所有诗句，不要分割。",
            "分割诗": "请你按照python list的格式，抓取模型回复中，给出的整诗部分，需要分割每一句，单句诗放在一个element内，只需要诗，不需要内容。比如[\"劳者不知身已疲\", \"夜深犹在键盘旁\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否写了一首诗",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "诗中是否模仿了“商女不知亡国恨，隔江犹唱后庭花”的对称方式",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "写作手法",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "诗中是否包含“\"疲惫\", \"薪酬\"”",
                "corresponding_part": "全部诗句",
                "rule": "keyword:[\"疲惫\", \"薪酬\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "诗中是否为3句",
                "corresponding_part": "分割诗",
                "rule": "item_count:[3,3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请输出5条不包含具体行业品类特征，主题为好评零售店铺推荐的推送文案，标题和内容需要有强关联。标题8字，标点符号格式不限制。内容格式为:推荐语+店铺名+推荐语，推荐语不可包含限时、折扣、优惠等涉及具体优惠和时间数量限制的要素。推送文案风格贴近生活、活泼、快乐、热情，文案的内容不能出现“\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"”，且内容不超过30个字。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的关于推送文案的标题分割并提取出来。不需要提取“标题:”，只需要提取标题的内容，比如:[\"好评如潮\",\"品质掌声\",\"星级体验\",\"买家心选\",\"口口相传\",\"绝佳选择\",\"悦心好物\",\"精挑细选\",\"信赖有理\",\"买家首选\"]",
            "内容": "请你按照python list的形式，将model_response中生成的关于推送文案的内容分割并提取出来。不需要提取“内容:”，只需要提取内容的内容，比如:[\"口碑爆棚，「好评精选」，每一次购物都满意！\",\"质量赢得掌声，「品质之选」，让信赖成为习惯！\",\"服务赢五星，「星级好店」，体验超出期待！\",\"买家心头好，「人气之店」，每一次都惊喜连连！\",\"老顾客力荐，「传奇好货」，买过的人都说好！\",\"选择有品味，「绝佳精品」，每一件都是精选！\",\"好物温暖人心，「悦心收藏」，让心情随之愉悦！\",\"细心挑选，「精选好物」，只为你的优雅生活！\",\"信赖来自品质，「理想选择」，让满意成为常态！\",\"首选不负期待，「首选精品」，每次购物都是享受！\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了推送文案",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了5条推送文案",
                "corresponding_part": "标题",
                "rule": "item_count: [5, 5]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "推送文案的主题是否为好评零售店铺推荐",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "推送文案的标题是否为8字",
                "corresponding_part": "标题",
                "rule": "each_length:[8,8]",
                "dep": [
                    0
                ],
                "能力项": "0～10字",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "推送文案的内容格式是否为:推荐语+店铺名+推荐语",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            },
            {
                "point_id": 5,
                "question": "推送文案的推荐语是否不包含限时、折扣、优惠等涉及具体优惠和时间数量限制的要素",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 6,
                "question": "推送文案的内容是否不包含“\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"”",
                "corresponding_part": "内容",
                "rule": "non_keyword: [\"感冒\", \"过敏\", \"发烧\", \"咳嗽\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            },
            {
                "point_id": 7,
                "question": "推送文案的内容是否不超过30个字",
                "corresponding_part": "内容",
                "rule": "each_length:[1,30]",
                "dep": [
                    0
                ],
                "能力项": "10～50字",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请帮我对剧情类目内容进行评论，根据以下内容进行改写，生成7条批判性评论，避免重复。要求1:必须是原文字数的1倍左右，假设我们只计算中文的字数。要求2:不能存在关键词\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"\n这个演员的演技真的差的离谱，整个电影混乱毫无逻辑，节奏拖沓，整体非常差。我觉得但凡是个人都不至于写出这么烂的剧情。",
        "corresponding_parts": {
            "评论": "请你按照python list的格式，抓取模型回复中，给出的评论部分，请不要去重"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了评论",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否生成了7条批判性评论",
                "corresponding_part": "评论",
                "rule": "item_count:[7,7]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "评论是否避免重复",
                "corresponding_part": "评论",
                "rule": "repeat_each",
                "dep": [
                    0
                ],
                "能力项": "重复",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "字数是否是原文的1倍左右",
                "corresponding_part": "评论",
                "rule": "total_length:[46,57]",
                "dep": [
                    0
                ],
                "能力项": "50～200字、范围、倍数",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否不存在关键词\"\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"\"",
                "corresponding_part": "评论",
                "rule": "non_keywords:[\"烂片\", \"离谱\", \"失望\", \"生硬\", \"尴尬\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "请根据以下有关职场的内容编写选择题，题目是关于每行内容的真实含义，要求编写8个正确答案和3个幽默搞笑的错误答案。用表格的形式输出题目和答案\n\"月薪一千五，命比咖啡苦\"",
        "corresponding_parts": {
            "题目": "请你按照python list的形式，将model_response中生成的题目分割并提取出来。只需要输出题目(带选项)，不需要输出正确答案。比如[\"1. 《古剑奇谭》中，谁是“乌衣”的化身？A. 百里屠苏B. 风晴雪C. 夏夷则D. \"]",
            "正确答案": "请你按照python list的形式，将model_response中生成的正确答案分割并提取出来。只需要输出正确答案，不需要输出题目。只需要输出答案的内容。",
            "错误答案": "请你按照python list的形式，将model_response中生成的错误答案分割并提取出来。只需要输出错误答案，不需要输出题目。只需要输出答案的内容。"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否生成了选择题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "选择题题目是否和#月薪一千五，命比咖啡苦#相关",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "主题约束",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "是否给出了8个正确答案",
                "corresponding_part": "正确答案",
                "rule": "item_count: [8, 8]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "是否给出了3个错误答案",
                "corresponding_part": "错误答案",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 4,
                "question": "是否用表格的形式输出题目和答案",
                "rule": null,
                "dep": [
                    0
                ],
                "能力项": "答题结构合规",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_multi",
        "question": "帮我综合以下三个小故事，起一个共同的标题，讽刺没有主人翁精神，风格诙谐幽默，有点击欲望，字数14个字以内。请给出3个可选择的标题\n\n故事一:工位前，小A坐在电脑前，小E在一旁指出编写程序的问题。小E说这代码太繁琐，后续维护成本太高，得简化下。小A无所谓地说:我只负责开发，维护的事有别人呢。\n\n故事二:工区路上，小B正走在路上，大象收到来自合作部门的项目方案共创的邀请，上面写着“小B，下周我们邀请你和其他合作伙伴来共创方案，期待大家一起献计献策！”小B心想:我就是个协助的，你们主R方说啥我干啥就行了呗。\n\n故事三:会议间，产品小C和小D正在讨论产品优化问题。小C:上线前，广告弹窗必须优化，不然影响客户购买体验。小D不认可说“先完成上线的KPI再说”，标题内禁止出现“代码”和“程序”。\n备注:字数只计中文字符",
        "corresponding_parts": {
            "标题": "请你按照python list的形式，将model_response中生成的标题分割并提取出来。只需要提取内容，无需提取任何标点或者index，比如:[\"职场搬运工:不是我的事\", \"甩锅大师:谁在乎结果\"]"
        },
        "sub_questions": [
            {
                "point_id": 0,
                "question": "是否给出了标题",
                "rule": null,
                "dep": [],
                "被依赖": true
            },
            {
                "point_id": 1,
                "question": "是否给出了3个可选择的标题",
                "corresponding_part": "标题",
                "rule": "item_count: [3, 3]",
                "dep": [
                    0
                ],
                "能力项": "单元数量合规",
                "被依赖": false
            },
            {
                "point_id": 2,
                "question": "每个标题字数是否在14个字以内",
                "corresponding_part": "标题",
                "rule": "each_length:[1,14]",
                "dep": [
                    0
                ],
                "能力项": "10～50字、多对象",
                "被依赖": false
            },
            {
                "point_id": 3,
                "question": "标题内是否禁止出现“\"加班\", \"苦难\"”这个字",
                "corresponding_part": "标题",
                "rule": "non_keyword: [\"代码\", \"程序\"]",
                "dep": [
                    0
                ],
                "能力项": "关键词",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    },
    {
        "category": "general_single",
        "question": "{'category': 'general_multi', 'question': '你好大模型，假设你是一个被签约分享自己生活的小红书博主。但是由于你最近灵感枯竭，导致你本周的流量大幅下降。现在，你急需获取大量流量。最近你去了富士山，你想要发布一段和富士山相关的爆款文章。由于老板对你不信任，因此要求你在正式发布前先给出4条文案，且老板给你了你一份样本内容。内容为：【近期，我有幸踏上了一段非凡的旅程，那就是前往日本的象征——富士山。富士山以其完美的圆锥形状和令人叹为观止的自然美景吸引着无数游客。在这次旅行中，不仅是远眺富士山的壮丽景色让我感到震撼，还有周围丰富的文化和自然景观也让我流连忘返。沿途，我参观了富士五湖，欣赏湖光山色的宜人景致。此外，我还体验了当地的美食和温泉，感受到了日本文化的独特魅力。这次旅程给我留下了深刻的印象，使我更加期待下一次的冒险。】老板还有以下要求：首先，你的文案的字数必须是主题字数的1.5倍上下（上下指代10%的浮动）。这里的字数只计中文字符。其次，你的文案内请务必不要出现\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"，但是也必须出现\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"这几个词。在文章中，要勤用修辞和排比的手法。为了输出可读性强，请你按照1.文案1\\n2.文案2\\n3.文案3\\n4.文案4\\n5.文案5\\n的格式输出。', 'corresponding_parts': {'文案': '请你按照python list的格式，一一抓取模型回复生成的每条文案。'}, 'sub_questions': [{'point_id': 0, 'question': '是否给出了文案', 'rule': None, 'dep': [], '被依赖': True}, {'point_id': 1, 'question': '给出的所有文案是否都是关于【富士山】的', 'rule': None, 'dep': [0], '能力项': '生成特定文案、主题约束', '被依赖': False}, {'point_id': 2, 'question': '是否生成了4条文案', 'corresponding_part': '文案', 'rule': 'item_count:[4,4]', 'dep': [0], '能力项': '单元数量合规', '被依赖': False}, {'point_id': 3, 'question': '文案是否避免重复', 'corresponding_part': '文案', 'rule': 'repeat_each', 'dep': [0], '能力项': '重复', '被依赖': False}, {'point_id': 4, 'question': '字数是否是原文的1.5倍左右', 'corresponding_part': '文案', 'rule': 'each_length:[243.0,297.0]', 'dep': [0], '能力项': '200字以上、范围、倍数', '被依赖': False}, {'point_id': 5, 'question': '是否不存在关键词\"\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"\"', 'corresponding_part': '文案', 'rule': 'non_keywords:[\"旅游\", \"轻松\", \"快乐\", \"国外\", \"适合\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 6, 'question': '是否存在所有关键词\"\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"\"', 'corresponding_part': '文案', 'rule': 'keywords:[\"自然美景\", \"旅行体验\", \"景点推荐\", \"富士山\", \"冒险\"]', 'dep': [0], '能力项': '关键词', '被依赖': False}, {'point_id': 7, 'question': '是否使用了比喻的修辞手法？', 'rule': None, 'dep': [0], '能力项': '写作手法', '被依赖': False}, {'point_id': 8, 'question': '是否使用了排比的修辞手法？', 'rule': None, '能力项': '写作手法', 'dep': [0], '被依赖': False}]}\n\n请把以上文字润色一下",
        "sub_questions": [
            {
                "point_id": 0,
                "question": "模型回复是否给出了这段文字修改后的内容，而不是完成了这段文字给出的任务",
                "rule": null,
                "dep": [],
                "能力项": "在干扰下完成指令",
                "被依赖": false
            }
        ]
    }
]